#LyX 2.2 created this file. For more info see http://www.lyx.org/
\lyxformat 508
\begin_document
\begin_header
\save_transient_properties true
\origin unavailable
\textclass scrbook
\begin_preamble
\usepackage[nottoc]{tocbibind} 
\usepackage{hyperref}
\usepackage{tikz}

\usepackage{datetime}
\newdate{date}{16}{05}{2016}
\date{\displaydate{date}}

%\tikzstyle{every node}=[circle, draw=black,inner sep=0.2em]
%\usetikzlibrary{fixedpointarithmetic}
%\usetikzlibrary{positioning}
%\let\nchapter\chapter
%\renewcommand*\chapter[1]{\nchapter*{#1}\addcontentsline{toc}{chapter}{#1}}
%\theoremstyle{definition}
%\newtheorem{notation}[thm]{Notation}
%\newtheorem*{notation*}{Notation}
%\numberwithin{thm}{chapter}

%\usepackage{prettyref}
%\newrefformat{chap}{\textbf{Kapitel~\ref{#1}}}
%\newrefformat{sec}{\textbf{Abschnitt~\ref{#1}}}
%\newrefformat{sub}{\textbf{Abschnitt~\ref{#1}}}
%\newrefformat{thm}{\textbf{Theorem~\ref{#1}}}
%\newrefformat{lem}{\textbf{Lemma~\ref{#1}}}
%\newrefformat{prop}{\textbf{Satz~\ref{#1}}}
\end_preamble
\use_default_options true
\begin_modules
theorems-ams
enumitem
theorems-chap
theorems-ams-extended
\end_modules
\maintain_unincluded_children false
\begin_local_layout
Format 49
Style Email
Font
Size                Larger
Family             Typewriter
EndFont
LatexType      command
LatexName    email
End
\end_local_layout
\language ngerman
\language_package default
\inputencoding utf8
\fontencoding global
\font_roman "default" "default"
\font_sans "default" "default"
\font_typewriter "default" "default"
\font_math "auto" "auto"
\font_default_family default
\use_non_tex_fonts false
\font_sc false
\font_osf false
\font_sf_scale 100 100
\font_tt_scale 100 100
\graphics default
\default_output_format default
\output_sync 0
\bibtex_command default
\index_command default
\paperfontsize default
\spacing onehalf
\use_hyperref false
\papersize default
\use_geometry true
\use_package amsmath 1
\use_package amssymb 1
\use_package cancel 1
\use_package esint 1
\use_package mathdots 1
\use_package mathtools 1
\use_package mhchem 1
\use_package stackrel 1
\use_package stmaryrd 1
\use_package undertilde 1
\cite_engine basic
\cite_engine_type default
\biblio_style plain
\use_bibtopic false
\use_indices false
\paperorientation portrait
\suppress_date false
\justification true
\use_refstyle 1
\index Index
\shortcut idx
\color #008000
\end_index
\bottommargin 15pheight%
\secnumdepth 3
\tocdepth 3
\paragraph_separation skip
\defskip medskip
\quotes_language german
\papercolumns 1
\papersides 2
\paperpagestyle default
\tracking_changes false
\output_changes false
\html_math_output 0
\html_css_as_file 0
\html_be_strict false
\end_header

\begin_body

\begin_layout Title
Logische Charakterisierungen von Symmetrischen Schaltkreisfamilien
\end_layout

\begin_layout Subject
Master-Arbeit
\end_layout

\begin_layout Author
Christoph Burschka
\end_layout

\begin_layout Publishers

\shape smallcaps
Goethe-Universität Frankfurt am Main
\begin_inset Newline newline
\end_inset


\size normal
Institut für Informatik
\end_layout

\begin_layout Standard
\begin_inset CommandInset toc
LatexCommand tableofcontents

\end_inset


\end_layout

\begin_layout Chapter
Einleitung
\end_layout

\begin_layout Standard
Wir modellieren Graphen und Datenbanken als Strukturen, die ein Schema von
 relationalen Prädikaten über einem endlichen Universum interpretieren.
 Eine Datenbank-Anfrage in einem solchen Schema wird als Funktion modelliert,
 die jede endliche Struktur auf eine Relation abbildet.
\end_layout

\begin_layout Standard
Von besonderem Interesse ist die Datenkomplexität solcher Anfragen: Die
 Zeit- und Platzkomplexität der Auswertung einer festen Anfrage in Abhängigkeit
 von der Größe der eingegebenen Struktur.
 Wir betrachten zwei Modelle, in denen alle beschreibbaren Anfragen eine
 beschränkte Datenkomplexität besitzen:
\end_layout

\begin_layout Enumerate
Klassen von booleschen Schaltkreisfamilien 
\begin_inset Formula $\left(\mathcal{C}_{n}\right)_{n\in\mathbb{N}}$
\end_inset

 (mit 
\begin_inset Formula $\mathtt{AND}$
\end_inset

-, 
\begin_inset Formula $\mathtt{OR}$
\end_inset

-, 
\begin_inset Formula $\mathtt{NOT}$
\end_inset

-, und gegebenenfalls Majority-Gates).
\end_layout

\begin_layout Enumerate
Formeln der Prädikatenlogik erster Stufe (beziehungsweise deren Erweiterungen).
\end_layout

\begin_layout Standard
Boolesche Schaltkreise arbeiten per Definition auf einer geordneten Struktur.
 Für ungeordnete Strukturen wird deshalb eine beliebige Ordnung gewählt
 und gefordert, dass das Ergebnis bezüglich der Ordnung invariant ist.
 Wir führen eine strukturelle Einschränkung (Symmetrie) der Schaltkreise
 ein, die diese Invarianz garantiert.
\end_layout

\begin_layout Standard
Die Schaltkreisfamilie besteht aus einer unendlichen Sequenz von Schaltkreisen
 für jede Eingabegröße 
\begin_inset Formula $n\in\mathbb{N}$
\end_inset

 ist.
 Ohne Einschränkung kann eine solche Sequenz auch unentscheidbare Klassen
 von natürlichen Zahlen kodieren.
 In der Praxis ist es daher erwünscht, dass die Schaltkreise von einem effizient
en Algorithmus berechnet werden: Ist zum Beispiel jeder Schaltkreis in Polynomia
lzeit oder mit logarithmischem Platz (in Abhängigkeit von 
\begin_inset Formula $n$
\end_inset

) berechenbar, dann nennen wir die Schaltkreisfamilie 
\begin_inset Formula $P$
\end_inset

- beziehungsweise 
\begin_inset Formula $\mathrm{LOGSPACE}$
\end_inset

-uniform.
\end_layout

\begin_layout Standard
Die Logik erster Stufe ist in der Praxis zu eingeschränkt: Selbst einfache
 Probleme wie die Frage, ob eine Struktur eine gerade Anzahl von Elementen
 enthält, oder zwei Knoten durch einen Weg beliebiger Länge verbunden sind,
 können nicht ausgedrückt werden.
\begin_inset CommandInset citation
LatexCommand cite
key "Libkin2012"

\end_inset

 Daher erweitern wir die Logik um Fixpunkt-Operatoren, numerische Prädikate
 und Zähler.
 Insbesondere betrachten wir Logiken, in denen die numerischen Prädikate
 
\emph on
disjunkt
\emph default
 von dem Universum der eigentlichen Struktur interpretiert werden, und weisen
 nach, dass solche Logiken gerade die verschiedenen Klassen symmetrischer
 Schaltkreisfamilien charakterisieren.
\end_layout

\begin_layout Standard
Konkret ist die Klasse der symmetrischen 
\begin_inset Formula $P$
\end_inset

-uniformen booleschen Schaltkreisfamilien 
\begin_inset Formula $\mathrm{SBC}^{P}$
\end_inset

 äquivalent zu der Logik erster Stufe mit Fixpunkt-Operator und disjunktem
 Ordnungsprädikat 
\begin_inset Formula $\mathrm{FP}+\mathbf{ORD}$
\end_inset

.
 Das Ergebnis wurde 2014 von Matthew Anderson und Anuj Dawar
\begin_inset CommandInset citation
LatexCommand cite
key "AD2014"

\end_inset

 veröffentlicht (nach einem verwandten Ergebnis für infinitäre Logik und
 lokal polynomiell beschränkte Schaltkreise von Martin Otto in 1997
\begin_inset CommandInset citation
LatexCommand cite
key "Otto1997"

\end_inset

), und bildet die Grundlage dieser Arbeit.
\end_layout

\begin_layout Standard
Die logische Zählerweiterung 
\begin_inset Formula $\mathrm{FP}+C$
\end_inset

 charakterisiert die symmetrische 
\begin_inset Formula $P$
\end_inset

-uniforme Schaltkreisklasse 
\begin_inset Formula $\left(\mathrm{SBC}+\mathbf{MAJ}\right)^{P}$
\end_inset

 mit einem Majority-Gate, und die Erweiterung der Logik um beliebige numerische
 Prädikate 
\begin_inset Formula $\mathrm{FP}+\mathbf{ARB}$
\end_inset

 charakterisiert die 
\begin_inset Formula $P/\mathrm{poly}$
\end_inset

-uniforme Klasse 
\begin_inset Formula $\mathrm{SBC}^{P/\mathrm{poly}}$
\end_inset

.
 Diese beiden Erweiterungen sind miteinander kombinierbar.
\end_layout

\begin_layout Theorem

\series bold
\begin_inset CommandInset label
LatexCommand label
name "thm:fp"

\end_inset

Anderson und Dawar (2014)
\end_layout

\begin_layout Theorem
Die folgenden Paare von Anfragenklassen sind auf endlichen Strukturen äquivalent
:
\begin_inset Separator latexpar
\end_inset


\end_layout

\begin_deeper
\begin_layout Enumerate
\begin_inset Formula $\mathrm{FP}+\mathbf{ORD}$
\end_inset

 und 
\begin_inset Formula $\mathrm{SBC}^{P}$
\end_inset


\end_layout

\begin_layout Enumerate
\begin_inset Formula $\mathrm{FP}+\mathbf{ORD}+C$
\end_inset

 und 
\begin_inset Formula $\left(\mathrm{SBC}+\mathbf{MAJ}\right)^{P}$
\end_inset


\end_layout

\begin_layout Enumerate
\begin_inset Formula $\mathrm{FP}+\mathbf{ARB}$
\end_inset

 und 
\begin_inset Formula $\mathrm{SBC}^{P/\mathrm{poly}}$
\end_inset


\end_layout

\end_deeper
\begin_layout Standard
Das obige Ergebnis wird für Schaltkreise konstanter Tiefe angepasst.
\end_layout

\begin_layout Theorem
\begin_inset CommandInset label
LatexCommand label
name "thm:fo"

\end_inset

Die folgenden Paare von Anfragenklassen sind auf endlichen Strukturen äquivalent
:
\begin_inset Separator latexpar
\end_inset


\end_layout

\begin_deeper
\begin_layout Enumerate
\begin_inset Formula $\mathrm{FO}+\mathbf{BIT}$
\end_inset

 und 
\begin_inset Formula $\left(\mathrm{SAC}^{0}\right)^{\mathrm{LOGSPACE}}$
\end_inset


\end_layout

\begin_layout Enumerate
\begin_inset Formula $\mathrm{FO}+\mathbf{ARB}$
\end_inset

 und 
\begin_inset Formula $\left(\mathrm{SAC}^{0}\right)^{P/\mathrm{poly}}$
\end_inset


\end_layout

\end_deeper
\begin_layout Standard
Die Einschränkung auf symmetrische Schaltkreisfamilien bringt im Allgemeinen
 eine Reduktion der Ausdrucksstärke mit sich.
 So wird die Klasse 
\begin_inset Formula $\mathrm{AC}^{0}$
\end_inset

 durch die invariante Logik 
\begin_inset Formula $\mathrm{inv}\left(\mathrm{FO}\oplus\mathbf{ARB}\right)$
\end_inset

 (
\begin_inset CommandInset citation
LatexCommand cite
key "Immerman1987,Makowsky1997-FO"

\end_inset

), und 
\begin_inset Formula $P/\mathrm{poly}$
\end_inset

 durch 
\begin_inset Formula $\mathrm{inv}\left(\mathrm{FP}\oplus\mathbf{ARB}\right)$
\end_inset

 (
\begin_inset CommandInset citation
LatexCommand cite
key "Makowsky1997-FO,Makowsky1998-LFP"

\end_inset

) charakterisiert.
\end_layout

\begin_layout Theorem
\begin_inset CommandInset label
LatexCommand label
name "thm:fo-arb"

\end_inset

Für die 
\begin_inset Formula $\mathrm{FO}+\mathbf{ARB}$
\end_inset

-Logik und die arb-invariante 
\begin_inset Formula $\mathrm{FO}\oplus\mathbf{ARB}$
\end_inset

-Logik gilt:
\begin_inset Separator latexpar
\end_inset


\end_layout

\begin_deeper
\begin_layout Enumerate
Jede 
\begin_inset Formula $\mathrm{FO}+\mathbf{ARB}$
\end_inset

-Formel beschreibt eine Anfrage, die durch eine arb-invariante 
\begin_inset Formula $\mathrm{FO}\oplus\mathbf{ARB}$
\end_inset

-Formel definierbar ist.
\end_layout

\begin_layout Enumerate
Es existiert eine Anfrage, die in der arb-invarianten 
\begin_inset Formula $\mathrm{FO}\oplus\mathbf{ARB}$
\end_inset

-Logik, aber nicht 
\begin_inset Formula $\mathrm{FO}+\mathbf{ARB}$
\end_inset

 definierbar ist.
\end_layout

\end_deeper
\begin_layout Standard
Ähnliche Bezüge bestehen vermutlich auch zwischen den symmetrischen und
 nicht-symmetrischen Teilen der übrigen betrachteten Schaltkreisklassen.
\end_layout

\begin_layout Chapter
Grundlegende Definitionen
\end_layout

\begin_layout Section
Notation
\end_layout

\begin_layout Standard
Zunächst legen wir einige Notationen und Abkürzungen fest.
 Im folgenden bezeichne 
\begin_inset Formula $\mathbb{N}$
\end_inset

 die Menge der natürlichen Zahlen einschließlich 
\begin_inset Formula $0$
\end_inset

, 
\begin_inset Formula $\mathbb{R}$
\end_inset

 die Menge der reellen Zahlen, und 
\begin_inset Quotes gld
\end_inset


\begin_inset Formula $\leqslant$
\end_inset


\begin_inset Quotes grd
\end_inset

 (wenn nicht anders definiert) die natürliche Ordnung von 
\begin_inset Formula $\mathbb{R}$
\end_inset

 und 
\begin_inset Formula $\mathbb{N}$
\end_inset

.
 Mit 
\begin_inset Quotes gld
\end_inset

ex.
\begin_inset Quotes grd
\end_inset

, 
\begin_inset Quotes gld
\end_inset

s.d.
\begin_inset Quotes grd
\end_inset

 und 
\begin_inset Quotes gld
\end_inset

f.a.
\begin_inset Quotes grd
\end_inset

 kürzen wir gegebenenfalls 
\begin_inset Quotes gld
\end_inset

es existiert
\begin_inset Quotes grd
\end_inset

, 
\begin_inset Quotes gld
\end_inset

so dass
\begin_inset Quotes grd
\end_inset

 und 
\begin_inset Quotes gld
\end_inset

für alle
\begin_inset Quotes grd
\end_inset

 ab.
\end_layout

\begin_layout Definition

\series bold
\begin_inset CommandInset label
LatexCommand label
name "def:tupel"

\end_inset

Mengen und Tupel
\end_layout

\begin_layout Definition
Mengen benennen wir im allgemeinen durch Großbuchstaben wie 
\begin_inset Formula $A$
\end_inset

, 
\begin_inset Formula $B$
\end_inset

, 
\begin_inset Formula $U$
\end_inset

 oder 
\begin_inset Formula $X$
\end_inset

.
 Für eine Menge 
\begin_inset Formula $A$
\end_inset

 bezeichne 
\begin_inset Formula $2^{A}\coloneqq\left\{ A'\mid A'\subseteq A\right\} $
\end_inset

 die Menge aller Teilmengen von 
\begin_inset Formula $A$
\end_inset

.
\end_layout

\begin_layout Definition
Tupel benennen wir durch Kleinbuchstaben mit Balken wie 
\begin_inset Formula $\bar{a}$
\end_inset

, 
\begin_inset Formula $\bar{b}$
\end_inset

, 
\begin_inset Formula $\bar{u}$
\end_inset

 oder 
\begin_inset Formula $\bar{x}$
\end_inset

.
 Die Stelligkeit 
\begin_inset Formula $\mathrm{ar}\left(\bar{x}\right)$
\end_inset

 eines Tupels 
\begin_inset Formula $\bar{x}$
\end_inset

 sei die Anzahl seiner Elemente, und ein 
\begin_inset Formula $n$
\end_inset

-stelliges Tupel heiße kurz 
\begin_inset Quotes gld
\end_inset


\begin_inset Formula $n$
\end_inset

-Tupel
\begin_inset Quotes grd
\end_inset

.
 Implizit gelte stets 
\begin_inset Formula $\bar{x}=\left(x_{1},\cdots,x_{\left|\mathrm{ar}\left(x\right)\right|}\right)$
\end_inset

.
 Die Menge aller 
\begin_inset Formula $k$
\end_inset

-Tupel einer Menge 
\begin_inset Formula $A$
\end_inset

 sei 
\begin_inset Formula $A^{k}$
\end_inset

.
\end_layout

\begin_layout Definition
Für ein 
\begin_inset Formula $m$
\end_inset

-Tupel 
\begin_inset Formula $\bar{x}$
\end_inset

 und ein 
\begin_inset Formula $n$
\end_inset

-Tupel 
\begin_inset Formula $\bar{y}$
\end_inset

 sei 
\begin_inset Formula $\bar{x}\bar{y}$
\end_inset

 das 
\begin_inset Formula $\left(m+n\right)$
\end_inset

-Tupel 
\begin_inset Formula $\left(x_{1},\cdots,x_{m},y_{1},\cdots,y_{n}\right)$
\end_inset

.
 Das 
\begin_inset Formula $0$
\end_inset

-stellige Tupel wird durch 
\begin_inset Formula $\left\langle \right\rangle $
\end_inset

 notiert.
\end_layout

\begin_layout Definition
Für 
\begin_inset Formula $\bar{a}\in A^{k}$
\end_inset

 und 
\begin_inset Formula $A'\subseteq A$
\end_inset

 sei 
\begin_inset Formula $\bar{a}_{\mid A'}$
\end_inset

 das Tupel, das aus 
\begin_inset Formula $\bar{a}$
\end_inset

 entsteht, wenn die Elemente 
\begin_inset Formula $a_{i}\in A\backslash A'$
\end_inset

 entfernt werden.
\end_layout

\begin_layout Standard
\begin_inset Separator parbreak
\end_inset


\end_layout

\begin_layout Definition

\series bold
Intervall
\end_layout

\begin_layout Definition
Ein endliches Intervall von natürlichen Zahlen wird durch 
\begin_inset Formula $\left[a,b\right]$
\end_inset

 abgekürzt:
\begin_inset Formula 
\[
\left[a,b\right]\coloneqq\left\{ i\in\mathbb{N}\mid a\leqslant i\leqslant b\right\} 
\]

\end_inset


\end_layout

\begin_layout Definition
Ein Intervall von reellen Zahlen wird durch 
\begin_inset Formula $\mathbb{R}_{\left[a,b\right]}$
\end_inset

 oder 
\begin_inset Formula $\mathbb{R}_{\left[a,b\right[}$
\end_inset

 abgekürzt: 
\begin_inset Formula 
\begin{eqnarray*}
\mathbb{R}_{\left[a,b\right]} & \coloneqq & \left\{ i\in\mathbb{R}\mid a\leqslant i\leqslant b\right\} \\
\mathbb{R}_{\left[a,b\right[} & \coloneqq & \left\{ i\in\mathbb{R}\mid a\leqslant i<b\right\} 
\end{eqnarray*}

\end_inset


\end_layout

\begin_layout Standard
Als nächstes definieren wir Relationen als Mengen von Tupeln von Elementen
 eines Universums.
 
\end_layout

\begin_layout Definition

\series bold
\begin_inset CommandInset label
LatexCommand label
name "def:relation"

\end_inset

Relation
\end_layout

\begin_layout Definition
Für eine Menge 
\begin_inset Formula $A$
\end_inset

 und 
\begin_inset Formula $k\in\mathbb{N}$
\end_inset

 sei 
\begin_inset Formula $R\subseteq A^{k}$
\end_inset

 eine 
\begin_inset Formula $k$
\end_inset

-stellige Relation über 
\begin_inset Formula $A$
\end_inset

.
 Für jede Relation 
\begin_inset Formula $R\subseteq A^{k}$
\end_inset

 sei 
\begin_inset Formula $\left[R\right]:A^{k}\rightarrow\left\{ 0,1\right\} $
\end_inset

 die folgende Funktion: 
\begin_inset Formula 
\[
\left[R\right]\left(\bar{a}\right)\coloneqq\begin{cases}
1 & \mathrm{falls}\,\,\bar{a}\in R\\
0 & \mathrm{sonst}
\end{cases}
\]

\end_inset


\end_layout

\begin_layout Standard
Für geordnete Mengen definieren wir die Operatoren 
\begin_inset Formula $\min$
\end_inset

 und 
\begin_inset Formula $\max$
\end_inset

, die das kleinste und größte Element (sofern vorhanden) einer Menge unter
 einer bestimmten Ordnung bezeichnen.
\end_layout

\begin_layout Definition

\series bold
Minimum und Maximum
\end_layout

\begin_layout Definition
Für eine Ordnung 
\begin_inset Formula $\preceq$
\end_inset

 auf einer Menge 
\begin_inset Formula $X$
\end_inset

 seien 
\begin_inset Formula $\min_{\preceq}\left(X\right)\in X$
\end_inset

 und 
\begin_inset Formula $\max_{\preceq}\left(X\right)\in X$
\end_inset

 diejenigen Elemente (sofern vorhanden), so dass für alle Elemente 
\begin_inset Formula $z\in X$
\end_inset

 gilt:
\begin_inset Formula 
\[
\min_{\preceq}\left(X\right)\preceq z\preceq\max_{\preceq}\left(X\right)
\]

\end_inset

Für 
\begin_inset Formula $X\subseteq\mathbb{R}$
\end_inset

 wird die natürliche Ordnung 
\begin_inset Formula $\leqslant$
\end_inset

 nicht explizit notiert.
 Für eine Funktion 
\begin_inset Formula $f:U\rightarrow\mathbb{R}$
\end_inset

 und eine Menge 
\begin_inset Formula $X\subseteq U$
\end_inset

 bezeichnen 
\begin_inset Formula $\min_{x\in X}f\left(x\right)\in\mathbb{R}$
\end_inset

 und 
\begin_inset Formula $\max_{x\in X}f\left(x\right)\in\mathbb{R}$
\end_inset

 die folgende Abkürzungen:
\begin_inset Formula 
\begin{eqnarray*}
\min_{x\in X}f\left(x\right) & \coloneqq & \min\left\{ f\left(x\right)\mid x\in X\right\} \\
\max_{x\in X}f\left(x\right) & \coloneqq & \max\left\{ f\left(x\right)\mid x\in X\right\} 
\end{eqnarray*}

\end_inset

Umgekehrt bezeichnet 
\begin_inset Formula $\min_{f}U$
\end_inset

 ein beliebiges Element 
\begin_inset Formula $u\in U$
\end_inset

 mit dem minimalen Wert 
\begin_inset Formula $f\left(u\right)=\min_{x\in U}f\left(x\right)$
\end_inset

, und 
\begin_inset Formula $\max_{f}U$
\end_inset

 analog.
\end_layout

\begin_layout Standard
\begin_inset Separator parbreak
\end_inset


\end_layout

\begin_layout Definition

\series bold
Asymptotische Klassen
\end_layout

\begin_layout Definition
Für jede Funktion 
\begin_inset Formula $f:\mathbb{N}\rightarrow\mathbb{R}$
\end_inset

 definieren wir die Funktionsklassen 
\begin_inset Formula $\mathcal{O}\left(f\right)$
\end_inset

 und 
\begin_inset Formula $\Omega\left(f\right)$
\end_inset

:
\begin_inset Separator latexpar
\end_inset


\end_layout

\begin_deeper
\begin_layout Itemize
Es gelte 
\begin_inset Formula $g\in\mathcal{O}\left(f\right)$
\end_inset

 genau dann wenn ein 
\begin_inset Formula $n_{0},c\in\mathbb{N}$
\end_inset

 existieren, so dass für alle 
\begin_inset Formula $n\geqslant n_{0}$
\end_inset

 gilt: 
\begin_inset Formula $g\left(n\right)\leqslant c\cdot f\left(n\right)$
\end_inset

.
\end_layout

\begin_layout Itemize
Es gelte 
\begin_inset Formula $g\in\Omega\left(f\right)$
\end_inset

 genau dann wenn 
\begin_inset Formula $f\in\mathcal{O}\left(g\right)$
\end_inset

.
\end_layout

\end_deeper
\begin_layout Definition
Für 
\begin_inset Formula $f:\mathbb{R}\rightarrow\mathbb{R}$
\end_inset

 und eine Klasse 
\begin_inset Formula $\mathcal{F}$
\end_inset

 sei 
\begin_inset Formula $f\left(\mathcal{F}\right)\coloneqq\left\{ f\circ g\mid g\in\mathcal{F}\right\} $
\end_inset

.
 Zum Beispiel ist 
\begin_inset Formula $f\in2^{\mathcal{O}\left(n\right)}$
\end_inset

 genau dann wenn 
\begin_inset Formula $f\in\mathcal{O}\left(2^{kn}\right)$
\end_inset

 für ein festes 
\begin_inset Formula $k\in\mathbb{N}$
\end_inset

.
\end_layout

\begin_layout Standard
\begin_inset Separator parbreak
\end_inset


\end_layout

\begin_layout Standard
Wir legen mehrere einfache Operationen für Abbildungen fest, darunter die
 Verkettung, Vereinigung disjunkter Definitionsbereiche und Reduktion auf
 einen Teilbereich.
\end_layout

\begin_layout Definition

\series bold
Abbildung
\end_layout

\begin_layout Definition
Für eine Abbildung 
\begin_inset Formula $\pi:A\rightarrow B$
\end_inset

 und 
\begin_inset Formula $a\in A$
\end_inset

 schreiben wir statt 
\begin_inset Formula $\pi\left(a\right)$
\end_inset

 gegebenenfalls 
\begin_inset Formula $\pi a$
\end_inset

 ohne Klammern.
\end_layout

\begin_layout Definition
Jede Abbildung 
\begin_inset Formula $\pi:A\rightarrow B$
\end_inset

 wird auf natürliche Weise auf Tupel, Teilmengen und Relationen von 
\begin_inset Formula $A$
\end_inset

 erweitert:
\begin_inset Formula 
\begin{eqnarray*}
\pi\left(x_{1},\cdots,x_{k}\right) & \coloneqq & \left(\pi x_{1},\cdots,\pi x_{n}\right)\\
\pi\left\{ x_{1},\cdots,x_{n}\right\}  & \coloneqq & \left\{ \pi x_{1},\cdots,\pi x_{n}\right\} 
\end{eqnarray*}

\end_inset


\end_layout

\begin_layout Definition
Eine Abbildung 
\begin_inset Formula $\pi:A\rightarrow B$
\end_inset

 mit 
\begin_inset Formula $A=\left\{ a_{1},\cdots,a_{n}\right\} $
\end_inset

 schreiben wir gegebenenfalls extensional wie folgt auf.
 Für ein Tupel 
\begin_inset Formula $\bar{a}=\left(a_{1},\cdots,a_{n}\right)$
\end_inset

 kürzen wir diese Abbildung auch durch 
\begin_inset Formula $\left(\bar{a}\mapsto\pi\bar{a}\right)$
\end_inset

 ab.
 
\begin_inset Formula 
\begin{eqnarray*}
\pi & \coloneqq & \left(\begin{array}{c}
a_{1}\\
\pi a_{1}
\end{array}\cdots\begin{array}{c}
a_{n}\\
\pi a_{n}
\end{array}\right)\\
\pi & \coloneqq & \left(\bar{a}\mapsto\pi\bar{a}\right)
\end{eqnarray*}

\end_inset


\end_layout

\begin_layout Definition
Für zwei Abbildungen 
\begin_inset Formula $\pi_{1}:B\rightarrow C$
\end_inset

 und 
\begin_inset Formula $\pi_{2}:A\rightarrow B$
\end_inset

 sei 
\begin_inset Formula $\pi_{1}\circ\pi_{2}:A\rightarrow C$
\end_inset

 (kurz 
\begin_inset Formula $\pi_{1}\pi_{2}$
\end_inset

) die folgende Abbildung: 
\begin_inset Formula 
\[
\pi_{1}\pi_{2}\coloneqq\left(\bar{a}\mapsto\pi_{1}\left(\pi_{2}\left(\bar{a}\right)\right)\right)
\]

\end_inset


\end_layout

\begin_layout Definition
Für zwei Abbildungen 
\begin_inset Formula $\pi:A\rightarrow B$
\end_inset

 und 
\begin_inset Formula $\pi':A'\rightarrow B'$
\end_inset

 mit disjunkten Definitionsbereichen 
\begin_inset Formula $A\cap A'=\emptyset$
\end_inset

 sei 
\begin_inset Formula $\pi''\coloneqq\pi\cup\pi'$
\end_inset

 die folgende Abbildung: 
\begin_inset Formula 
\begin{eqnarray*}
\pi'' & : & A\uplus A'\rightarrow B\cup B'\\
\pi''x & \coloneqq & \begin{cases}
\pi x & \mathrm{falls}\,\,x\in A\\
\pi'x & \mathrm{falls}\,\,x\in A'
\end{cases}
\end{eqnarray*}

\end_inset


\end_layout

\begin_layout Definition
Für 
\begin_inset Formula $\pi:A\rightarrow B$
\end_inset

 und 
\begin_inset Formula $A'\subseteq A$
\end_inset

 sei 
\begin_inset Formula $\pi_{\mid A'}:A'\rightarrow B$
\end_inset

 die Reduktion von 
\begin_inset Formula $\pi$
\end_inset

 auf eine Teilmenge des Definitionsbereichs, und 
\begin_inset Formula $\pi_{\backslash A'}:A\backslash A'\rightarrow B$
\end_inset

 die Reduktion auf das Komplement.
\end_layout

\begin_layout Definition
Es sei 
\begin_inset Formula $\mathbf{id}$
\end_inset

 die Identität mit 
\begin_inset Formula $\mathbf{id}\left(a\right)=a$
\end_inset

 für alle Elemente 
\begin_inset Formula $a$
\end_inset

.
 Mit 
\begin_inset Formula $\mathbf{id}_{X}$
\end_inset

 bezeichnen wir die Identitätsfunktion auf einer Menge 
\begin_inset Formula $X$
\end_inset

.
\end_layout

\begin_layout Definition
Die Menge 
\begin_inset Formula $\mathrm{Abb}\left(A,B\right)$
\end_inset

 bezeichne alle Funktionen 
\begin_inset Formula $\pi:A\rightarrow B$
\end_inset

, und 
\begin_inset Formula $\mathrm{Bij}\left(A,B\right)$
\end_inset

 bezeichne für endliche 
\begin_inset Formula $\left|A\right|=\left|B\right|=n$
\end_inset

 alle 
\begin_inset Formula $n!$
\end_inset

 bijektiven Abbildungen 
\begin_inset Formula $\pi:A\rightleftarrows B$
\end_inset

.
\end_layout

\begin_layout Standard
\begin_inset Separator parbreak
\end_inset


\end_layout

\begin_layout Definition

\series bold
Permutation
\end_layout

\begin_layout Definition
Eine Permutation von 
\begin_inset Formula $U$
\end_inset

 ist eine bijektive Abbildung 
\begin_inset Formula $\pi:U\rightleftarrows U$
\end_inset

.
 Die Menge aller Permutationen 
\begin_inset Formula $\mathrm{Bij}\left(U,U\right)$
\end_inset

 bezeichnen wir auch als 
\begin_inset Formula $\mathrm{Sym}_{U}$
\end_inset

.
 Diese bilden eine Symmetrie-Gruppe bezüglich der Verkettung 
\begin_inset Formula $\circ$
\end_inset

 mit dem neutralen Element 
\begin_inset Formula $\mathbf{id}_{U}$
\end_inset

.
\end_layout

\begin_layout Definition
Es sei 
\begin_inset Formula $\pi^{-1}$
\end_inset

 die inverse Abbildung mit 
\begin_inset Formula $\pi^{-1}\pi=\pi\pi^{-1}=\mathbf{id}_{U}$
\end_inset

.
\end_layout

\begin_layout Definition
Eine Transposition sei eine Permutation, die zwei Elemente 
\begin_inset Formula $u_{i}$
\end_inset

 und 
\begin_inset Formula $u_{j}$
\end_inset

 vertauscht und alle anderen Elemente fixiert.
 Die Permutation 
\begin_inset Formula $\left(\begin{array}{cc}
u_{i} & u_{j}\\
u_{j} & u_{i}
\end{array}\right)\cup\mathbf{id}_{U\backslash\left\{ u_{i},u_{j}\right\} }$
\end_inset

 wird kurz durch 
\begin_inset Formula $\left(u_{i}u_{j}\right)$
\end_inset

 notiert.
\end_layout

\begin_layout Standard
\begin_inset Separator parbreak
\end_inset


\end_layout

\begin_layout Definition

\series bold
\begin_inset CommandInset label
LatexCommand label
name "def:orbit"

\end_inset

Orbit
\end_layout

\begin_layout Definition
In einer Permutationsgruppe 
\begin_inset Formula $G\subseteq\mathrm{Sym}_{U}$
\end_inset

 sei 
\begin_inset Formula $\mathrm{Orb}_{G}\left(u\right)\coloneqq\left\{ \pi u\mid\pi\in G\right\} $
\end_inset

 die Menge aller Elemente, auf die 
\begin_inset Formula $u$
\end_inset

 abgebildet wird.
\end_layout

\begin_layout Section
Endliche relationale Strukturen
\end_layout

\begin_layout Standard
Wir betrachten Anfragen und Eigenschaften auf Graphen und allgemeinen endlichen
 Strukturen über eine beliebige relationale Signatur 
\begin_inset Formula $\sigma$
\end_inset

.
\end_layout

\begin_layout Definition

\series bold
Relationale Signaturen
\end_layout

\begin_layout Definition
Eine relationale Signatur 
\begin_inset Formula $\sigma$
\end_inset

 ist eine Menge von Relationssymbolen.
 Jedes Symbol 
\begin_inset Formula $R\in\sigma$
\end_inset

 hat eine feste Stelligkeit 
\begin_inset Formula $\mathrm{ar}\left(R\right)=k\in\mathbb{N}_{\geqslant1}$
\end_inset

.
 Gegebenenfalls wird die Stelligkeit kompakt durch 
\begin_inset Formula $R/k\in\sigma$
\end_inset

 beziehungsweise 
\begin_inset Formula $\sigma=\left\{ R_{1}/k_{1},\cdots,R_{k}/k_{k}\right\} $
\end_inset

 notiert.
\end_layout

\begin_layout Standard
\begin_inset Separator parbreak
\end_inset


\end_layout

\begin_layout Definition

\series bold
Endliche Strukturen
\end_layout

\begin_layout Definition
Eine endliche 
\begin_inset Formula $\sigma$
\end_inset

-Struktur 
\begin_inset Formula $\mathfrak{A}=\left(A,\left(R^{\mathfrak{A}}\right)_{R\in\sigma}\right)$
\end_inset

 über einer Signatur 
\begin_inset Formula $\sigma$
\end_inset

 und einem endlichen nicht-leeren Universum 
\begin_inset Formula $A$
\end_inset

 besteht aus einer Interpretation 
\begin_inset Formula $R^{\mathfrak{A}}\subseteq A^{k}$
\end_inset

 für jedes Symbol 
\begin_inset Formula $R/k\in\sigma$
\end_inset

.
 Strukturen benennen wir im Allgemeinen durch die Frakturbuchstaben 
\begin_inset Formula $\mathfrak{A}$
\end_inset

 und 
\begin_inset Formula $\mathfrak{B}$
\end_inset

.
\begin_inset Separator latexpar
\end_inset


\end_layout

\begin_deeper
\begin_layout Itemize
Für eine endliche Menge 
\begin_inset Formula $U$
\end_inset

 sei 
\begin_inset Formula $\mathbf{FIN}^{U}\left(\sigma\right)$
\end_inset

 die Menge aller 
\begin_inset Formula $\sigma$
\end_inset

-Strukturen über dem Universum 
\begin_inset Formula $U$
\end_inset

.
\end_layout

\begin_layout Itemize
Für 
\begin_inset Formula $n\in\mathbb{N}_{\geqslant1}$
\end_inset

 seien 
\begin_inset Formula $\mathbf{FIN}^{\left(n\right)}\left(\sigma\right)$
\end_inset

 die 
\begin_inset Formula $\sigma$
\end_inset

-Strukturen über einem beliebigen Universum der Größe 
\begin_inset Formula $n$
\end_inset

.
\end_layout

\begin_layout Itemize
Seien 
\begin_inset Formula $\mathbf{FIN}\left(\sigma\right)\coloneqq\bigcup_{n\in\mathbb{N}_{\geqslant1}}\mathbf{FIN}^{\left(n\right)}\left(\sigma\right)$
\end_inset

 die endlichen 
\begin_inset Formula $\sigma$
\end_inset

-Strukturen.
\end_layout

\end_deeper
\begin_layout Standard
Die Signatur 
\begin_inset Formula $\sigma$
\end_inset

 kann in Ausnahmefällen unendlich sein; da wir jedoch nur endlich repräsentierba
re 
\begin_inset Formula $\sigma$
\end_inset

-Anfragen betrachten, können diese sich nur auf eine endlichen Menge von
 Relationssymbolen 
\begin_inset Formula $\sigma'\subseteq_{\mathrm{fin}}\sigma$
\end_inset

 beziehen.
\end_layout

\begin_layout Standard
Wir formalisieren die Interpretation als eine Abbildung 
\begin_inset Formula $\square^{\mathfrak{A}}:\sigma\rightarrow\bigcup_{k\in\mathbb{N}}2^{\left(A^{k}\right)}$
\end_inset

, die jedem Symbol eine Relation der entsprechenden Stelligkeit zuweist.
 Daher kann die Interpretation gegebenenfalls auch explizit durch 
\begin_inset Formula $\mathfrak{A}=\left(A,\square^{\mathfrak{A}}\right)$
\end_inset

 notiert werden, um die Zuordnung von Symbolen und Relationen zu verdeutlichen:
 
\begin_inset Formula 
\[
\mathfrak{A}:=\left(A,\left(\begin{array}{c}
R_{1}\\
R_{1}^{\mathfrak{A}}
\end{array}\cdots\begin{array}{c}
R_{k}\\
R_{k}^{\mathfrak{A}}
\end{array}\right)\right)
\]

\end_inset


\end_layout

\begin_layout Definition

\series bold
Geordnete Strukturen
\end_layout

\begin_layout Definition
Sei 
\begin_inset Formula $\sigma$
\end_inset

 eine relationale Signatur, die nicht das zweistellige Symbol 
\begin_inset Formula $\leqslant$
\end_inset

 enthält.
\end_layout

\begin_layout Definition
Für 
\begin_inset Formula $a,b\in\mathbb{N}$
\end_inset

 sei 
\begin_inset Formula 
\[
\mathbf{FIN}_{\leqslant}^{\left[a,b\right]}\left(\sigma\right)\subseteq\mathbf{FIN}^{\left[a,b\right]}\left(\sigma\cup\left\{ \leqslant\right\} \right)
\]

\end_inset

 die Menge der endlichen 
\begin_inset Formula $\sigma\cup\left\{ \leqslant\right\} $
\end_inset

-Strukturen mit dem Universum 
\begin_inset Formula $\left[a,b\right]$
\end_inset

, wobei 
\begin_inset Formula $\leqslant$
\end_inset

 durch die natürliche Ordnung von 
\begin_inset Formula $\left[a,b\right]$
\end_inset

 interpretiert wird, und sei 
\begin_inset Formula 
\[
\mathbf{FIN}_{\leqslant}^{a}\left(\sigma\right)\coloneqq\bigcup_{b\in\mathbb{N}}\mathbf{FIN}_{\leqslant}^{\left[a,b\right]}\left(\sigma\right)
\]

\end_inset

 die Menge aller endlichen geordneten 
\begin_inset Formula $\sigma\cup\left\{ \leqslant\right\} $
\end_inset

-Strukturen über Intervallen, die mit 
\begin_inset Formula $a$
\end_inset

 beginnen (normalerweise mit 
\begin_inset Formula $a\in\left\{ 0,1\right\} $
\end_inset

).
\end_layout

\begin_layout Standard
Der Lesbarkeit halber verwenden wir die Infixnotation 
\begin_inset Formula $a\leqslant b$
\end_inset

 anstelle von 
\begin_inset Formula $\left(a,b\right)\in\leqslant$
\end_inset

 oder 
\begin_inset Formula $\left[\leqslant\right]\left(a,b\right)$
\end_inset

.
 Die Symbole 
\begin_inset Formula $\dot{\leqslant}$
\end_inset

 und 
\begin_inset Formula $\dot{=}$
\end_inset

 seien gleichbedeutend mit den Symbolen 
\begin_inset Formula $\leqslant$
\end_inset

 und 
\begin_inset Formula $=$
\end_inset

, und werden gegebenenfalls in Gleichungen wie 
\begin_inset Formula $\varphi=x\dot{=}y$
\end_inset

 und 
\begin_inset Formula $\varphi=x\dot{\leqslant}y$
\end_inset

 verwendet.
\end_layout

\begin_layout Definition

\series bold
\begin_inset CommandInset label
LatexCommand label
name "def:isomorphism"

\end_inset

Isomorphismus
\end_layout

\begin_layout Definition
Für zwei 
\begin_inset Formula $\sigma$
\end_inset

-Strukturen 
\begin_inset Formula $\mathfrak{A}$
\end_inset

 und 
\begin_inset Formula $\mathfrak{B}$
\end_inset

 sei eine bijektive Abbildung 
\begin_inset Formula $\pi:A\rightleftarrows B$
\end_inset

 ein Isomorphismus, falls 
\begin_inset Formula $\pi R^{\mathfrak{A}}=R^{\mathfrak{B}}$
\end_inset

 für alle Symbole 
\begin_inset Formula $R\in\sigma$
\end_inset

 gilt.
\end_layout

\begin_layout Definition
Die Abbildung 
\begin_inset Formula $\pi$
\end_inset

 wird auf natürliche Weise auf Strukturen erweitert: 
\begin_inset Formula 
\[
\pi\mathfrak{A}\coloneqq\left(\pi A,\left(\pi R^{\mathfrak{A}}\right)_{R\in\sigma}\right)
\]

\end_inset


\end_layout

\begin_layout Definition
Die Menge aller Isomorphismen bezeichnen wir mit 
\begin_inset Formula $\mathrm{Bij}\left(\mathfrak{A},\mathfrak{B}\right)$
\end_inset

.
 Zwei Strukturen heißen isomorph (kurz 
\begin_inset Formula $\mathfrak{A}\cong\mathfrak{B}$
\end_inset

), falls 
\begin_inset Formula $\mathrm{Bij}\left(\mathfrak{A},\mathfrak{B}\right)$
\end_inset

 nicht leer ist.
 Wir schreiben 
\begin_inset Formula $\left(\mathfrak{A},\bar{a}\right)\cong\left(\mathfrak{B},\bar{b}\right)$
\end_inset

, wenn insbesondere ein 
\begin_inset Formula $\pi\in\mathrm{Bij}\left(\mathfrak{A},\mathfrak{B}\right)$
\end_inset

 mit 
\begin_inset Formula $\pi\bar{a}=\bar{b}$
\end_inset

 existiert.
\end_layout

\begin_layout Definition
Ein Automorphismus 
\begin_inset Formula $\pi\in\mathrm{Bij}\left(\mathfrak{A},\mathfrak{A}\right)$
\end_inset

 sei ein Isomorphismus von 
\begin_inset Formula $\mathfrak{A}$
\end_inset

 zu sich selbst.
 Die Menge der Automorphismen 
\begin_inset Formula $\mathrm{Bij}\left(\mathfrak{A},\mathfrak{A}\right)$
\end_inset

 nennen wir 
\begin_inset Formula $\mathrm{Aut}_{\mathfrak{A}}$
\end_inset

; diese bilden (so wie die Permutationen einer Menge) eine Gruppe bezüglich
 der Verkettung 
\begin_inset Formula $\circ$
\end_inset

 und dem neutralen Element 
\begin_inset Formula $\mathbf{id}_{A}$
\end_inset

.
\end_layout

\begin_layout Definition
Der Orbit eines Elements 
\begin_inset Formula $a\in A$
\end_inset

 sei analog zu Definition 
\begin_inset CommandInset ref
LatexCommand ref
reference "def:orbit"

\end_inset

 die Menge 
\begin_inset Formula $\mathrm{Orb}_{\mathfrak{A}}\left(a\right)\coloneqq\left\{ \pi a\mid\pi\in\mathrm{Aut}_{\mathfrak{A}}\right\} $
\end_inset

 aller Elemente, auf die 
\begin_inset Formula $a$
\end_inset

 von einem Automorphismus abgebildet werden kann.
\end_layout

\begin_layout Standard
\begin_inset Separator parbreak
\end_inset


\end_layout

\begin_layout Definition

\series bold
\begin_inset CommandInset label
LatexCommand label
name "def:disjoint-union"

\end_inset

Vereinigung von Strukturen
\end_layout

\begin_layout Definition
Zwei Strukturen können vereinigt werden, wenn sie entweder disjunkte Signaturen
 oder die gleiche Signatur besitzen.
 Für eine 
\begin_inset Formula $\sigma_{1}$
\end_inset

-Struktur 
\begin_inset Formula $\mathfrak{A}$
\end_inset

 und eine 
\begin_inset Formula $\sigma_{2}$
\end_inset

-Struktur 
\begin_inset Formula $\mathfrak{B}$
\end_inset

 gelte:
\begin_inset Separator latexpar
\end_inset


\end_layout

\begin_deeper
\begin_layout Enumerate
Wenn 
\begin_inset Formula $\sigma_{1}\cap\sigma_{2}=\emptyset$
\end_inset

, so ist 
\begin_inset Formula $\mathfrak{A}\cup\mathfrak{B}$
\end_inset

 die folgende 
\begin_inset Formula $\left(\sigma_{1}\cup\sigma_{2}\right)$
\end_inset

-Struktur:
\begin_inset Formula 
\[
\mathfrak{A}\cup\mathfrak{B}\coloneqq\left(A\cup B,\left(R^{\mathfrak{A}}\right)_{R\in\sigma_{1}},\left(R^{\mathfrak{B}}\right)_{R\in\sigma_{2}}\right)
\]

\end_inset


\end_layout

\begin_layout Enumerate
Wenn 
\begin_inset Formula $\sigma_{1}=\sigma_{2}=\sigma$
\end_inset

, so ist 
\begin_inset Formula $\mathfrak{A}\cup\mathfrak{B}$
\end_inset

 die folgende 
\begin_inset Formula $\sigma$
\end_inset

-Struktur:
\begin_inset Formula 
\[
\mathfrak{A}\cup\mathfrak{B}\coloneqq\left(A\cup B,\left(R^{\mathfrak{A}}\cup R^{\mathfrak{B}}\right)_{R\in\sigma}\right)
\]

\end_inset


\end_layout

\end_deeper
\begin_layout Definition
Falls die beiden Strukturen disjunkte Universen 
\begin_inset Formula $A\cap B=\emptyset$
\end_inset

 haben, so heiße 
\begin_inset Formula $\mathfrak{A}\cup\mathfrak{B}=\mathfrak{A}\uplus\mathfrak{B}$
\end_inset

 die 
\series bold
disjunkte Vereinigung
\series default
 der Strukturen.
 Wenn sie disjunkte Signaturen und das gleiche Universum haben, so nennen
 wir 
\begin_inset Formula $\mathfrak{A}\cup\mathfrak{B}=\mathfrak{A}\oplus\mathfrak{B}$
\end_inset

 die 
\series bold
Konkatenation
\series default
 der Strukturen.
\end_layout

\begin_layout Proposition
\begin_inset CommandInset label
LatexCommand label
name "prop:iso-closed-disjoint"

\end_inset

Isomorphismen sind unter disjunkter Vereinigung abgeschlossen.
\end_layout

\begin_layout Proof
Seien 
\begin_inset Formula $\mathfrak{A},\mathfrak{A}'\in\mathbf{FIN}\left(\sigma_{1}\right)$
\end_inset

 und 
\begin_inset Formula $\mathfrak{B},\mathfrak{B}'\in\mathbf{FIN}\left(\sigma_{2}\right)$
\end_inset

 jeweils zwei Paare isomorpher Strukturen mit 
\begin_inset Formula $\pi_{1}\in\mathrm{Bij}\left(\mathfrak{A},\mathfrak{A}'\right)$
\end_inset

 und 
\begin_inset Formula $\pi_{2}\in\mathrm{Bij}\left(\mathfrak{B},\mathfrak{B}'\right)$
\end_inset

.
 Sei ferner 
\begin_inset Formula $A\cap B=A'\cap B'=\emptyset$
\end_inset

, und seien 
\begin_inset Formula $\bar{a}\in A^{k},\bar{a}'\in A'^{k},\bar{b}\in B^{k'},\bar{b}\in B'^{k'}$
\end_inset

 vier Tupel mit 
\begin_inset Formula $\pi_{1}\bar{a}=\bar{a}'$
\end_inset

 und 
\begin_inset Formula $\pi_{2}\bar{b}=\bar{b}'$
\end_inset

.
\end_layout

\begin_layout Proof
So gilt für die Abbildung 
\begin_inset Formula $\pi\coloneqq\pi_{1}\cup\pi_{2}:A\uplus A'\rightarrow B\uplus B'$
\end_inset

:
\begin_inset Separator latexpar
\end_inset


\end_layout

\begin_deeper
\begin_layout Case
Wenn 
\begin_inset Formula $\sigma_{1}\cap\sigma_{2}=\emptyset$
\end_inset

:
\begin_inset Formula 
\begin{eqnarray*}
\pi R^{\mathfrak{A}\uplus\mathfrak{B}} & = & \pi_{1}R^{\mathfrak{A}}=R^{\mathfrak{A}'}=R^{\mathfrak{A}'\uplus\mathfrak{B}'}\,\mathrm{für}\,R\in\sigma_{1}\\
\pi R^{\mathfrak{A}\uplus\mathfrak{B}} & = & \pi_{2}R^{\mathfrak{B}}=R^{\mathfrak{B}'}=R^{\mathfrak{A}'\uplus\mathfrak{B}'}\,\mathrm{für}\,R\in\sigma_{2}
\end{eqnarray*}

\end_inset


\end_layout

\begin_layout Case
Wenn 
\begin_inset Formula $\sigma_{1}=\sigma_{2}$
\end_inset

, dann gilt für alle 
\begin_inset Formula $R\in\sigma_{1}$
\end_inset

:
\begin_inset Formula 
\[
\pi R^{\mathfrak{A}\cup\mathfrak{B}}=\pi_{1}R^{\mathfrak{A}}\uplus\pi_{2}R^{\mathfrak{B}}=R^{\mathfrak{A}'}\uplus R^{\mathfrak{B}'}=R^{\mathfrak{A}'\uplus\mathfrak{B}'}
\]

\end_inset


\end_layout

\end_deeper
\begin_layout Proof
Damit ist 
\begin_inset Formula $\pi\left(\mathfrak{A}\uplus\mathfrak{B}\right)=\mathfrak{A}'\uplus\mathfrak{B}'$
\end_inset

 und 
\begin_inset Formula $\pi\bar{a}\bar{b}=\bar{a}'\bar{b}'$
\end_inset

, und 
\begin_inset Formula $\left(\mathfrak{A}\uplus\mathfrak{B},\bar{a}\bar{b}\right)\cong\left(\mathfrak{A}'\uplus\mathfrak{B}',\bar{a}'\bar{b}'\right)$
\end_inset

.
\end_layout

\begin_layout Standard
\begin_inset Separator parbreak
\end_inset


\end_layout

\begin_layout Definition

\series bold
\begin_inset CommandInset label
LatexCommand label
name "def:induced-structure"

\end_inset

Induzierte Teilstruktur
\end_layout

\begin_layout Definition
Für eine Relation 
\begin_inset Formula $R\subseteq A^{k}$
\end_inset

 und eine Teilmenge 
\begin_inset Formula $A'\subseteq A$
\end_inset

 sei 
\begin_inset Formula $R_{\mid A'}\coloneqq R\cap\left(A'\right)^{k}$
\end_inset

 die von 
\begin_inset Formula $A'$
\end_inset

 induzierte Teilrelation.
 Für eine 
\begin_inset Formula $\sigma$
\end_inset

-Struktur 
\begin_inset Formula $\mathfrak{A}$
\end_inset

 sei 
\begin_inset Formula $\mathfrak{A}_{\mid A'}\coloneqq\left(A',\left(R_{\mid A'}^{\mathfrak{A}}\right)_{R\in\sigma}\right)$
\end_inset

 die von der Teilmenge 
\begin_inset Formula $A'$
\end_inset

 in 
\begin_inset Formula $\mathfrak{A}$
\end_inset

 induzierte Teilstruktur.
\end_layout

\begin_layout Standard
\begin_inset Separator parbreak
\end_inset


\end_layout

\begin_layout Definition

\series bold
\begin_inset CommandInset label
LatexCommand label
name "def:neighborhoods"

\end_inset


\begin_inset Formula $r$
\end_inset

-Nachbarschaft
\series default
 (siehe Abschnitt 2.4 von 
\begin_inset CommandInset citation
LatexCommand cite
key "EbbinghausFlum"

\end_inset

)
\end_layout

\begin_layout Definition
Für eine Struktur 
\begin_inset Formula $\mathfrak{A}\in\mathbf{FIN}\left(\sigma\right)$
\end_inset

 sei 
\begin_inset Formula $\mathcal{G}\left(\mathfrak{A}\right)\in\mathbf{FIN}^{A}\left(\left\{ E\right\} \right)$
\end_inset

 der 
\series bold
Gaifman-Graph
\series default
 von 
\begin_inset Formula $\mathfrak{A}$
\end_inset

, der alle Knoten miteinander verbindet, die im gleichen Tupel vorkommen.
 Insbesondere ist für jeden symmetrischen
\begin_inset Foot
status open

\begin_layout Plain Layout
Der Gaifman-Graph ist ungerichtet, wird aber hier als symmetrische, gerichtete
 
\begin_inset Formula $\left\{ E\right\} $
\end_inset

-Struktur modelliert.
\end_layout

\end_inset

 Graphen 
\begin_inset Formula $\mathfrak{A}\in\mathbf{FIN}\left(\left\{ E\right\} \right)$
\end_inset

 offensichtlich 
\begin_inset Formula $\mathcal{G}\left(\mathfrak{A}\right)=\mathfrak{A}$
\end_inset

.
\begin_inset Formula 
\begin{eqnarray*}
\mathcal{G}\left(\mathfrak{A}\right) & = & \left(A,E^{\mathcal{G}\left(\mathfrak{A}\right)}\right)\\
E^{\mathcal{G}\left(\mathfrak{A}\right)} & = & \left\{ \left(a_{i},a_{j}\right)\mid R/k\in\sigma,\,\bar{a}\in R^{\mathfrak{A}},\,i,j\in\left[1,k\right],\,i\neq j\right\} 
\end{eqnarray*}

\end_inset


\end_layout

\begin_layout Definition
Sei 
\begin_inset Formula $\mathrm{dist}_{\mathfrak{A}}:A^{2}\rightarrow\mathbb{N\cup\left\{ \infty\right\} }$
\end_inset

 die minimale Distanz 
\begin_inset Formula $\mathrm{dist}_{\mathfrak{A}}\left(a,b\right)$
\end_inset

 in 
\begin_inset Formula $\mathcal{G}\left(\mathfrak{A}\right)$
\end_inset

 zwischen zwei Knoten 
\begin_inset Formula $a,b\in A$
\end_inset

.
 Für ein 
\begin_inset Formula $r\in\mathbb{N}$
\end_inset

 sei nun 
\begin_inset Formula $N_{r}^{\mathfrak{A}}\left(a\right)\coloneqq\left\{ b\in A\mid\mathrm{dist}_{\mathfrak{A}}\left(a,b\right)\leqslant r\right\} $
\end_inset

 die 
\series bold

\begin_inset Formula $r$
\end_inset

-Kugel
\series default
 um 
\begin_inset Formula $a\in A$
\end_inset

.
 Deren induzierte Teilstruktur 
\begin_inset Formula $\mathcal{N}_{r}^{\mathfrak{A}}\left(a\right)=\mathfrak{A}_{\mid N_{r}\left(a\right)}$
\end_inset

 in 
\begin_inset Formula $\mathfrak{A}$
\end_inset

 sei die 
\series bold

\begin_inset Formula $r$
\end_inset

-Umgebung
\series default
 von 
\begin_inset Formula $a$
\end_inset

.
\end_layout

\begin_layout Definition
Für zwei Strukturen 
\begin_inset Formula $\mathfrak{A},\mathfrak{B}\in\mathbf{FIN}\left(\sigma\right)$
\end_inset

 und zwei Elemente 
\begin_inset Formula $a\in A$
\end_inset

, 
\begin_inset Formula $b\in B$
\end_inset

 schreiben wir 
\begin_inset Formula $a\sim_{r}b$
\end_inset

 (
\begin_inset Formula $a$
\end_inset

 ist 
\series bold

\begin_inset Formula $r$
\end_inset

-ähnlich
\series default
 zu 
\begin_inset Formula $b$
\end_inset

), wenn ein Isomorphismus 
\begin_inset Formula $\pi\in\mathrm{Bij}\left(\mathcal{N}_{r}^{\mathfrak{A}}\left(a\right),\mathcal{N}_{r}^{\mathfrak{B}}\left(b\right)\right)$
\end_inset

 mit 
\begin_inset Formula $\pi a=b$
\end_inset

 existiert.
\end_layout

\begin_layout Standard
\begin_inset Separator parbreak
\end_inset


\end_layout

\begin_layout Definition

\series bold
\begin_inset Formula $\sigma$
\end_inset

-Anfragen
\end_layout

\begin_layout Definition
Eine 
\begin_inset Formula $\sigma$
\end_inset


\series bold
-Anfrage
\series default
 
\begin_inset Formula $q$
\end_inset

 mit der Stelligkeit 
\begin_inset Formula $\mathrm{ar}\left(q\right)=k$
\end_inset

 sei eine Abbildung jeder endlichen 
\begin_inset Formula $\sigma$
\end_inset

-Struktur 
\begin_inset Formula $\mathfrak{A}\in\mathbf{FIN}\left(\sigma\right)$
\end_inset

 auf eine Relation 
\begin_inset Formula $q\left(\mathfrak{A}\right)\subseteq A^{k}$
\end_inset

.
 Eine 
\begin_inset Formula $\sigma$
\end_inset


\series bold
-Eigenschaft
\series default
 
\begin_inset Formula $S\subseteq\mathbf{FIN}\left(\sigma\right)$
\end_inset

 sei eine Menge von 
\begin_inset Formula $\sigma$
\end_inset

-Strukturen und entspreche der 0-stelligen Anfrage 
\begin_inset Formula $q_{S}$
\end_inset

:
\begin_inset Formula 
\begin{eqnarray*}
q_{S}\left(\mathfrak{A}\right) & \coloneqq & \begin{cases}
\left\{ \left\langle \right\rangle \right\}  & \mathrm{falls}\,\mathfrak{A}\in S\\
\emptyset & \mathrm{sonst}
\end{cases}
\end{eqnarray*}

\end_inset


\end_layout

\begin_layout Definition
Per Definition sind alle 
\begin_inset Formula $\sigma$
\end_inset

-Anfragen und 
\begin_inset Formula $\sigma$
\end_inset

-Eigenschaften unter Isomorphismen abgeschlossen: Für 
\begin_inset Formula $\mathfrak{A}\cong\mathfrak{B}$
\end_inset

 und 
\begin_inset Formula $\pi\in\mathrm{Bij}\left(\mathfrak{A},\mathfrak{B}\right)$
\end_inset

 gilt 
\begin_inset Formula $\pi q\left(\mathfrak{A}\right)=q\left(\mathfrak{B}\right)$
\end_inset

 und 
\begin_inset Formula $\mathfrak{A}\in S\Leftrightarrow\mathfrak{B}\in S$
\end_inset

.
\end_layout

\begin_layout Chapter
Logik
\end_layout

\begin_layout Section
Grundlagen der relationalen Logik
\end_layout

\begin_layout Standard
Wir betrachten logische Sprachen auf relationalen Signaturen 
\begin_inset Formula $\sigma$
\end_inset

, deren Ausdrücke auf endlichen 
\begin_inset Formula $\sigma$
\end_inset

-Strukturen ausgewertet werden.
\end_layout

\begin_layout Standard
Zunächst definieren wir 
\begin_inset Formula $\mathbf{var}$
\end_inset

 als die Menge aller erststufigen Variablen.
 Für einen Ausdruck 
\begin_inset Formula $\omega$
\end_inset

 sei 
\begin_inset Formula $\mathrm{var}\left(\omega\right)$
\end_inset

 die Menge der darin vorkommenden Variablen, und 
\begin_inset Formula $\mathrm{frei}\left(\omega\right)\subseteq\mathrm{var}\left(\omega\right)$
\end_inset

 die Menge der freien Variablen.
\end_layout

\begin_layout Standard
In einer Struktur 
\begin_inset Formula $\mathfrak{A}$
\end_inset

 sei eine 
\series bold
Belegung
\series default
 
\begin_inset Formula $\beta$
\end_inset

 eine partielle Abbildung 
\begin_inset Formula $\beta:\mathbf{var}\rightarrow A$
\end_inset

 von Variablen auf Elemente des Universums.
\end_layout

\begin_layout Standard
Eine Auswertungsfunktion für eine Struktur 
\begin_inset Formula $\mathfrak{A}$
\end_inset

 und eine Belegung 
\begin_inset Formula $\beta$
\end_inset

 wird durch 
\begin_inset Formula $\left\llbracket \cdot\right\rrbracket \left(\mathfrak{A},\beta\right)$
\end_inset

 notiert.
\end_layout

\begin_layout Definition
Eine Logik 
\begin_inset Formula $\mathcal{L}\left[\sigma\right]$
\end_inset

 besteht aus der Sprache der 
\begin_inset Formula $\mathcal{L}\left[\sigma\right]$
\end_inset

-Terme, der Sprache der 
\begin_inset Formula $\mathcal{L}\left[\sigma\right]$
\end_inset

-Formeln, und einer Auswertungsfunktion 
\begin_inset Formula $\left\llbracket \omega\right\rrbracket \left(\mathfrak{A},\beta\right)$
\end_inset

 für jede Struktur 
\begin_inset Formula $\mathfrak{A}$
\end_inset

 und Belegung 
\begin_inset Formula $\beta:X\rightarrow A$
\end_inset

 und jeden Ausdruck 
\begin_inset Formula $\omega$
\end_inset

 mit 
\begin_inset Formula $\mathrm{frei}\left(\omega\right)\subseteq X$
\end_inset

.
\end_layout

\begin_layout Definition
Für einen 
\begin_inset Formula $\mathcal{L}\left[\sigma\right]$
\end_inset

-Term 
\begin_inset Formula $t$
\end_inset

 ist 
\begin_inset Formula $\left\llbracket t\right\rrbracket \left(\mathfrak{A},\beta\right)\in A$
\end_inset

 ein Element des Universums.
 Für eine 
\begin_inset Formula $\mathcal{L}\left[\sigma\right]$
\end_inset

-Formel 
\begin_inset Formula $\varphi$
\end_inset

 ist 
\begin_inset Formula $\left\llbracket \varphi\right\rrbracket \left(\mathfrak{A},\beta\right)\in\left\{ 0,1\right\} $
\end_inset

 ein Wahrheitswert.
\end_layout

\begin_layout Notation
Wir verwenden den Begriff 
\begin_inset Quotes gld
\end_inset

Ausdruck
\begin_inset Quotes grd
\end_inset

 als Oberbegriff der Formeln und Terme einer Logik, und bezeichnen Ausdrücke
 mit dem Buchstaben 
\begin_inset Formula $\omega$
\end_inset

.
 Terme werden mit kleinen Buchstaben benannt, und Formeln mit den Buchstaben
 
\begin_inset Formula $\varphi$
\end_inset

, 
\begin_inset Formula $\psi$
\end_inset

 oder 
\begin_inset Formula $\chi$
\end_inset

.
 Für einstellige Signaturen wie 
\begin_inset Formula $\left\{ E\right\} $
\end_inset

 oder 
\begin_inset Formula $\left\{ \leqslant\right\} $
\end_inset

 kürzen wir 
\begin_inset Formula $\mathcal{L}\left[\left\{ R\right\} \right]$
\end_inset

 durch 
\begin_inset Formula $\mathcal{L}\left[R\right]$
\end_inset

 ab.
\end_layout

\begin_layout Definition
Für eine Formel 
\begin_inset Formula $\varphi$
\end_inset

 und ein Tupel 
\begin_inset Formula $\bar{x}\in\mathbf{var}^{k}$
\end_inset

 mit 
\begin_inset Formula $\mathrm{frei}\left(\varphi\right)=\left\{ x_{1},\cdots,x_{k}\right\} $
\end_inset

 und 
\begin_inset Formula $\left|\left\{ x_{1},\cdots,x_{k}\right\} \right|=k$
\end_inset

 nennen wir das Tupel 
\begin_inset Formula $\bar{x}=\left(x_{1}\cdots x_{k}\right)$
\end_inset

 ein 
\series bold
Argument 
\series default
von 
\begin_inset Formula $\varphi$
\end_inset

.
 Verschiedene Argumente von 
\begin_inset Formula $\varphi$
\end_inset

 unterscheiden sich nur in der Reihenfolge der Variablen.
 Durch die Notation 
\begin_inset Formula $\varphi\left(\bar{x}\right)$
\end_inset

 legen wir ein beliebiges Argument 
\begin_inset Formula $\bar{x}$
\end_inset

 für 
\begin_inset Formula $\varphi$
\end_inset

 fest.
\end_layout

\begin_layout Definition
Die 
\series bold
Stelligkeit 
\series default
einer logischen Formel (beziehungsweise ihrer Argumente) bezeichne die Anzahl
 der frei vorkommenden Variablen: Für 
\begin_inset Formula $\varphi\left(\bar{x}\right)$
\end_inset

 gelte: 
\begin_inset Formula 
\[
\mathrm{ar}\left(\varphi\right)=\mathrm{ar}\left(\bar{x}\right)=\left|\mathrm{frei}\left(\varphi\right)\right|
\]

\end_inset


\end_layout

\begin_layout Definition
Ein 
\series bold
Satz
\series default
 sei eine Formel ohne freie Variablen.
\end_layout

\begin_layout Standard
Mit 
\begin_inset Formula $\mathtt{MF}\left(\omega\right)$
\end_inset

 bezeichnen wir die maximale Anzahl freier Variablen jedes Teilausdrucks
 von 
\begin_inset Formula $\omega$
\end_inset

.
\end_layout

\begin_layout Definition
Für eine 
\begin_inset Formula $k$
\end_inset

-stellige Formel 
\begin_inset Formula $\varphi$
\end_inset

 und eine Belegung 
\begin_inset Formula $\beta:\mathrm{frei}\left(\varphi\right)\rightarrow A$
\end_inset

 schreiben wir 
\begin_inset Formula $\mathfrak{A}\models\varphi^{\beta}$
\end_inset

 genau dann wenn 
\begin_inset Formula $\left\llbracket \varphi\right\rrbracket \left(\mathfrak{A},\beta\right)=1$
\end_inset

.
\end_layout

\begin_layout Definition
Für 
\begin_inset Formula $\varphi\left(\bar{x}\right)$
\end_inset

 und 
\begin_inset Formula $\bar{a}\in A^{\mathrm{ar}\left(\bar{x}\right)}$
\end_inset

 schreiben wir 
\begin_inset Formula $\left\llbracket \varphi\right\rrbracket \left(\mathfrak{A},\bar{a}\right)$
\end_inset

 anstelle von 
\begin_inset Formula $\left\llbracket \varphi\right\rrbracket \left(\mathfrak{A},\left(\bar{x}\mapsto\bar{b}\right)\right)$
\end_inset

, und 
\begin_inset Formula $\mathfrak{A}\models\varphi\left[\bar{a}\right]$
\end_inset

 anstelle von 
\begin_inset Formula $\mathfrak{A}\models\varphi^{\bar{x}\mapsto\bar{a}}$
\end_inset

.
\end_layout

\begin_layout Definition
Entsprechend sei 
\begin_inset Formula 
\[
q_{\varphi\left(\bar{x}\right)}\left(\mathfrak{A}\right)\coloneqq\left\{ \bar{a}\in A^{\mathrm{ar}\left(\bar{x}\right)}\mid\mathfrak{A}\models\varphi\left[\bar{a}\right]\right\} 
\]

\end_inset

die Relation aller 
\begin_inset Formula $\varphi$
\end_inset

 erfüllenden Tupel.
\end_layout

\begin_layout Standard
Somit beschreibt jede 
\begin_inset Formula $\mathcal{L}\left[\sigma\right]$
\end_inset

-Formel 
\begin_inset Formula $\varphi\left(\bar{x}\right)$
\end_inset

 eine 
\begin_inset Formula $\sigma$
\end_inset

-Anfrage 
\begin_inset Formula $q_{\varphi\left(\bar{x}\right)}$
\end_inset

, und jeder Satz eine 
\begin_inset Formula $\sigma$
\end_inset

-Eigenschaft.
 Da die Reihenfolge der Spalten der Relation von der Wahl des Arguments
 
\begin_inset Formula $\bar{x}$
\end_inset

 abhängt, wird es durch 
\begin_inset Formula $q_{\varphi\left(\bar{x}\right)}$
\end_inset

 mit angegeben.
\end_layout

\begin_layout Standard
In manchen Fällen möchten wir einige Variablen einer Formel belegen und
 sie erst dann als Anfrage auswerten.
\end_layout

\begin_layout Definition
Für eine Formel 
\begin_inset Formula $\varphi$
\end_inset

 und eine Belegung 
\begin_inset Formula $\beta:X\rightarrow A$
\end_inset

 mit 
\begin_inset Formula $\mathrm{frei}\left(\varphi\right)\nsubseteq X$
\end_inset

 sei 
\begin_inset Formula $\varphi^{\beta}$
\end_inset

 ein 
\series bold
partiell belegter
\series default
 Ausdruck; es sei 
\begin_inset Formula $\mathrm{frei}\left(\varphi^{\beta}\right)=\mathrm{frei}\left(\varphi\right)\backslash X$
\end_inset

.
\end_layout

\begin_layout Definition
Für 
\begin_inset Formula $\beta':\mathrm{frei}\left(\varphi^{\beta}\right)\rightarrow A$
\end_inset

 bezeichne 
\begin_inset Formula $\left\llbracket \varphi^{\beta}\right\rrbracket \left(\mathfrak{A},\beta'\right)$
\end_inset

 die Auswertung 
\begin_inset Formula $\left\llbracket \varphi\right\rrbracket \left(\mathfrak{A},\beta\cup\beta'\right)$
\end_inset

.
 Für ein Argument 
\begin_inset Formula $\bar{x}'$
\end_inset

 von 
\begin_inset Formula $\varphi^{\beta}$
\end_inset

 definieren wir die folgende Anfrage: 
\begin_inset Formula 
\[
q_{\varphi^{\beta}\left(\bar{x}'\right)}\coloneqq\left\{ \bar{a}\in A^{\ell}\mid\mathfrak{A}\models\varphi^{\beta}\left[\bar{a}\right]\right\} 
\]

\end_inset


\end_layout

\begin_layout Standard
\begin_inset Separator parbreak
\end_inset


\end_layout

\begin_layout Definition
Für eine 
\begin_inset Formula $\mathcal{L}\left[\sigma\right]$
\end_inset

-Formel 
\begin_inset Formula $\varphi$
\end_inset

 und 
\begin_inset Formula $n\in\mathbb{N}$
\end_inset

 drücke 
\begin_inset Formula $\models_{n}\varphi$
\end_inset

 aus, dass diese von allen 
\begin_inset Formula $\sigma$
\end_inset

-Strukturen 
\begin_inset Formula $\mathfrak{A}\in\mathbf{FIN}^{\left(n\right)}\left(\sigma\right)$
\end_inset

 der Größe 
\begin_inset Formula $n$
\end_inset

 unter allen Belegungen erfüllt wird.
 Die Notation 
\begin_inset Formula $\models_{\mathrm{fin}}\varphi$
\end_inset

 drücke aus, dass 
\begin_inset Formula $\varphi$
\end_inset

 von allen endlichen 
\begin_inset Formula $\sigma$
\end_inset

-Strukturen 
\begin_inset Formula $\mathfrak{A}\in\mathbf{FIN}\left(\sigma\right)$
\end_inset

 unter allen Belegungen erfüllt wird.
\end_layout

\begin_layout Definition
Falls 
\begin_inset Formula $\models_{n}\left(\varphi\leftrightarrow\psi\right)$
\end_inset

, so heißen 
\begin_inset Formula $\varphi$
\end_inset

 und 
\begin_inset Formula $\psi$
\end_inset

 
\begin_inset Formula $n$
\end_inset

-
\series bold
äquivalent
\series default
.
 Insbesondere bedeutet dies, dass 
\begin_inset Formula $\varphi$
\end_inset

 und 
\begin_inset Formula $\psi$
\end_inset

 die gleiche Anfrage 
\begin_inset Formula $q_{\varphi\left(\bar{x}\right)}=q_{\psi\left(\bar{x}\right)}$
\end_inset

 auf Strukturen der Größe 
\begin_inset Formula $n$
\end_inset

 definieren.
\end_layout

\begin_layout Section
Die Logik erster Stufe
\end_layout

\begin_layout Definition
\begin_inset CommandInset label
LatexCommand label
name "def:fo"

\end_inset

Für eine relationale Signatur 
\begin_inset Formula $\sigma$
\end_inset

 sind die Syntax und Semantik der Logik erster Stufe 
\begin_inset Formula $\mathrm{FO}\left[\sigma\right]$
\end_inset

 wie folgt definiert.
\end_layout

\begin_layout Labeling
\labelwidthstring 00.00.0000
(TV) Für jede Variable 
\begin_inset Formula $x\in\mathbf{var}$
\end_inset

 ist 
\begin_inset Formula $x$
\end_inset

 ein 
\begin_inset Formula $\mathrm{FO}\left[\sigma\right]$
\end_inset

-Term.
 
\begin_inset Formula 
\[
\mathrm{frei}\left(x\right)=\mathrm{var}\left(x\right)\coloneqq\left\{ x\right\} 
\]

\end_inset


\begin_inset Formula 
\[
\left\llbracket x\right\rrbracket \left(\mathfrak{A},\beta\right)\coloneqq\beta x
\]

\end_inset


\end_layout

\begin_layout Labeling
\labelwidthstring 00.00.0000
(AR) Für jedes Relationssymbol 
\begin_inset Formula $R/k\in\sigma$
\end_inset

 und jedes 
\begin_inset Formula $k$
\end_inset

-Tupel von 
\begin_inset Formula $\mathrm{FO}\left[\sigma\right]$
\end_inset

-Termen 
\begin_inset Formula $\bar{x}$
\end_inset

 ist 
\begin_inset Formula $R\bar{x}$
\end_inset

 eine 
\begin_inset Formula $\mathrm{FO}\left[\sigma\right]$
\end_inset

-Formel.
\begin_inset Formula 
\begin{eqnarray*}
\mathrm{frei}\left(R\bar{x}\right)\coloneqq\bigcup_{i=1}^{k}\mathrm{frei}\left(x_{i}\right) &  & \mathrm{var}\left(R\bar{x}\right)\coloneqq\bigcup_{i=1}^{k}\mathrm{var}\left(x_{i}\right)
\end{eqnarray*}

\end_inset


\begin_inset Formula 
\begin{eqnarray*}
\left\llbracket R\bar{x}\right\rrbracket \left(\mathfrak{A},\beta\right) & \coloneqq & \left[R^{\mathfrak{A}}\right]\left(\left\llbracket x_{1}\right\rrbracket \left(\mathfrak{A},\beta\right),\cdots,\left\llbracket x_{k}\right\rrbracket \left(\mathfrak{A},\beta\right)\right)
\end{eqnarray*}

\end_inset


\end_layout

\begin_layout Labeling
\labelwidthstring 00.00.0000
(AE) Für zwei 
\begin_inset Formula $\mathrm{FO}\left[\sigma\right]$
\end_inset

-Terme 
\begin_inset Formula $x_{1},x_{2}$
\end_inset

 ist 
\begin_inset Formula $x_{1}\dot{=}x_{2}$
\end_inset

 eine 
\begin_inset Formula $\mathrm{FO}\left[\sigma\right]$
\end_inset

-Formel.
\begin_inset Formula 
\begin{eqnarray*}
\mathrm{frei}\left(x_{1}\dot{=}x_{2}\right)\coloneqq\bigcup_{i=1}^{2}\mathrm{frei}\left(x_{i}\right) &  & \mathrm{var}\left(x_{1}\dot{=}x_{2}\right)\coloneqq\bigcup_{i=1}^{2}\mathrm{var}\left(x_{i}\right)
\end{eqnarray*}

\end_inset


\begin_inset Formula 
\begin{eqnarray*}
\left\llbracket x\dot{=}y\right\rrbracket \left(\mathfrak{A},\beta\right) & \coloneqq & \begin{cases}
1 & \mathrm{falls}\,\left\llbracket x\right\rrbracket \left(\mathfrak{A},\beta\right)=\left\llbracket y\right\rrbracket \left(\mathfrak{A},\beta\right)\\
0 & \mathrm{sonst}
\end{cases}
\end{eqnarray*}

\end_inset


\end_layout

\begin_layout Labeling
\labelwidthstring 00.00.0000
(N) Für eine 
\begin_inset Formula $\mathrm{FO}\left[\sigma\right]$
\end_inset

-Formel 
\begin_inset Formula $\varphi$
\end_inset

 ist 
\begin_inset Formula $\neg\varphi$
\end_inset

 eine 
\begin_inset Formula $\mathrm{FO}\left[\sigma\right]$
\end_inset

-Formel.
\begin_inset Formula 
\begin{eqnarray*}
\mathrm{frei}\left(\neg\varphi\right)\coloneqq\mathrm{frei}\left(\varphi\right) &  & \mathrm{var}\left(\neg\varphi\right)\coloneqq\mathrm{var}\left(\varphi\right)
\end{eqnarray*}

\end_inset


\begin_inset Formula 
\[
\left\llbracket \neg\varphi\right\rrbracket \left(\mathfrak{A},\beta\right)\coloneqq1-\left\llbracket \varphi\right\rrbracket \left(\mathfrak{A},\beta\right)
\]

\end_inset


\end_layout

\begin_layout Labeling
\labelwidthstring 00.00.0000
(J) Für 
\begin_inset Formula $k\geqslant2$
\end_inset

 
\begin_inset Formula $\mathrm{FO}\left[\sigma\right]$
\end_inset

-Formeln 
\begin_inset Formula $\varphi_{1},\cdots,\varphi_{k}$
\end_inset

 und einen Junktor 
\begin_inset Formula $\gamma\in\left\{ \wedge,\vee,\rightarrow,\leftrightarrow\right\} $
\end_inset

 (mit 
\begin_inset Formula $k=2$
\end_inset

 für 
\begin_inset Formula $\gamma\in\left\{ \rightarrow,\leftrightarrow\right\} $
\end_inset

) ist auch 
\begin_inset Formula $\left(\varphi_{1}\gamma\cdots\gamma\varphi_{k}\right)$
\end_inset

 eine 
\begin_inset Formula $\mathrm{FO}\left[\sigma\right]$
\end_inset

-Formel.
 
\begin_inset Formula 
\begin{eqnarray*}
\mathrm{frei}\left(\varphi_{1}\gamma\cdots\gamma\varphi_{k}\right)\coloneqq\bigcup_{i=1}^{k}\mathrm{frei}\left(\varphi_{i}\right) &  & \mathrm{var}\left(\varphi_{1}\gamma\cdots\gamma\varphi_{k}\right)\coloneqq\bigcup_{i=1}^{k}\mathrm{var}\left(\varphi_{i}\right)
\end{eqnarray*}

\end_inset


\begin_inset Formula 
\begin{eqnarray*}
\left\llbracket \varphi_{1}\wedge\cdots\wedge\varphi_{k}\right\rrbracket \left(\mathfrak{A},\beta\right) & \coloneqq & \min_{1\leqslant i\leqslant k}\left\llbracket \varphi_{i}\right\rrbracket \left(\mathfrak{A},\beta\right)\\
\left\llbracket \varphi_{1}\vee\cdots\vee\varphi_{k}\right\rrbracket \left(\mathfrak{A},\beta\right) & \coloneqq & \max_{1\leqslant i\leqslant k}\left\llbracket \varphi_{i}\right\rrbracket \left(\mathfrak{A},\beta\right)\\
\left\llbracket \varphi_{1}\rightarrow\varphi_{2}\right\rrbracket \left(\mathfrak{A},\beta\right) & \coloneqq & \left\llbracket \neg\varphi_{1}\vee\varphi_{2}\right\rrbracket \left(\mathfrak{A},\beta\right)\\
\left\llbracket \varphi_{1}\leftrightarrow\varphi_{2}\right\rrbracket \left(\mathfrak{A},\beta\right) & \coloneqq & \left\llbracket \left(\varphi_{1}\rightarrow\varphi_{2}\right)\wedge\left(\varphi_{2}\rightarrow\varphi_{1}\right)\right\rrbracket \left(\mathfrak{A},\beta\right)
\end{eqnarray*}

\end_inset


\end_layout

\begin_layout Labeling
\labelwidthstring 00.00.0000
(Q) Für einen Quantor 
\begin_inset Formula $Q\in\left\{ \exists,\forall\right\} $
\end_inset

, eine Variable 
\begin_inset Formula $x\in\mathbf{var}$
\end_inset

 und eine 
\begin_inset Formula $\mathrm{FO}\left[\sigma\right]$
\end_inset

-Formel 
\begin_inset Formula $\varphi$
\end_inset

 ist 
\begin_inset Formula $Qx\varphi$
\end_inset

 eine 
\begin_inset Formula $\mathrm{FO}\left[\sigma\right]$
\end_inset

-Formel.
\begin_inset Formula 
\begin{eqnarray*}
\mathrm{frei}\left(Qx\varphi\right)\coloneqq\mathrm{frei}\left(\varphi\right)\backslash\left\{ x\right\}  &  & \mathrm{var}\left(Qx\varphi\right)\coloneqq\mathrm{var}\left(\varphi\right)\cup\left\{ x\right\} 
\end{eqnarray*}

\end_inset


\begin_inset Formula 
\begin{eqnarray*}
\left\llbracket \exists x\varphi\right\rrbracket \left(\mathfrak{A},\beta\right) & \coloneqq & \max_{a\in A}\left(\left\llbracket \varphi\right\rrbracket \left(\mathfrak{A},\beta_{\backslash\left\{ x\right\} }\cup\left(x\mapsto a\right)\right)\right)\\
\left\llbracket \forall x\varphi\right\rrbracket \left(\mathfrak{A},\beta\right) & \coloneqq & \min_{a\in A}\left(\left\llbracket \varphi\right\rrbracket \left(\mathfrak{A},\beta_{\backslash\left\{ x\right\} }\cup\left(x\mapsto a\right)\right)\right)
\end{eqnarray*}

\end_inset

Ohne Beschränkung der Allgemeinheit gelte für 
\begin_inset Formula $Qx\varphi$
\end_inset

 stets 
\begin_inset Formula $x\in\mathrm{frei}\left(\varphi\right)$
\end_inset

, denn 
\begin_inset Formula $Qx\varphi\equiv Qx\left(x\dot{=}x\wedge\varphi\right)$
\end_inset

.
\end_layout

\begin_layout Standard
Wir kürzen 
\begin_inset Formula $Qx_{1}\cdots Qx_{k}\varphi$
\end_inset

 durch 
\begin_inset Formula $Q\bar{x}\varphi$
\end_inset

 und 
\begin_inset Formula $\bigwedge_{i=1}^{k}\left(x_{i}=y_{i}\right)$
\end_inset

 durch 
\begin_inset Formula $\bar{x}=\bar{y}$
\end_inset

 ab.
 Im folgenden werden wir im Allgemeinen Formeln ohne Implikations-Pfeile
 betrachten.
\end_layout

\begin_layout Definition
Eine 
\begin_inset Formula $\mathrm{FO}\left[\sigma\right]$
\end_inset

-Formel sei 
\series bold
implikationsfrei 
\series default
wenn sie keine Teilformel der Form 
\begin_inset Formula $\left(\varphi\rightarrow\psi\right)$
\end_inset

 oder 
\begin_inset Formula $\left(\varphi\leftrightarrow\psi\right)$
\end_inset

 enthält.
\end_layout

\begin_layout Standard
Weil 
\begin_inset Formula $\left(\varphi\rightarrow\psi\right)\equiv\left(\neg\varphi\vee\psi\right)$
\end_inset

 und 
\begin_inset Formula $\left(\varphi\leftrightarrow\psi\right)\equiv\left(\varphi\wedge\psi\right)\vee\left(\neg\varphi\wedge\neg\psi\right)$
\end_inset

, sind alle 
\begin_inset Formula $\mathrm{FO}\left[\sigma\right]$
\end_inset

-Formeln äquivalent zu implikationsfreien 
\begin_inset Formula $\mathrm{FO}\left[\sigma\right]$
\end_inset

-Formeln.
 Hierbei entsteht ein fester Zuwachs in der Länge der Formel 
\begin_inset Formula $\left\Vert \varphi\right\Vert $
\end_inset

, der die Datenkomplexität unberührt lässt.
\end_layout

\begin_layout Standard
\begin_inset Separator parbreak
\end_inset


\end_layout

\begin_layout Definition

\series bold
\begin_inset CommandInset label
LatexCommand label
name "def:qr"

\end_inset

Quantorenrang
\end_layout

\begin_layout Definition
Der Quantorenrang einer Formel sei die maximale Anzahl der geschachtelten
 Quantoren:
\begin_inset Formula 
\[
\begin{array}{cc}
\mathrm{qr}\left(R\bar{x}\right)=\mathrm{qr}\left(x_{1}\dot{=}x_{2}\right)=0 & \mathrm{qr}\left(\psi_{1}\gamma\cdots\gamma\psi_{k}\right)=\max_{i=1}^{k}\mathrm{qr}\left(\psi_{i}\right)\\
\mathrm{qr}\left(\exists x\psi\right)=\mathrm{qr}\left(\forall x\psi\right)=\mathrm{qr}\left(\psi\right)+1
\end{array}
\]

\end_inset


\end_layout

\begin_layout Standard
\begin_inset Separator parbreak
\end_inset


\end_layout

\begin_layout Definition
\begin_inset CommandInset label
LatexCommand label
name "def:m-equiv"

\end_inset

Zwei 
\begin_inset Formula $\sigma$
\end_inset

-Strukturen 
\begin_inset Formula $\mathfrak{A}$
\end_inset

 und 
\begin_inset Formula $\mathfrak{B}$
\end_inset

 heißen 
\begin_inset Formula $m$
\end_inset

-äquivalent (
\begin_inset Formula $\mathfrak{A}\equiv_{m}\mathfrak{B}$
\end_inset

, wenn für alle 
\begin_inset Formula $\mathrm{FO}\left[\sigma\right]$
\end_inset

-Sätze 
\begin_inset Formula $\varphi$
\end_inset

 mit 
\begin_inset Formula $\mathrm{qr}\left(\varphi\right)\leqslant m$
\end_inset

 gilt:
\begin_inset Formula 
\[
\mathfrak{A}\models\varphi\Longleftrightarrow\mathfrak{B}\models\varphi
\]

\end_inset


\end_layout

\begin_layout Section
Logiken mit Fixpunkt-Erweiterung
\end_layout

\begin_layout Standard
Wir führen eine Erweiterung ein, die es erlaubt, den iterativen Fixpunkt
 einer selbstreferenziellen logischen Formel zu definieren.
\end_layout

\begin_layout Definition
Eine Logik 
\begin_inset Formula $\mathcal{L}$
\end_inset

 erweitert die Logik 
\begin_inset Formula $\mathcal{L}'$
\end_inset

, wenn sie die Syntax und Semantik von 
\begin_inset Formula $\mathcal{L}'$
\end_inset

 übernimmt, und zusätzliche Produktionen einführt.
\end_layout

\begin_layout Standard
Als erstes definieren wir einen neuen Typ von Variablen.
\end_layout

\begin_layout Definition
Sei 
\begin_inset Formula $\mathbf{var}_{2}$
\end_inset

 die Menge aller Relationsvariablen.
 Jede solche Variable 
\begin_inset Formula $X\in\mathbf{var}_{2}$
\end_inset

 besitzt eine Stelligkeit 
\begin_inset Formula $\mathrm{ar}\left(X\right)=k\in\mathbb{N}_{\geqslant1}$
\end_inset

; diese wird auch durch 
\begin_inset Formula $X/k\in\mathbf{var}_{2}$
\end_inset

 notiert.
 Die Funktionen 
\begin_inset Formula $\mathrm{frei}$
\end_inset

 und 
\begin_inset Formula $\mathrm{var}$
\end_inset

, so wie die Belegungen 
\begin_inset Formula $\beta$
\end_inset

, werden auf 
\begin_inset Formula $\mathbf{var}\uplus\mathbf{var}_{2}$
\end_inset

 erweitert.
\begin_inset Formula 
\begin{eqnarray*}
\mathrm{frei}\left(\varphi\right),\mathrm{var}\left(\varphi\right) & \subseteq & \mathbf{var}\uplus\mathbf{var}_{2}\\
\beta:\mathrm{frei}\left(\varphi\right) & \rightarrow & A\cup\bigcup_{k\in\mathbb{N}}A^{k}\\
\beta X & \subseteq & A^{\mathrm{ar}\left(X\right)}\,\mathrm{für}\,X\in\mathbf{var}_{2}
\end{eqnarray*}

\end_inset


\end_layout

\begin_layout Standard
Wir möchten syntaktisch garantieren, dass die Iteration der Formel eine
 monoton wachsende Relation berechnet.
 Dafür wird verlangt, dass die selbstreferenzielle Relationsvariable nicht
 negiert vorkommt.
\end_layout

\begin_layout Definition

\series bold
Positivität
\end_layout

\begin_layout Definition
Wir definieren die (nicht disjunkten) Mengen der 
\begin_inset Formula $X$
\end_inset

-positiven und 
\begin_inset Formula $X$
\end_inset

-negativen 
\begin_inset Formula $\mathcal{L}\left[\sigma\right]$
\end_inset

-Formeln für 
\begin_inset Formula $X\in\mathbf{var}_{2}$
\end_inset

 wie folgt:
\begin_inset Separator latexpar
\end_inset


\end_layout

\begin_deeper
\begin_layout Itemize
Jeder 
\begin_inset Formula $\mathcal{L}\left[\sigma\right]$
\end_inset

-Ausdruck 
\begin_inset Formula $\omega$
\end_inset

 mit 
\begin_inset Formula $X\notin\mathrm{frei}\left(\omega\right)$
\end_inset

 ist sowohl 
\begin_inset Formula $X$
\end_inset

-positiv als auch 
\begin_inset Formula $X$
\end_inset

-negativ.
\end_layout

\begin_layout Itemize
Für jede 
\begin_inset Formula $X$
\end_inset

-positive Formel 
\begin_inset Formula $\varphi$
\end_inset

 ist 
\begin_inset Formula $\neg\varphi$
\end_inset

 
\begin_inset Formula $X$
\end_inset

-negativ, und umgekehrt.
\end_layout

\begin_layout Itemize
Für einen Junktor 
\begin_inset Formula $\gamma\in\left\{ \wedge,\vee\right\} $
\end_inset

 und 
\begin_inset Formula $k\geqslant2$
\end_inset

 
\begin_inset Formula $X$
\end_inset

-positive (beziehungsweise 
\begin_inset Formula $X$
\end_inset

-negative) Formeln 
\begin_inset Formula $\varphi_{1},\cdots,\varphi_{k}$
\end_inset

 ist 
\begin_inset Formula $\left(\varphi_{1}\gamma\cdots\gamma\varphi_{k}\right)$
\end_inset

 ebenfalls 
\begin_inset Formula $X$
\end_inset

-positiv (beziehungsweise 
\begin_inset Formula $X$
\end_inset

-negativ).
\end_layout

\begin_layout Itemize
Für einen Quantor 
\begin_inset Formula $Q\in\left\{ \exists,\forall\right\} $
\end_inset

, eine Variable 
\begin_inset Formula $x\in\mathbf{var}$
\end_inset

 und eine 
\begin_inset Formula $X$
\end_inset

-positive (beziehungsweise 
\begin_inset Formula $X$
\end_inset

-negative) Formel 
\begin_inset Formula $\varphi$
\end_inset

 ist 
\begin_inset Formula $Qx\varphi$
\end_inset

 ebenfalls 
\begin_inset Formula $X$
\end_inset

-positiv (beziehungsweise 
\begin_inset Formula $X$
\end_inset

-negativ).
\end_layout

\end_deeper
\begin_layout Standard
Nun definieren wir die Fixpunkt-Erweiterung.
\end_layout

\begin_layout Definition
\begin_inset CommandInset label
LatexCommand label
name "def:lfp"

\end_inset

Für eine Logik 
\begin_inset Formula $\mathcal{L}$
\end_inset

 und eine relationale Signatur 
\begin_inset Formula $\sigma$
\end_inset

 erweitert 
\begin_inset Formula $\mathrm{LFP}\left(\mathcal{L}\right)\left[\sigma\right]$
\end_inset

 die Logik 
\begin_inset Formula $\mathcal{L}\left[\sigma\right]$
\end_inset

 wie folgt:
\end_layout

\begin_layout Labeling
\labelwidthstring 00.00.0000
(AV) Für eine Relationsvariable 
\begin_inset Formula $X/k\in\mathbf{var}_{2}$
\end_inset

 und ein 
\begin_inset Formula $k$
\end_inset

-Tupel 
\begin_inset Formula $\bar{x}$
\end_inset

 von 
\begin_inset Formula $X$
\end_inset

-positiven 
\begin_inset Formula $\mathrm{LFP}\left(\mathcal{L}\right)\left[\sigma\right]$
\end_inset

-Termen ist 
\begin_inset Formula $X\bar{x}$
\end_inset

 eine 
\begin_inset Formula $X$
\end_inset

-positive 
\begin_inset Formula $\mathrm{LFP\left(\mathcal{L}\right)}\left[\sigma\right]$
\end_inset

-Formel.
\begin_inset Formula 
\begin{eqnarray*}
\mathrm{frei}\left(X\bar{x}\right) & \coloneqq & \left\{ X\right\} \cup\bigcup_{i=1}^{k}\mathrm{frei}\left(x_{i}\right)\\
\mathrm{var}\left(X\bar{x}\right) & \coloneqq & \left\{ X\right\} \cup\bigcup_{i=1}^{k}\mathrm{var}\left(x_{i}\right)\\
\left\llbracket X\bar{x}\right\rrbracket \left(\mathfrak{A},\beta\right) & \coloneqq & \left[\beta X\right]\left(\beta\bar{x}\right)\\
 & \mathrm{mit} & \beta X\subseteq A^{k},\\
 &  & \beta\bar{x}\in A^{k}
\end{eqnarray*}

\end_inset


\end_layout

\begin_layout Labeling
\labelwidthstring 00.00.0000
(LFP) Für eine Relationsvariable 
\begin_inset Formula $X/k\in\mathbf{var}_{2}$
\end_inset

, eine 
\begin_inset Formula $X$
\end_inset

-positive 
\begin_inset Formula $\mathrm{LFP}\left(\mathcal{L}\right)\left[\sigma\right]$
\end_inset

-Formel 
\begin_inset Formula $\psi$
\end_inset

, ein Tupel 
\begin_inset Formula $\bar{x}\in\mathbf{var}^{k}$
\end_inset

 und ein 
\begin_inset Formula $k$
\end_inset

-Tupel 
\begin_inset Formula $\bar{y}$
\end_inset

 von 
\begin_inset Formula $X$
\end_inset

-positiven 
\begin_inset Formula $\mathrm{\mathrm{LFP}\left(\mathcal{L}\right)}\left[\sigma\right]$
\end_inset

-Termen ist 
\begin_inset Formula $\varphi=\left[\mathrm{lfp}_{X,\bar{x}}\psi\right]\left(\bar{y}\right)$
\end_inset

 eine 
\begin_inset Formula $X$
\end_inset

-positive 
\begin_inset Formula $\mathrm{LFP}\left(\mathrm{\mathcal{L}}\right)\left[\sigma\right]$
\end_inset

-Formel.
\begin_inset Formula 
\begin{eqnarray*}
\mathrm{frei}\left(\varphi\right) & = & \mathrm{frei}\left(\psi\right)\backslash\left\{ X,x_{1},\cdots,x_{k}\right\} \cup\bigcup_{i=1}^{k}\mathrm{frei}\left(y_{i}\right)\\
\mathrm{var}\left(\varphi\right) & = & \mathrm{var}\left(\psi\right)\cup\left\{ X,x_{1},\cdots,x_{k}\right\} \cup\bigcup_{i=1}^{k}\mathrm{var}\left(y_{i}\right)
\end{eqnarray*}

\end_inset

Für eine Belegung 
\begin_inset Formula $\beta:\mathrm{frei}\left(\varphi\right)\rightarrow A$
\end_inset

 prüft 
\begin_inset Formula $\varphi=\left[\mathrm{lfp}_{X,\bar{x}}\psi\right]\left(\bar{y}\right)$
\end_inset

, ob die Belegung des Tupels 
\begin_inset Formula $\bar{y}$
\end_inset

 im kleinsten Fixpunkt des Relationssymbols 
\begin_inset Formula $X$
\end_inset

 liegt.
 
\begin_inset Formula 
\begin{eqnarray*}
\beta' & \coloneqq & \beta_{\mid\mathrm{frei}\left(\psi\right)\backslash\left\{ X,x_{1},\cdots,x_{k}\right\} }\\
\left\llbracket \left[\mathrm{lfp}_{X,\bar{x}}\psi\right]\left(\bar{y}\right)\right\rrbracket \left(\mathfrak{A},\beta\right) & \coloneqq & \left\llbracket X\bar{y}\right\rrbracket \left(\mathfrak{A},\beta\cup\left(X\mapsto\mathrm{lfp}_{X,\bar{x}}\left(\psi\right)\right)\right)
\end{eqnarray*}

\end_inset

Im folgenden wird eine Berechnung definiert, die den kleinsten Fixpunkt
 
\begin_inset Formula $\mathrm{lfp}_{X,\bar{x}}\left(\psi\right)$
\end_inset

 iterativ bestimmt.
\end_layout

\begin_layout Standard
Ohne Beschränkung der Allgemeinheit sei 
\begin_inset Formula $\left\{ x_{1},\cdots,x_{k}\right\} \subseteq\mathrm{frei}\left(\psi\right)$
\end_inset

, denn analog zu Definition 
\begin_inset CommandInset ref
LatexCommand ref
reference "def:fo"

\end_inset

 ist 
\begin_inset Formula $\psi\equiv\left(\bar{x}=\bar{x}\wedge\psi\right)$
\end_inset

.
 Die nicht durch den Operator gebundenen Variablen 
\begin_inset Formula $P\coloneqq\mathrm{frei}\left(\psi\right)\backslash\left\{ x_{1},\cdots,x_{k}\right\} \subseteq\mathrm{frei}\left(\varphi\right)$
\end_inset

 heißen 
\series bold
Parameter
\series default
 der Fixpunkt-Operation.
\end_layout

\begin_layout Standard
Für eine Parameter-Belegung 
\begin_inset Formula $\beta:P\rightarrow A$
\end_inset

 sei 
\begin_inset Formula $F_{\beta}$
\end_inset

 die folgende Abbildung: 
\begin_inset Formula 
\begin{eqnarray*}
F_{\beta} & : & 2^{A^{k}}\rightarrow2^{A^{k}}\\
F_{\beta}\left(Y\right) & \coloneqq & \left\{ \bar{a}\in A^{k}\mid\mathfrak{A}\models\psi^{\beta\cup\left(X\mapsto Y\right)}\left[\bar{a}\right]\right\} 
\end{eqnarray*}

\end_inset

Das heißt: 
\begin_inset Formula $F_{\beta}\left(Y\right)$
\end_inset

 ist das Anfrageergebnis von 
\begin_inset Formula $\varphi$
\end_inset

 auf 
\begin_inset Formula $\mathfrak{A}$
\end_inset

 unter der Belegung der Parameter mit 
\begin_inset Formula $\beta$
\end_inset

 und der Variable 
\begin_inset Formula $X$
\end_inset

 mit der Relation 
\begin_inset Formula $Y$
\end_inset

.
\end_layout

\begin_layout Standard
Aus der 
\begin_inset Formula $X$
\end_inset

-Positivität folgt nach 
\begin_inset CommandInset citation
LatexCommand cite
key "Gurevich1986,Libkin2012"

\end_inset

 die Monotonie von 
\begin_inset Formula $F_{\beta}$
\end_inset


\begin_inset Formula 
\[
A\subseteq B\Rightarrow F_{\beta}\left(A\right)\subseteq F_{\beta}\left(B\right)
\]

\end_inset

und daher induktiv die Existenz eines Fixpunkts 
\begin_inset Formula $F^{\infty}\left(\emptyset\right)$
\end_inset

, der nach höchstens 
\begin_inset Formula $\left|A^{k}\right|$
\end_inset

 Schritten erreicht wird:
\begin_inset Formula 
\[
\emptyset\subseteq F_{\beta}\left(\emptyset\right)\subseteq\cdots\subseteq F_{\beta}^{\infty}\left(\emptyset\right)\subseteq A^{k}
\]

\end_inset


\end_layout

\begin_layout Standard
Für jeden anderen Fixpunkt 
\begin_inset Formula $Y'$
\end_inset

 gilt 
\begin_inset Formula $\emptyset\subseteq Y'$
\end_inset

, und per Induktion auch 
\begin_inset Formula $F^{n}\left(\emptyset\right)\subseteq F^{n}\left(Y'\right)=Y'$
\end_inset

.
 Daher ist 
\begin_inset Formula $F^{\infty}\left(\emptyset\right)=\mathrm{lfp}_{X,\bar{x}}\left(\psi\right)$
\end_inset

 der kleinste Fixpunkt.
\end_layout

\begin_layout Standard
Im folgenden wird die Logik 
\begin_inset Formula $\mathrm{LFP}\left(\mathrm{FO}\right)$
\end_inset

 durch 
\begin_inset Formula $\mathrm{LFP}$
\end_inset

 abgekürzt.
 Ferner werden wir uns auf das 
\emph on
parameterfreie
\emph default
 Fragment der Logik beschränken, was (bis auf einen Zuwachs in der Anzahl
 der Variablen und Länge der Formel) die Allgemeinheit nicht einschränkt.
\end_layout

\begin_layout Definition
\begin_inset CommandInset label
LatexCommand label
name "def:fp-paramfree"

\end_inset

Eine 
\begin_inset Formula $\mathrm{LFP}\left[\sigma\right]$
\end_inset

-Formel 
\begin_inset Formula $\varphi$
\end_inset

 ist 
\series bold
parameterfrei
\series default
, falls der Fixpunkt-Operator stets alle Variablen bindet - das heißt, für
 jede Teilformel der Form 
\begin_inset Formula $\left[\mathrm{lfp}_{X,\bar{x}}\psi\right]\left(\bar{y}\right)$
\end_inset

 gilt: 
\begin_inset Formula 
\[
\mathrm{frei}\left(\psi\right)\subseteq\left\{ X,x_{1},\cdots,x_{\mathrm{ar}\left(X\right)}\right\} 
\]

\end_inset


\end_layout

\begin_layout Proposition
\begin_inset CommandInset label
LatexCommand label
name "prop:fp-paramfree"

\end_inset

Jede 
\begin_inset Formula $\mathrm{LFP}\left[\sigma\right]$
\end_inset

-Formel 
\begin_inset Formula $\varphi$
\end_inset

 kann (unter Zuwachs der Länge 
\begin_inset Formula $\left\Vert \varphi\right\Vert $
\end_inset

 und Größe 
\begin_inset Formula $\left|\mathrm{var}\left(\varphi\right)\right|$
\end_inset

) in eine parameterfreie 
\begin_inset Formula $\mathrm{LFP}\left[\sigma\right]$
\end_inset

-Formel 
\begin_inset Formula $\varphi'$
\end_inset

 übersetzt werden.
\begin_inset CommandInset citation
LatexCommand cite
key "Zaid,Grohe2005,Dziembowski96bounded-variablefixpoint"

\end_inset


\end_layout

\begin_layout Example
Die folgende 
\begin_inset Formula $\mathrm{LFP}\left[E\right]$
\end_inset

-Formel 
\begin_inset Formula $\varphi\left(u,v\right)$
\end_inset

 ist erfüllt, wenn 
\begin_inset Formula $u$
\end_inset

 und 
\begin_inset Formula $v$
\end_inset

 durch einen Weg beliebiger Länge verbunden sind: 
\begin_inset Formula 
\[
\varphi\left(u,v\right)\coloneqq\left[\mathrm{lfp}_{T,\left(x,y\right)}\,\left(\exists z\,\left(E\left(x,z\right)\wedge T\left(z,y\right)\right)\vee x\dot{=}y\right)\right]\left(u,v\right)
\]

\end_inset


\end_layout

\begin_layout Definition
Eine etwas robustere, aber äquivalente, Definition der Fixpunktlogik verwendet
 den inflationären Fixpunkt-Operator.
 Anstelle der Positivität einer Formel in einer Relationsvariable betrachten
 wir mit 
\begin_inset Formula $\left[\mathrm{ifp}_{X,\bar{x}}\psi\right]\left(\bar{y}\right)$
\end_inset

 implizit die Formel 
\begin_inset Formula $\left[\mathrm{lfp}_{X,\bar{x}}\left(X\bar{x}\vee\psi\right)\right]\left(\bar{y}\right)$
\end_inset

, die uns eine inflationäre Iteration garantiert:
\begin_inset Formula 
\[
F_{\beta}\left(Y\right)=Y\cup q_{\psi\left(\bar{x}\right)}^{\beta\cup\left(X\rightarrow Y\right)}\left(\mathfrak{A}\right)\supseteq Y
\]

\end_inset


\end_layout

\begin_layout Definition
In diesem Fall muss 
\begin_inset Formula $\psi$
\end_inset

 nicht mehr 
\begin_inset Formula $X$
\end_inset

-positiv sein.
\end_layout

\begin_layout Section
Logiken mit numerischen Erweiterungen
\end_layout

\begin_layout Subsection
Disjunkte Orakel
\end_layout

\begin_layout Standard
Eine Erweiterung um ein numerisches Orakel fügt einer Logik eine Anzahl
 von Relationssymbolen hinzu, die für 
\begin_inset Formula $\mathfrak{A}\in\mathbf{FIN}\left(\sigma\right)$
\end_inset

 eine feste Interpretation über einem von 
\begin_inset Formula $A$
\end_inset

 disjunkten numerischen Universum 
\begin_inset Formula $\left[0,\left|A\right|\right]$
\end_inset

 erhalten.
\end_layout

\begin_layout Definition

\series bold
\begin_inset Formula $\eta$
\end_inset

-Orakel, 
\begin_inset Formula $\mathcal{L}+\Upsilon$
\end_inset

-Logik
\end_layout

\begin_layout Definition
Sei 
\begin_inset Formula $\eta$
\end_inset

 eine relationale Signatur.
 Ein 
\begin_inset Formula $\eta$
\end_inset

-Orakel 
\begin_inset Formula $\Upsilon:\mathbb{N}\rightarrow\mathbf{FIN}_{\leqslant}^{0}\left(\eta\right)$
\end_inset

 ist eine Funktion, die jeder natürlichen Zahl 
\begin_inset Formula $n$
\end_inset

 eine geordnete 
\begin_inset Formula $\left(\eta\uplus\left\{ \leqslant\right\} \right)$
\end_inset

-Struktur 
\begin_inset Formula $\Upsilon\left(n\right)$
\end_inset

 über 
\begin_inset Formula $\left[0,n\right]$
\end_inset

 zuweist.
\end_layout

\begin_layout Definition
Sei 
\begin_inset Formula $\sigma$
\end_inset

 eine von 
\begin_inset Formula $\eta\uplus\left\{ \leqslant\right\} $
\end_inset

 disjunkte relationale Signatur und 
\begin_inset Formula $\mathcal{L}$
\end_inset

 eine Logik (zum Beispiel 
\begin_inset Formula $\mathrm{FO}$
\end_inset

 oder 
\begin_inset Formula $\mathrm{LFP}$
\end_inset

).
 Für ein 
\begin_inset Formula $\eta$
\end_inset

-Orakel 
\begin_inset Formula $\Upsilon$
\end_inset

 ist die Syntax der 
\begin_inset Formula $\left(\mathcal{L}+\Upsilon\right)\left[\sigma\right]$
\end_inset

-Logik die der Logik 
\begin_inset Formula $\mathcal{L}\left[\sigma\uplus\eta\uplus\left\{ \leqslant\right\} \right]$
\end_inset

.
\end_layout

\begin_layout Definition
Für eine endliche 
\begin_inset Formula $\sigma$
\end_inset

-Struktur 
\begin_inset Formula $\mathfrak{A}$
\end_inset

 mit 
\begin_inset Formula $A\cap\left[0,\left|A\right|\right]=\emptyset$
\end_inset

 und eine Belegung 
\begin_inset Formula $\beta:\mathbf{var}\rightarrow A\uplus\left[0,\left|A\right|\right]$
\end_inset

 werden 
\begin_inset Formula $\left(\mathcal{L}+\Upsilon\right)$
\end_inset

-Ausdrücke auf der disjunkten Vereinigung von 
\begin_inset Formula $\mathfrak{A}$
\end_inset

 mit der entsprechenden Orakelstruktur 
\begin_inset Formula $\Upsilon\left(\left|A\right|\right)$
\end_inset

 ausgewertet:
\begin_inset Formula 
\[
\left\llbracket \varphi\right\rrbracket \left(\mathfrak{A},\beta\right)\coloneqq\left\llbracket \varphi\right\rrbracket \left(\mathfrak{A}\uplus\Upsilon\left(\left|A\right|\right),\beta\right)
\]

\end_inset


\end_layout

\begin_layout Notation
Nach unserem Begriff der logischen Erweiterung ist die Bezeichnung 
\begin_inset Formula $\mathrm{LFP}\left(\mathcal{L}+\Upsilon\right)$
\end_inset

 gleichbedeutend mit 
\begin_inset Formula $\mathrm{LFP}\left(\mathcal{L}\right)+\Upsilon$
\end_inset

.
 Im folgenden werden wir allgemein die erste Bezeichnung verwenden, aber
 weiterhin 
\begin_inset Formula $\mathrm{LFP}\left(\mathrm{FO}\right)+\Upsilon$
\end_inset

 durch 
\begin_inset Formula $\mathrm{LFP}+\Upsilon$
\end_inset

 abkürzen.
\end_layout

\begin_layout Definition

\series bold
Uniformität
\end_layout

\begin_layout Definition
Wir nennen ein 
\begin_inset Formula $\eta$
\end_inset

-Orakel 
\series bold

\begin_inset Formula $\mathcal{K}$
\end_inset

-uniform
\series default
 (für eine Komplexitätsklasse 
\begin_inset Formula $\mathcal{K}$
\end_inset

) wenn die Berechnung der Repräsentation von 
\begin_inset Formula $\Upsilon\left(n\right)$
\end_inset

 bei Eingabe von 
\begin_inset Formula $\overset{n}{\overbrace{1\cdots1}}$
\end_inset

 in 
\begin_inset Formula $\mathcal{K}$
\end_inset

 ist.
\end_layout

\begin_layout Definition
Insbesondere sei 
\begin_inset Formula $P$
\end_inset

 die Klasse der 
\begin_inset Formula $\mathrm{poly}\left(n\right)$
\end_inset

-zeitbeschränkten, und 
\begin_inset Formula $\mathrm{LOGSPACE}$
\end_inset

 die Klasse der 
\begin_inset Formula $\mathcal{O}\left(\log n\right)$
\end_inset

-platzbeschränkten Turingmaschinen.
 
\begin_inset Formula $P/\mathrm{poly}$
\end_inset

 sei die Klasse der 
\begin_inset Formula $\mathrm{poly}\left(n\right)$
\end_inset

-zeitbeschränkten Turingmaschinen, die eine 
\begin_inset Formula $\mathrm{poly}\left(n\right)$
\end_inset

-beschränkte Orakel-Eingabe erhalten.
\end_layout

\begin_layout Standard
Wir definieren die folgenden drei numerischen Orakel für die reine Ordnung,
 für Arithmetik, und für nicht berechenbare Prädikate.
\end_layout

\begin_layout Definition

\series bold
\begin_inset CommandInset label
LatexCommand label
name "def:ord"

\end_inset


\series default
Sei 
\begin_inset Formula $\mathbf{ORD}:\mathbb{N}\rightarrow\mathbf{FIN}_{<}^{0}\left(\emptyset\right)$
\end_inset

 ein 
\begin_inset Formula $\emptyset$
\end_inset

-Orakel, so dass das für 
\begin_inset Formula $n\in\mathbb{N}$
\end_inset

 die geordnete 
\begin_inset Formula $\emptyset$
\end_inset

-Struktur gilt: 
\begin_inset Formula 
\[
\mathbf{ORD}\left(n\right)\coloneqq\left(\left[0,n\right],\leqslant_{\mid\left[0,n\right]}\right)\in\mathbf{FIN}_{<}^{\left[0,n\right]}\left(\emptyset\right)
\]

\end_inset


\end_layout

\begin_layout Standard
\begin_inset Separator parbreak
\end_inset


\end_layout

\begin_layout Definition

\series bold
\begin_inset CommandInset label
LatexCommand label
name "def:bit"

\end_inset


\series default
Sei 
\begin_inset Formula $\mathbf{BIT}:\mathbb{N}\rightarrow\mathbf{FIN}_{<}^{0}\left(\left\{ \mathtt{BIT}\right\} \right)$
\end_inset

 ein 
\begin_inset Formula $\left\{ \mathtt{BIT}\right\} $
\end_inset

-Orakel, wobei das Prädikat 
\begin_inset Formula $\mathtt{BIT}\left(a,b\right)$
\end_inset

 ausdrückt, dass das 
\begin_inset Formula $b$
\end_inset

te Bit der Binärdarstellung von 
\begin_inset Formula $a$
\end_inset

 den Wert 
\begin_inset Formula $1$
\end_inset

 hat.
 
\begin_inset Formula 
\begin{eqnarray*}
\mathcal{N}_{\mathrm{bit}} & \coloneqq & \left(\mathbb{N},\leqslant,\mathtt{BIT}^{\mathcal{N}}\right)\\
\mathtt{BIT}^{\mathcal{N}} & \coloneqq & \left\{ \left(a,b\right)\in\mathbb{N}^{2}\mid a=\Sigma_{i=0}^{\left\lceil \log a\right\rceil }x_{i}2^{i},\,\bar{x}\in\left\{ 0,1\right\} ^{\left\lceil \log a\right\rceil },\,x_{b}=1\right\} \\
\mathbf{BIT}\left(n\right) & \coloneqq & \left(\mathcal{N}_{\mathrm{bit}}\right)_{\mid\left[0,n\right]}\in\mathbf{FIN}_{<}^{\left[0,n\right]}\left(\left\{ \mathtt{BIT}\right\} \right)
\end{eqnarray*}

\end_inset


\end_layout

\begin_layout Standard
\begin_inset Separator parbreak
\end_inset


\end_layout

\begin_layout Definition
\begin_inset CommandInset label
LatexCommand label
name "def:arb"

\end_inset

Sei 
\begin_inset Formula $\eta_{\mathrm{arb}}=\left\{ R_{X}\mid X\in\bigcup_{k\in\mathbb{N}}2^{\mathbb{N}^{k}}\right\} $
\end_inset

 eine unendliche Signatur, die für jede beliebige Relation 
\begin_inset Formula $X\subseteq\mathbb{N}^{k}$
\end_inset

 mit 
\begin_inset Formula $k\in\mathbb{N}$
\end_inset

 auf den natürlichen Zahlen ein Symbol 
\begin_inset Formula $R_{X}/k$
\end_inset

 enthält, und sei 
\begin_inset Formula $\mathcal{N}_{\mathrm{arb}}$
\end_inset

 die 
\begin_inset Formula $\eta_{\mathrm{arb}}$
\end_inset

-Struktur über 
\begin_inset Formula $\mathbb{N}$
\end_inset

, die diese Symbole interpretiert.
 Dann sei 
\begin_inset Formula $\mathbf{ARB}:\mathbb{N}\rightarrow\mathbf{FIN}_{<}^{0}\left(\eta_{\mathrm{arb}}\right)$
\end_inset

 ein 
\begin_inset Formula $\eta_{\mathrm{arb}}$
\end_inset

-Orakel, das die endlichen Anfangsstücke dieser Relationen ausgibt:
\begin_inset Formula 
\begin{eqnarray*}
\mathcal{N}_{\mathrm{arb}} & \coloneqq & \left(\mathbb{N},\leqslant,\left(R_{X}\mapsto X\right)_{R_{X}\in\eta_{\mathrm{arb}}}\right)\\
\mathbf{ARB}\left(n\right) & \coloneqq & \left(\mathcal{N}_{\mathrm{arb}}\right)_{\mid\left[0,n\right]}\in\mathbf{FIN}_{<}^{\left[0,n\right]}\left(\eta_{\mathrm{arb}}\right)
\end{eqnarray*}

\end_inset


\end_layout

\begin_layout Definition
Hierbei ist leicht nachweisbar: 
\begin_inset Formula $\mathbf{ORD}$
\end_inset

 und 
\begin_inset Formula $\mathbf{BIT}$
\end_inset

 sind 
\begin_inset Formula $\mathrm{LOGSPACE}$
\end_inset

-uniform, und 
\begin_inset Formula $\mathbf{ARB}$
\end_inset

 ist 
\begin_inset Formula $P/\mathrm{poly}$
\end_inset

-uniform.
\end_layout

\begin_layout Subsection
Zähl-Erweiterungen
\end_layout

\begin_layout Standard
Wir führen mehrere syntaktische Erweiterungen der Logik 
\begin_inset Formula $\mathrm{FO}+\Upsilon$
\end_inset

 ein, die es erlauben, erfüllende Belegungen einer Variable zu zählen: Den
 Zählterm 
\begin_inset Formula $\#$
\end_inset

, den Zählquantor 
\begin_inset Formula $\exists^{=}$
\end_inset

, und den Majority-Quantor 
\begin_inset Formula $\exists^{\geqslant}$
\end_inset

.
 Es wird nachgewiesen, dass alle drei Erweiterungen die gleiche Ausdrucksstärke
 modulo einem festen Zuwachs der Formellänge haben.
\end_layout

\begin_layout Definition

\series bold
Zählterm 
\begin_inset Formula $\#$
\end_inset


\series default
 (wie in 
\begin_inset CommandInset citation
LatexCommand cite
key "AD2014"

\end_inset

, und Abschnitt 8.4.2 von 
\begin_inset CommandInset citation
LatexCommand cite
key "EbbinghausFlum"

\end_inset

 für Fixpunktlogik)
\end_layout

\begin_layout Definition
Der Zählterm ist eine zusätzliche Termproduktion, die die erfüllenden Belegungen
 einer Formel zählt.
\end_layout

\begin_layout Definition
Sei 
\begin_inset Formula $\mathcal{L}$
\end_inset

 eine beliebige Logik, 
\begin_inset Formula $\eta$
\end_inset

 eine relationale Signatur, und 
\begin_inset Formula $\Upsilon:\mathbb{N}\rightarrow\mathbf{FIN}_{<}\left(\eta\right)$
\end_inset

 ein 
\begin_inset Formula $\eta$
\end_inset

-Orakel.
\end_layout

\begin_layout Definition
Die 
\begin_inset Formula $\left(\mathcal{L}+\Upsilon+\#\right)$
\end_inset

-Logik erweitert die 
\begin_inset Formula $\left(\mathcal{L}+\Upsilon\right)$
\end_inset

-Logik um die folgende Regel:
\begin_inset Separator latexpar
\end_inset


\end_layout

\begin_deeper
\begin_layout Labeling
\labelwidthstring 00.00.0000
(TC) Für eine 
\begin_inset Formula $\left(\mathcal{L}+\Upsilon+\#\right)\left[\sigma\right]$
\end_inset

-Formel 
\begin_inset Formula $\varphi$
\end_inset

 und eine Variable 
\begin_inset Formula $x\in\mathbf{var}$
\end_inset

 ist 
\begin_inset Formula $\#x\varphi$
\end_inset

 ein 
\begin_inset Formula $\left(\mathcal{L}+\Upsilon+\#\right)\left[\sigma\right]$
\end_inset

-Term.
 
\begin_inset Formula 
\begin{eqnarray*}
\mathrm{frei}\left(\#x\varphi\right) & \coloneqq & \mathrm{frei}\left(\varphi\right)\backslash\left\{ x\right\} \\
\mathrm{var}\left(\#x\varphi\right) & \coloneqq & \mathrm{var}\left(\varphi\right)\cup\left\{ x\right\} 
\end{eqnarray*}

\end_inset

Auf einer endlichen Struktur 
\begin_inset Formula $\mathfrak{A}\in\mathbf{FIN}^{\left(n\right)}\left(\sigma\right)$
\end_inset

 mit 
\begin_inset Formula $n\in\mathbb{N}$
\end_inset

 und einer Belegung 
\begin_inset Formula 
\[
\beta:\mathrm{frei}\left(\varphi\right)\backslash\left\{ x\right\} \rightarrow A\uplus\left[0,n\right]
\]

\end_inset

 sei 
\begin_inset Formula 
\[
\left\llbracket \#x\varphi\right\rrbracket \left(\mathfrak{A},\beta\right)\coloneqq\left|\left\{ a\in A\mid\mathfrak{A}\models\varphi^{\beta\cup\binom{x}{a}}\right\} \right|
\]

\end_inset

die Anzahl der unterschiedlichen Werte 
\begin_inset Formula $a\in A$
\end_inset

, für die 
\begin_inset Formula $\mathfrak{A}\models\varphi^{\beta\cup\binom{x}{a}}$
\end_inset

 gilt.
\end_layout

\end_deeper
\begin_layout Example*
Diese Erweiterung erlaubt die Definition vieler arithmetischer Operatoren
 durch Terme, wie zum Beispiel die positive Differenz:
\begin_inset Formula 
\begin{eqnarray*}
t_{\mathrm{DIFF}}\left(x,y\right) & \coloneqq & \#_{z}\left(\neg z\leqslant x\wedge z\leqslant y\right)\\
\left\llbracket t_{\mathrm{DIFF}}\right\rrbracket \left(\mathfrak{A},\left(a,b\right)\right) & = & \max\left(b-a,0\right)
\end{eqnarray*}

\end_inset


\end_layout

\begin_layout Definition

\series bold
Zählquantor 
\series default

\begin_inset Formula $\exists^{=}$
\end_inset

 (wie in 
\begin_inset CommandInset citation
LatexCommand cite
key "Schweikardt:2005:AFL:1071596.1071602"

\end_inset

, hier aber mit einem disjunkten numerischen Universum)
\end_layout

\begin_layout Definition
Der Zählquantor ist eine zusätzlicher Quantor, der die Zahl der erfüllenden
 Belegungen einer Formel mit einer Variable vergleicht.
\end_layout

\begin_layout Definition
Sei 
\begin_inset Formula $\mathcal{L}$
\end_inset

 eine beliebige Logik, 
\begin_inset Formula $\eta$
\end_inset

 eine relationale Signatur, und 
\begin_inset Formula $\Upsilon:\mathbb{N}\rightarrow\mathbf{FIN}_{<}^{\left[0,n\right]}\left(\eta\right)$
\end_inset

 ein 
\begin_inset Formula $\eta$
\end_inset

-Orakel.
\end_layout

\begin_layout Definition
Die 
\begin_inset Formula $\mathcal{L}+\Upsilon+\exists^{=}$
\end_inset

-Logik erweitert die 
\begin_inset Formula $\mathcal{L}+\Upsilon$
\end_inset

-Logik um die folgende Regel:
\begin_inset Separator latexpar
\end_inset


\end_layout

\begin_deeper
\begin_layout Labeling
\labelwidthstring 00.00.0000
(QC) Für eine 
\begin_inset Formula $\left(\mathcal{L}+\Upsilon+\exists^{=}\right)\left[\sigma\right]$
\end_inset

-Formel 
\begin_inset Formula $\varphi$
\end_inset

 und zwei Variablen 
\begin_inset Formula $x,y\in\mathbf{var}$
\end_inset

 ist 
\begin_inset Formula $\exists^{=y}x\varphi$
\end_inset

 eine 
\begin_inset Formula $\left(\mathcal{L}+\Upsilon+\exists^{=}\right)\left[\sigma\right]$
\end_inset

-Formel.
 
\begin_inset Formula 
\begin{eqnarray*}
\mathrm{frei}\left(\exists^{=y}x\varphi\right) & \coloneqq & \left\{ y\right\} \cup\left(\mathrm{frei}\left(\varphi\right)\backslash\left\{ x\right\} \right)\\
\mathrm{var}\left(\exists^{=y}x\varphi\right) & \coloneqq & \mathrm{var}\left(\varphi\right)\cup\left\{ x,y\right\} 
\end{eqnarray*}

\end_inset

Auf einer endlichen Struktur 
\begin_inset Formula $\mathfrak{A}\in\mathbf{FIN}^{\left(n\right)}\left(\sigma\right)$
\end_inset

 mit einer Belegung 
\begin_inset Formula 
\[
\beta:\left(\mathrm{frei}\left(\varphi\right)\backslash\left\{ x\right\} \right)\cup\left\{ y\right\} \rightarrow A\cup\left[0,n\right]
\]

\end_inset

gelte: 
\begin_inset Formula 
\[
\left\llbracket \exists^{=y}x\varphi\right\rrbracket \left(\mathfrak{A},\beta\right)\coloneqq\begin{cases}
1 & \mathrm{falls}\,\,\beta y=\left\{ a\in A\mid\mathfrak{A}\models\varphi^{\beta_{\backslash\left\{ x\right\} }\cup\binom{x}{a}}\right\} \\
0 & \mathrm{sonst}
\end{cases}
\]

\end_inset


\end_layout

\end_deeper
\begin_layout Standard
\begin_inset Separator parbreak
\end_inset


\end_layout

\begin_layout Definition

\series bold
Majority-Quantor 
\series default

\begin_inset Formula $\exists^{\geqslant}$
\end_inset

 (wie in 
\begin_inset CommandInset citation
LatexCommand cite
key "EbbinghausFlum"

\end_inset

 Abschnitt 3.4, hier aber mit 
\begin_inset Formula $\exists^{\geqslant x}$
\end_inset

 für 
\begin_inset Formula $x\in\mathbf{var}$
\end_inset

 anstelle von unendlich vielen Quantoren 
\begin_inset Formula $\left(\exists^{\geqslant n}\right)_{n\in\mathbb{N}}$
\end_inset

)
\end_layout

\begin_layout Definition
Der Majority-Quantor funktioniert wie der Zählquantor und prüft, ob die
 Zahl der erfüllenden Belegungen mindestens den Wert einer Variable erreicht.
\end_layout

\begin_layout Definition
Sei 
\begin_inset Formula $\mathcal{L}$
\end_inset

 eine beliebige Logik, 
\begin_inset Formula $\eta$
\end_inset

 eine relationale Signatur, und 
\begin_inset Formula $\Upsilon:\mathbb{N}\rightarrow\mathbf{FIN}_{<}^{\left[0,n\right]}\left(\eta\right)$
\end_inset

 ein 
\begin_inset Formula $\eta$
\end_inset

-Orakel.
\end_layout

\begin_layout Definition
Die 
\begin_inset Formula $\mathcal{L}+\Upsilon+\exists^{\geqslant}$
\end_inset

-Logik erweitert die 
\begin_inset Formula $\mathcal{L}+\Upsilon$
\end_inset

-Logik um die folgende Regel:
\begin_inset Separator latexpar
\end_inset


\end_layout

\begin_deeper
\begin_layout Labeling
\labelwidthstring 00.00.0000
(QM) Für eine 
\begin_inset Formula $\left(\mathcal{L}+\Upsilon+\exists^{\geqslant}\right)\left[\sigma\right]$
\end_inset

-Formel 
\begin_inset Formula $\varphi$
\end_inset

 und zwei Variablen 
\begin_inset Formula $x,y\in\mathbf{var}$
\end_inset

 ist 
\begin_inset Formula $\exists^{\geqslant y}x\varphi$
\end_inset

 eine 
\begin_inset Formula $\left(\mathcal{L}+\Upsilon+\exists^{\geqslant}\right)\left[\sigma\right]$
\end_inset

-Formel.
 
\begin_inset Formula 
\begin{eqnarray*}
\mathrm{frei}\left(\exists^{\geqslant y}x\varphi\right)=\left\{ y\right\} \cup\left(\mathrm{frei}\left(\varphi\right)\backslash\left\{ x\right\} \right) &  & \mathrm{var}\left(\exists^{\geqslant y}x\varphi\right)=\mathrm{var}\left(\varphi\right)\cup\left\{ x,y\right\} 
\end{eqnarray*}

\end_inset

Auf einer endlichen Struktur 
\begin_inset Formula $\mathfrak{A}\in\mathbf{FIN}^{\left(n\right)}\left(\sigma\right)$
\end_inset

 mit einer Belegung 
\begin_inset Formula 
\[
\beta:\left(\mathrm{frei}\left(\varphi\right)\backslash\left\{ x\right\} \right)\cup\left\{ y\right\} \rightarrow A\cup\left[0,n\right]
\]

\end_inset

 gilt: 
\begin_inset Formula 
\[
\left\llbracket \exists^{\geqslant y}x\varphi\right\rrbracket \left(\mathfrak{A},\beta\right)\coloneqq\begin{cases}
1 & \mathrm{falls}\,\,\beta y\in\left[0,n\right],\,\beta y\leqslant\left\{ a\in A\mid\mathfrak{A}\models\varphi^{\beta_{\backslash\left\{ x\right\} }\cup\binom{x}{a}}\right\} \\
0 & \mathrm{sonst}
\end{cases}
\]

\end_inset


\end_layout

\end_deeper
\begin_layout Proposition
\begin_inset CommandInset label
LatexCommand label
name "prop:counting-equal"

\end_inset

Die Logiken 
\begin_inset Formula $\mathcal{L}+\Upsilon+\#$
\end_inset

 und 
\begin_inset Formula $\mathcal{L}+\Upsilon+\exists^{=}$
\end_inset

 und 
\begin_inset Formula $\mathcal{L}+\Upsilon+\exists^{\geqslant}$
\end_inset

 sind äquivalent, modulo eines festen Zuwachses in 
\begin_inset Formula $\left\Vert \varphi\right\Vert $
\end_inset

 und 
\begin_inset Formula $\left|\mathrm{var}\left(\varphi\right)\right|$
\end_inset

.
\end_layout

\begin_layout Proof
Jede 
\begin_inset Formula $\left(\mathcal{L}+\Upsilon+\#\right)\left[\sigma\right]$
\end_inset

-Formel 
\begin_inset Formula $\varphi$
\end_inset

 ist äquivalent zu einer 
\begin_inset Formula $\left(\mathcal{L}+\Upsilon+\exists^{=}\right)\left[\sigma\right]$
\end_inset

-Formel 
\begin_inset Formula $\varphi'$
\end_inset

.
 Dazu ersetzen wir jede 
\begin_inset Quotes gld
\end_inset

pseudo-atomare
\begin_inset Quotes grd
\end_inset

 Teilformel, die einen Zählterm enthält, wie folgt:
\begin_inset Separator latexpar
\end_inset


\end_layout

\begin_deeper
\begin_layout Case
Falls 
\begin_inset Formula $\varphi=y\dot{=}\#x\psi$
\end_inset

 oder 
\begin_inset Formula $\varphi=\#x\psi\dot{=}y$
\end_inset

 für 
\begin_inset Formula $x,y\in\mathbf{var}$
\end_inset

, so sei 
\begin_inset Formula $\varphi'\coloneqq\exists^{=y}x\psi'$
\end_inset

.
\end_layout

\begin_layout Case
Falls 
\begin_inset Formula $\varphi=\#x_{1}\psi_{1}\dot{=}\#x_{2}\psi_{2}$
\end_inset

 für 
\begin_inset Formula $x_{1},x_{2}\in\mathbf{var}$
\end_inset

, so sei 
\begin_inset Formula $y\in\mathbf{var}\backslash\left(\mathrm{frei}\left(\psi_{1}\right)\cup\mathrm{frei}\left(\psi_{2}\right)\right)$
\end_inset

 eine neue Variable, und
\begin_inset Formula 
\[
\varphi'\coloneqq\exists y\left(\exists^{=y}x_{1}\psi_{1}'\wedge\exists^{=y}x_{2}\psi_{2}'\right)
\]

\end_inset


\end_layout

\begin_layout Case
Falls 
\begin_inset Formula $\varphi=R\bar{x}$
\end_inset

 für 
\begin_inset Formula $R/k\in\sigma\cup\eta\cup\left\{ \leqslant\right\} $
\end_inset

 und ein 
\begin_inset Formula $k$
\end_inset

-Tupel von 
\begin_inset Formula $\left(\mathcal{L}+\Upsilon+\#\right)\left[\sigma\right]$
\end_inset

-Termen 
\begin_inset Formula $\bar{x}$
\end_inset

, so sei 
\begin_inset Formula $\bar{y}\in\left(\mathbf{var}\backslash\bigcup_{i=1}^{k}\mathrm{frei}\left(x_{i}\right)\right)^{k}$
\end_inset

 ein Tupel von neuen Variablen, und:
\begin_inset Formula 
\begin{eqnarray*}
\chi_{i} & \coloneqq & \begin{cases}
\exists^{=y_{i}}z_{i}\psi_{i}' & \mathrm{falls}\,x_{i}=\#z_{i}\psi_{i}\\
y_{i}=x_{i} & \mathrm{sonst}
\end{cases}\\
\varphi' & \coloneqq & \exists\bar{y}\left(R\bar{y}\wedge\bigwedge_{i=1}^{k}\chi_{i}\right)
\end{eqnarray*}

\end_inset


\end_layout

\end_deeper
\begin_layout Proof
Jede 
\begin_inset Formula $\left(\mathcal{L}+\Upsilon+\exists^{=}\right)\left[\sigma\right]$
\end_inset

-Formel 
\begin_inset Formula $\varphi$
\end_inset

 ist äquivalent zu einer 
\begin_inset Formula $\left(\mathcal{L}+\Upsilon+\exists^{\geqslant}\right)\left[\sigma\right]$
\end_inset

-Formel 
\begin_inset Formula $\varphi'$
\end_inset

:
\begin_inset Separator latexpar
\end_inset


\end_layout

\begin_deeper
\begin_layout Case
Falls 
\begin_inset Formula $\varphi=\exists^{=y}x\psi$
\end_inset

, so sei 
\begin_inset Formula $\psi'$
\end_inset

 eine zu 
\begin_inset Formula $\psi$
\end_inset

 äquivalente 
\begin_inset Formula $\left(\mathcal{L}+\Upsilon+\exists^{\geqslant}\right)\left[\sigma\right]$
\end_inset

-Formel, 
\begin_inset Formula $z\in\mathbf{var}\backslash\mathrm{frei}\left(\psi\right)$
\end_inset

 eine neue Variable, und: 
\begin_inset Formula 
\[
\varphi'\coloneqq\forall z\left(\exists^{\geqslant z}x\psi'\leftrightarrow\left(z\leqslant y\right)\right)
\]

\end_inset

Die Formel 
\begin_inset Formula $\exists^{=y}x\psi$
\end_inset

 ist mit 
\begin_inset Formula $\beta\left(y\right)\in\left[0,n\right]$
\end_inset

 erfüllt, genau dann wenn gilt: Die Formel 
\begin_inset Formula $\exists^{\geqslant z}x\psi$
\end_inset

 ist für alle 
\begin_inset Formula $\beta\left(z\right)\in\left[0,n\right]$
\end_inset

 erfüllt, genau dann wenn 
\begin_inset Formula $\beta\left(z\right)\leqslant\beta\left(y\right)$
\end_inset

.
\end_layout

\end_deeper
\begin_layout Proof
Schließlich ist jede 
\begin_inset Formula $\left(\mathcal{L}+\Upsilon+\exists^{\geqslant}\right)\left[\sigma\right]$
\end_inset

-Formel 
\begin_inset Formula $\varphi$
\end_inset

 äquivalent zu einer 
\begin_inset Formula $\left(\mathcal{L}+\Upsilon+\#\right)\left[\sigma\right]$
\end_inset

-Formel 
\begin_inset Formula $\varphi'$
\end_inset

:
\begin_inset Separator latexpar
\end_inset


\end_layout

\begin_deeper
\begin_layout Case
Falls 
\begin_inset Formula $\varphi=\exists^{\geqslant y}x\psi$
\end_inset

, so sei 
\begin_inset Formula $\psi'$
\end_inset

 eine 
\begin_inset Formula $\left(\mathcal{L}+\Upsilon+\exists^{\geqslant}\right)\left[\sigma\right]$
\end_inset

-Formel mit 
\begin_inset Formula $\psi\equiv\psi'$
\end_inset

, und:
\begin_inset Formula 
\[
\varphi'\coloneqq y\leqslant\#x\psi
\]

\end_inset


\end_layout

\end_deeper
\begin_layout Notation
Im folgenden wird mit 
\begin_inset Formula $\mathcal{L}+\Upsilon+C$
\end_inset

 stets eine dieser äquivalenten Zähl-Logiken bezeichnet.
 Die Logik 
\begin_inset Formula $\mathcal{L}+\mathbf{ORD}+C$
\end_inset

 bezeichnen wir kurz als 
\begin_inset Formula $\mathcal{L}+C$
\end_inset

.
\end_layout

\begin_layout Example
Die Logik 
\begin_inset Formula $\mathrm{FO}+C$
\end_inset

 kann ausdrücken, dass die 
\begin_inset Formula $\sigma$
\end_inset

-Struktur eine gerade Größe hat.
 Bekanntlich ist diese 
\begin_inset Formula $\sigma$
\end_inset

-Eigenschaft weder durch 
\begin_inset Formula $\mathrm{FO}$
\end_inset

 auf geordneten, noch 
\begin_inset Formula $\mathrm{LFP}$
\end_inset

 auf ungeordneten Strukturen definierbar
\begin_inset CommandInset citation
LatexCommand cite
key "EbbinghausFlum,Libkin2012"

\end_inset

:
\end_layout

\begin_layout Example
\begin_inset Formula 
\[
\varphi_{\mathrm{EVEN}}\coloneqq\exists y\,\left(y=\#_{z}\left(\neg z\leqslant y\wedge z\leqslant\#_{z}\,z=z\right)\right)
\]

\end_inset


\end_layout

\begin_layout Subsection
Nicht-disjunkte Orakel
\end_layout

\begin_layout Standard
Eine alternative Erweiterung definiert über einer Struktur 
\begin_inset Formula $\mathfrak{A}$
\end_inset

 eine beliebige Bijektion 
\begin_inset Formula $\pi:\left[1,n\right]\rightleftarrows A$
\end_inset

 und interpretiert dann die numerischen Prädikate 
\begin_inset Formula $R/k\in\eta$
\end_inset

 über dem Universum der Struktur selbst.
 Diese Erweiterung bezeichnen wir (in Anlehnung an die disjunkte Erweiterung
 
\begin_inset Formula $\mathcal{L}+\Upsilon$
\end_inset

, und die Konkatenation 
\begin_inset Formula $\mathfrak{A}\oplus\mathfrak{B}$
\end_inset

 von Strukturen mit dem gleichen Universum) mit 
\begin_inset Formula $\mathcal{L}\oplus\Upsilon$
\end_inset

.
\end_layout

\begin_layout Definition

\series bold
\begin_inset Formula $\mathcal{L}\oplus\Upsilon$
\end_inset

-Logik
\end_layout

\begin_layout Definition
Für eine relationale Signatur 
\begin_inset Formula $\eta$
\end_inset

, ein 
\begin_inset Formula $\eta$
\end_inset

-Orakel 
\begin_inset Formula $\Upsilon:\mathbb{N}\rightarrow\mathbf{FIN}_{<}^{1}\left(\eta\right)$
\end_inset

, eine von 
\begin_inset Formula $\eta$
\end_inset

 disjunkte relationale Signatur 
\begin_inset Formula $\sigma$
\end_inset

 und eine Logik 
\begin_inset Formula $\mathcal{L}\left[\sigma\right]$
\end_inset

 sei die Syntax von 
\begin_inset Formula $\mathcal{L}\oplus\Upsilon\left[\sigma\right]$
\end_inset

 gleich der Syntax von 
\begin_inset Formula $\mathcal{L}\left[\sigma\uplus\eta\uplus\left\{ \leqslant\right\} \right]$
\end_inset

.
\end_layout

\begin_layout Definition
Für 
\begin_inset Formula $\mathfrak{A}\in\mathbf{FIN}\left(\sigma\right)$
\end_inset

 mit 
\begin_inset Formula $n=\left|A\right|$
\end_inset

 sei 
\begin_inset Formula $\pi:\left[1,n\right]\rightleftarrows A$
\end_inset

 eine beliebige Bijektion.
 Sei 
\begin_inset Formula $\mathfrak{A}_{\pi}\in\mathbf{FIN}\left(\sigma\uplus\eta\right)$
\end_inset

 definiert durch:
\begin_inset Formula 
\begin{eqnarray*}
\mathfrak{A}_{\pi} & \coloneqq & \mathfrak{A}\oplus\pi\Upsilon\left(n\right)\\
 & = & \left(A,\left(R^{\mathfrak{A}}\right)_{R\in\sigma},\left(\pi R^{\Upsilon\left(n\right)}\right)\right)
\end{eqnarray*}

\end_inset


\end_layout

\begin_layout Definition
Eine 
\begin_inset Formula $k$
\end_inset

-stellige 
\begin_inset Formula $\mathcal{L}\oplus\Upsilon\left[\sigma\right]$
\end_inset

-Formel 
\begin_inset Formula $\varphi$
\end_inset

 heiße 
\series bold
invariant
\series default
, wenn für jede Struktur 
\begin_inset Formula $\mathfrak{A}\in\mathbf{FIN}\left(\sigma\right)$
\end_inset

, jedes Paar von Bijektionen 
\begin_inset Formula $\pi,\pi'\in\mathrm{Bij}\left(\left[1,\left|A\right|\right],A\right)$
\end_inset

 und jedes Tupel 
\begin_inset Formula $\bar{a}\in A^{k}$
\end_inset

 gilt:
\begin_inset Formula 
\begin{eqnarray*}
\mathfrak{A}_{\pi}\models\varphi\left[\bar{a}\right] & \Longleftrightarrow & \mathfrak{A}_{\pi'}\models\varphi\left[\bar{a}\right]
\end{eqnarray*}

\end_inset


\end_layout

\begin_layout Definition
Wir bezeichnen mit 
\begin_inset Formula $\mathrm{inv}\left(\mathcal{L}\oplus\Upsilon\right)\left[\sigma\right]$
\end_inset

 die Sprache der invarianten Formeln der 
\begin_inset Formula $\left(\mathcal{L}\oplus\Upsilon\right)\left[\sigma\right]$
\end_inset

-Logik.
\end_layout

\begin_layout Standard
\begin_inset Separator parbreak
\end_inset


\end_layout

\begin_layout Notation
Die Logik 
\begin_inset Formula $\mathrm{inv}\left(\mathrm{FO}\oplus\mathbf{ARB}\right)$
\end_inset

 mit dem Orakel 
\begin_inset Formula $\mathbf{ARB}\left(n\right)\coloneqq\left(\mathcal{N}_{\mathrm{arb}}\right)_{\left[1,n\right]}$
\end_inset

 (mit 
\begin_inset Formula $\mathcal{N}_{\mathrm{arb}}$
\end_inset

 und 
\begin_inset Formula $\eta_{\mathrm{arb}}$
\end_inset

 wie in Definition 
\begin_inset CommandInset ref
LatexCommand ref
reference "def:arb"

\end_inset

) bezeichnen wir auch als die 
\begin_inset Quotes gld
\end_inset

arb-invariante 
\begin_inset Formula $\mathrm{FO}\left(\mathbf{ARB}\right)$
\end_inset

-Logik
\begin_inset Quotes grd
\end_inset

 in Anlehnung an 
\begin_inset CommandInset citation
LatexCommand cite
key "Schweikardt13ashort,AMSS2012-locality"

\end_inset

.
\end_layout

\begin_layout Standard
Es ist zu beachten, dass die hier betrachteten Orakel-Strukturen das Universum
 
\begin_inset Formula $\left[1,n\right]$
\end_inset

 haben, und nicht 
\begin_inset Formula $\left[0,n\right]$
\end_inset

.
 Dies schließt unter anderem die Zählterm-Erweiterung 
\begin_inset Formula $\mathcal{L}\oplus\Upsilon+\#$
\end_inset

 aus, weil ein Zählterm nicht den Wert 
\begin_inset Formula $0$
\end_inset

 erhalten kann und seine Auswertung nicht vollständig definiert ist.
 Die Zählquantor-Erweiterungen 
\begin_inset Formula $\mathcal{L}\oplus\Upsilon+\exists^{=}$
\end_inset

 und 
\begin_inset Formula $\mathcal{L}\oplus\Upsilon+\exists^{\geqslant}$
\end_inset

 haben dieses Problem nicht.
\end_layout

\begin_layout Standard
Nach dem Satz von Trakhtenbrot ist die endlichen Erfüllbarkeit von 
\begin_inset Formula $\mathrm{FO}\left[\leqslant\right]$
\end_inset

 unentscheidbar, und daher auch die Invarianz und die Sprache 
\begin_inset Formula $\mbox{inv}\left(\mathrm{FO}\oplus\mathbf{ARB}\right)\left[\sigma\right]$
\end_inset

 in 
\begin_inset Formula $\mathrm{FO}\oplus\mathbf{ARB}\left[\sigma\right]$
\end_inset

.
\begin_inset CommandInset citation
LatexCommand cite
key "EbbinghausFlumThomas,Libkin2012,Schweikardt13ashort"

\end_inset

 
\end_layout

\begin_layout Chapter
Schaltkreise
\end_layout

\begin_layout Section
Grundlagen der Schaltkreise
\end_layout

\begin_layout Definition

\series bold
Boolesche Basis:
\series default
 
\end_layout

\begin_layout Definition
Eine boolesche Basis 
\begin_inset Formula $\mathbb{B}$
\end_inset

 besteht aus beliebigen über Permutation der Eingabe abgeschlossenen Relationen
 
\begin_inset Formula $\phi'\subseteq\left\{ 0,1\right\} ^{*}$
\end_inset

.
 Wir definieren dafür der Einfachheit halber die Relation 
\begin_inset Formula $\phi\subseteq\mathbb{N}^{2}$
\end_inset

 mit 
\begin_inset Formula $\phi\coloneqq\left\{ \left(i,j\right)\in\mathbb{N}^{2}\mid0^{i}1^{j}\in\phi'\right\} $
\end_inset

.
 Als Beispiel seien die folgenden booleschen Junktoren gegeben: 
\begin_inset Formula 
\begin{eqnarray*}
\mathtt{AND} & \coloneqq & \left\{ 0\right\} \times\mathbb{N}\\
\mathtt{OR} & \coloneqq & \mathbb{N}\times\left(\mathbb{N}\backslash\left\{ 0\right\} \right)\\
\mathtt{MAJ} & \coloneqq & \left\{ \left(m,n\right)\in\mathbb{N}\times\mathbb{N}\mid m\leqslant n\right\} \\
\mathtt{XOR} & \coloneqq & \mathbb{N}\times\left(\mathbb{N}\backslash2\mathbb{N}\right)\\
\mathtt{NOR} & \coloneqq & \mathbb{N}\times\left\{ 0\right\} \\
\mathtt{NAND} & \coloneqq & \left(\mathbb{N}\backslash\left\{ 0\right\} \right)\times\mathbb{N}
\end{eqnarray*}

\end_inset


\end_layout

\begin_layout Definition
Im folgenden stehe 
\begin_inset Formula $\mathbb{B}_{\mathrm{std}}\coloneqq\left\{ \mathtt{AND},\mathtt{OR}\right\} $
\end_inset

 für die Basis mit boolescher Konjunktion und Disjunktion, und 
\begin_inset Formula $\mathbb{B}_{\mathrm{maj}}\coloneqq\mathbb{B}_{\mathrm{std}}\cup\left\{ \mathtt{MAJ}\right\} $
\end_inset

 für die Basis mit Konjunktion, Disjunktion und Majority.
 Zu beachten ist, dass wir 
\begin_inset Formula $\mathtt{NOT}$
\end_inset

 nicht in die boolesche Basis aufnehmen, da es als unärer Operator ein Spezialfa
ll ist.)
\end_layout

\begin_layout Standard
\begin_inset Separator parbreak
\end_inset


\end_layout

\begin_layout Definition

\series bold
Schaltkreis
\end_layout

\begin_layout Definition
Sei 
\begin_inset Formula $\mathbb{B}$
\end_inset

 eine boolesche Basis und 
\begin_inset Formula $\sigma$
\end_inset

 eine relationale Signatur.
 Ein 
\begin_inset Formula $\left(\sigma,\mathbb{B}\right)$
\end_inset

-Schaltkreis 
\begin_inset Formula $\mathcal{C}\coloneqq\left(G,W,\Sigma,\Omega,U\right)$
\end_inset

 mit der Stelligkeit 
\begin_inset Formula $k\coloneqq\mathrm{ar}\left(C\right)$
\end_inset

 besteht aus den folgenden Komponenten: 
\begin_inset Separator latexpar
\end_inset


\end_layout

\begin_deeper
\begin_layout Enumerate
Ein azyklischer Graph mit den Knoten 
\begin_inset Formula $G$
\end_inset

 (
\begin_inset Quotes gld
\end_inset

Gates
\begin_inset Quotes grd
\end_inset

) und den Kanten 
\begin_inset Formula $W\subseteq G\times G$
\end_inset

.
\end_layout

\begin_layout Enumerate
eine Gate-Markierung 
\begin_inset Formula $\Sigma$
\end_inset

 
\begin_inset Formula 
\begin{eqnarray*}
\Sigma:G & \rightarrow & \mathbb{B}\\
 & \cup & \left\{ \mathbf{0},\mathbf{1},\mathtt{NOT}\right\} \\
 & \cup & \left\{ R\bar{t}\mid R\in\sigma,\bar{t}\in U^{\mathrm{ar}\left(R\right)}\right\} 
\end{eqnarray*}

\end_inset


\end_layout

\begin_layout Enumerate
eine Ausgabefunktion
\begin_inset Foot
status open

\begin_layout Plain Layout
In Anderson und Dawar 2014
\begin_inset CommandInset citation
LatexCommand cite
key "AD2014"

\end_inset

 wird zusätzlich die Injektivität von 
\begin_inset Formula $\Omega$
\end_inset

 verlangt; hier können aber mehrere Tupel dem gleichen Output-Gate zugeteilt
 werden.
\end_layout

\end_inset

 
\begin_inset Formula $\Omega:U^{k}\rightarrow G$
\end_inset

 (bei 
\begin_inset Formula $k=0$
\end_inset

 ist 
\begin_inset Formula $\Omega\left(\left\langle \right\rangle \right)\in G$
\end_inset

 ein einziges Output-Gate, und wird mit 
\begin_inset Formula $\Omega=\Omega\left(\left\langle \right\rangle \right)$
\end_inset

 abgekürzt) und 
\end_layout

\begin_layout Enumerate
ein Universum 
\begin_inset Formula $U$
\end_inset

 (üblicherweise 
\begin_inset Formula $U=\left[1,n\right]$
\end_inset

).
\end_layout

\end_deeper
\begin_layout Definition
Hierbei haben alle mit 
\begin_inset Formula $\phi\in\mathbb{B}$
\end_inset

 markierten Gates mindestens einen
\begin_inset Foot
status open

\begin_layout Plain Layout
Alle hier betrachteten Schaltkreise haben einen unbeschränkten Fan-In.
\end_layout

\end_inset

 Vorgänger, alle mit 
\begin_inset Formula $R\bar{x}$
\end_inset

, 
\begin_inset Formula $\mathbf{0}$
\end_inset

 oder 
\begin_inset Formula $\mathbf{1}$
\end_inset

 markierten Gates keinen
\series bold
 
\series default
Vorgänger, und alle mit 
\begin_inset Formula $\mathtt{NOT}$
\end_inset

 markierten Gates genau
\series bold
 
\series default
einen
\series bold
 
\series default
Vorgänger.
\end_layout

\begin_layout Definition
Die mit 
\begin_inset Formula $\mathbf{0}$
\end_inset

 oder 
\begin_inset Formula $\mathbf{1}$
\end_inset

 markierten Gates heißen 
\series bold
Konstanten
\series default
, die mit 
\begin_inset Formula $R\bar{x}$
\end_inset

 markierten Gates heißen 
\series bold
Inputs
\series default
, und die Gates im Bild von 
\begin_inset Formula $\Omega$
\end_inset

 heißen 
\series bold
Outputs
\series default
.
\end_layout

\begin_layout Standard
\begin_inset Separator parbreak
\end_inset


\end_layout

\begin_layout Definition
\begin_inset CommandInset label
LatexCommand label
name "def:formal"

\end_inset

Formal definieren wir den 
\begin_inset Formula $k$
\end_inset

-stelligen 
\begin_inset Formula $\left(\sigma,\mathbb{B}\right)$
\end_inset

-Schaltkreis 
\begin_inset Formula $\mathcal{C}=\left(G,W,\Sigma,\Omega,U\right)$
\end_inset

 als eine relationale 
\begin_inset Formula $\tau_{\sigma,\mathbb{B},k}$
\end_inset

-Struktur über dem Universum 
\begin_inset Formula $G\uplus U$
\end_inset

, wobei gilt:
\begin_inset Formula 
\begin{eqnarray*}
\tau_{\sigma,\mathbb{B},k} & \coloneqq & \left\{ W/2,\left(\Sigma_{s}/1\right)_{s\in\mathbb{B}\uplus\left\{ \mathbf{0},\mathbf{1},\mathtt{NOT}\right\} },\left(\Sigma_{R}/1+k\right)_{R/k\in\sigma},\Omega/k+1\right\} \\
W^{\mathcal{C}} & \coloneqq & W\\
\Sigma_{s}^{\mathcal{C}} & \coloneqq & \left\{ g\in G\mid\Sigma\left(g\right)=s\right\} \,\mathrm{für}\,s\in\mathbb{B}\uplus\left\{ \mathbf{0},\mathbf{1},\mathtt{NOT}\right\} \\
\Sigma_{R}^{\mathcal{C}} & \coloneqq & \left\{ g\bar{t}\mid\Sigma\left(g\right)=R\bar{t}\right\} \,\mathrm{für}\,R\in\sigma\\
\Omega^{\mathcal{C}} & \coloneqq & \left\{ \bar{t}g\mid\Omega\left(\bar{t}\right)=g\right\} 
\end{eqnarray*}

\end_inset


\end_layout

\begin_layout Standard
\begin_inset Separator parbreak
\end_inset


\end_layout

\begin_layout Definition

\series bold
\begin_inset CommandInset label
LatexCommand label
name "def:circuit-eval"

\end_inset

Auswertung von Schaltkreisen
\end_layout

\begin_layout Definition
Der 
\begin_inset Formula $\left(\sigma,\mathbb{B}\right)$
\end_inset

-Schaltkreis 
\begin_inset Formula $\mathcal{C}=\left(G,W,\Sigma,\Omega,U\right)$
\end_inset

 wird auf einer 
\begin_inset Formula $\sigma$
\end_inset

-Struktur 
\begin_inset Formula $\mathfrak{A}\in\mathbf{FIN}^{U}\left(\sigma\right)$
\end_inset

 ausgewertet.
 Die Auswertung ist eine Abbildung 
\begin_inset Formula $\mathcal{C}\left[\mathfrak{A}\right]:G\rightarrow\left\{ 0,1\right\} $
\end_inset

, die jedem Gate 
\begin_inset Formula $g\in G$
\end_inset

 den Wert 
\begin_inset Formula $0$
\end_inset

 oder 
\begin_inset Formula $1$
\end_inset

 zuweist, und ist rekursiv wie folgt definiert:
\begin_inset Separator latexpar
\end_inset


\end_layout

\begin_deeper
\begin_layout Case
Für 
\begin_inset Formula $\Sigma\left(g\right)=R\bar{t}$
\end_inset

 gilt 
\begin_inset Formula 
\[
\mathcal{C}\left[\mathfrak{A}\right]\left(g\right)\coloneqq\left[R^{\mathfrak{A}}\right]\bar{t}
\]

\end_inset


\end_layout

\begin_layout Case
Für 
\begin_inset Formula $\Sigma\left(g\right)\in\left\{ \mathbf{0},\mathbf{1}\right\} $
\end_inset

 gilt
\begin_inset Formula 
\[
\mathcal{C}\left[\mathfrak{A}\right]\left(g\right)\coloneqq\begin{cases}
1 & \mathrm{falls}\,\,\Sigma\left(v\right)=\mathbf{1}\\
0 & \mathrm{sonst}
\end{cases}
\]

\end_inset


\end_layout

\begin_layout Case
Für 
\begin_inset Formula $\Sigma\left(g\right)=\mathtt{NOT}$
\end_inset

 und 
\begin_inset Formula $\left(h,g\right)\in W$
\end_inset

 gilt 
\begin_inset Formula 
\[
\mathcal{C}\left[\mathfrak{A}\right]\left(g\right)\coloneqq1-\mathcal{C}\left[\mathfrak{A}\right]\left(h\right)
\]

\end_inset


\end_layout

\begin_layout Case
Für 
\begin_inset Formula $\Sigma\left(g\right)=\phi\in\mathbb{B}$
\end_inset

 gilt: 
\begin_inset Formula 
\begin{eqnarray*}
j_{1} & \coloneqq & \sum_{\left(h,g\right)\in W}\mathcal{C}\left[\mathfrak{A}\right]\left(h\right)\\
j_{0} & \coloneqq & \left|\left\{ h\mid\left(h,g\right)\in W\right\} \right|-j_{1}\\
\\
\mathcal{C}\left[\mathfrak{A}\right]\left(g\right) & \coloneqq & \left[\phi\right]\left(j_{0},j_{1}\right)
\end{eqnarray*}

\end_inset


\end_layout

\end_deeper
\begin_layout Definition
Für einen 
\begin_inset Formula $k$
\end_inset

-stelligen Schaltkreis 
\begin_inset Formula $\mathcal{C}$
\end_inset

 und ein Tupel 
\begin_inset Formula $\bar{t}\in U^{k}$
\end_inset

 sei die Ausgabe von 
\begin_inset Formula $\mathcal{C}$
\end_inset

 der Wert des Outputs 
\begin_inset Formula $\Omega\left(\bar{t}\right)$
\end_inset

:
\begin_inset Formula 
\[
\left\llbracket \mathcal{C}\right\rrbracket \left(\mathfrak{A},\bar{t}\right)\coloneqq\mathcal{C}\left[\mathfrak{A}\right]\left(\Omega\left(\bar{t}\right)\right)
\]

\end_inset

 
\end_layout

\begin_layout Standard
Ferner sei 
\begin_inset Formula $q_{\mathcal{C}}:\mathbf{FIN}^{U}\left(\sigma\right)\rightarrow U^{k}$
\end_inset

 die Abbildung einer Struktur auf die Relation der Tupel, für die 
\begin_inset Formula $\mathcal{C}$
\end_inset

 den Wert 
\begin_inset Formula $1$
\end_inset

 ausgibt.
 
\begin_inset Formula 
\[
q_{\mathcal{C}}\left(\mathfrak{A}\right)\coloneqq\left\{ \bar{t}\in U^{k}\mid\left\llbracket \mathcal{C}\right\rrbracket \left(\mathfrak{A},\bar{t}\right)=1\right\} 
\]

\end_inset


\end_layout

\begin_layout Example*
Sei 
\begin_inset Formula $\mathcal{C}_{4}=\left(G,W,\Sigma,\Omega,\left[4\right]\right)$
\end_inset

 (siehe Abbildung 
\begin_inset CommandInset ref
LatexCommand ref
reference "fig:circuit"

\end_inset

) ein 
\begin_inset Formula $1$
\end_inset

-stelliger 
\begin_inset Formula $\left(\left\{ E\right\} ,\mathbb{B}_{\mathrm{std}}\right)$
\end_inset

-Schaltkreis, der alle Knoten eines gerichteten Graphen findet, die Teil
 eines einfachen Kreises der Länge 
\begin_inset Formula $2$
\end_inset

 sind.
\end_layout

\begin_layout Example*
\begin_inset Formula 
\begin{eqnarray*}
G & \coloneqq & \left\{ g_{i,j}\mid i,j\in\left[4\right],\,i\neq j\right\} \\
 & \cup & \left\{ g_{\left\{ i,j\right\} }\mid\left\{ i,j\right\} \subseteq\left[4\right],\,i\neq j\right\} \\
 & \cup & \left\{ g_{i}\mid i\in\left[4\right]\right\} 
\end{eqnarray*}

\end_inset


\begin_inset Formula 
\begin{eqnarray*}
E & \coloneqq & \left\{ \left(g_{i,j},g_{\left\{ i,j\right\} }\right)\mid i,j\in\left[4\right],\,i\neq j\right\} \\
 & \cup & \left\{ \left(g_{\left\{ i,j\right\} },g_{i}\right)\mid i,j\in\left[4\right],\,i\neq j\right\} 
\end{eqnarray*}

\end_inset


\begin_inset Formula 
\[
\Sigma\left(g\right)=\begin{cases}
E\,i\,j & \mathrm{für}\,\,g=g_{i,j}\\
\mathtt{AND} & \mathrm{für}\,\,g=g_{\left\{ i,j\right\} }\\
\mathtt{OR} & \mathrm{für}\,\,g=g_{i}
\end{cases}
\]

\end_inset


\begin_inset Formula 
\[
\Omega\left(i\right)\coloneqq g_{i}
\]

\end_inset


\end_layout

\begin_layout Example*
\begin_inset Float figure
wide false
sideways false
status open

\begin_layout Plain Layout
\align center
\begin_inset Preview

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
tikzstyle{every node}=[circle, draw=black,node distance=3em]
\end_layout

\begin_layout Plain Layout


\backslash
begin{tikzpicture}
\end_layout

\begin_layout Plain Layout

\end_layout

\begin_layout Plain Layout


\backslash
node (E12) {$E 1 2$};
\end_layout

\begin_layout Plain Layout


\backslash
node [right of=E12] (E21) {$E 2 1$};
\end_layout

\begin_layout Plain Layout


\backslash
node [right of=E21] (E13) {$E 1 3$};
\end_layout

\begin_layout Plain Layout


\backslash
node [right of=E13] (E31) {$E 3 1$};
\end_layout

\begin_layout Plain Layout


\backslash
node [right of=E31] (E14) {$E 1 4$};
\end_layout

\begin_layout Plain Layout


\backslash
node [right of=E14] (E41) {$E 4 1$};
\end_layout

\begin_layout Plain Layout


\backslash
node [right of=E41] (E23) {$E 2 3$};
\end_layout

\begin_layout Plain Layout


\backslash
node [right of=E23] (E32) {$E 3 2$};
\end_layout

\begin_layout Plain Layout


\backslash
node [right of=E32] (E24) {$E 2 4$};
\end_layout

\begin_layout Plain Layout


\backslash
node [right of=E24] (E42) {$E 4 2$};
\end_layout

\begin_layout Plain Layout


\backslash
node [right of=E42] (E34) {$E 3 4$};
\end_layout

\begin_layout Plain Layout


\backslash
node [right of=E34] (E43) {$E 4 3$};
\end_layout

\begin_layout Plain Layout

\end_layout

\begin_layout Plain Layout


\backslash
node [below of=E41,node distance=7em] (14) {$
\backslash
wedge$};
\end_layout

\begin_layout Plain Layout


\backslash
node [left of=14,node distance=4em] (13) {$
\backslash
wedge$};
\end_layout

\begin_layout Plain Layout


\backslash
node [left of=13,node distance=4em] (12) {$
\backslash
wedge$};
\end_layout

\begin_layout Plain Layout


\backslash
node [right of=14,node distance=4em] (23) {$
\backslash
wedge$};
\end_layout

\begin_layout Plain Layout


\backslash
node [right of=23,node distance=4em] (24) {$
\backslash
wedge$};
\end_layout

\begin_layout Plain Layout


\backslash
node [right of=24,node distance=4em] (34) {$
\backslash
wedge$};
\end_layout

\begin_layout Plain Layout

\end_layout

\begin_layout Plain Layout


\backslash
node [below of=14,node distance=5em,label=below:$
\backslash
Omega
\backslash
left(2
\backslash
right)$] (2) {$
\backslash
vee$};
\end_layout

\begin_layout Plain Layout


\backslash
node [left of=2,label=below:$
\backslash
Omega
\backslash
left(1
\backslash
right)$] (1) {$
\backslash
vee$};
\end_layout

\begin_layout Plain Layout


\backslash
node [right of=2,label=below:$
\backslash
Omega
\backslash
left(3
\backslash
right)$] (3) {$
\backslash
vee$};
\end_layout

\begin_layout Plain Layout


\backslash
node [right of=3,label=below:$
\backslash
Omega
\backslash
left(4
\backslash
right)$] (4) {$
\backslash
vee$};
\end_layout

\begin_layout Plain Layout

\end_layout

\begin_layout Plain Layout


\backslash
path [->]
\end_layout

\begin_layout Plain Layout

		(E12) edge (12) (E21) edge (12)
\end_layout

\begin_layout Plain Layout

		(E13) edge (13) (E31) edge (13)
\end_layout

\begin_layout Plain Layout

		(E14) edge (14) (E41) edge (14)
\end_layout

\begin_layout Plain Layout

		(E23) edge (23) (E32) edge (23)
\end_layout

\begin_layout Plain Layout

		(E24) edge (24) (E42) edge (24)
\end_layout

\begin_layout Plain Layout

		(E34) edge (34) (E43) edge (34)
\end_layout

\begin_layout Plain Layout

\end_layout

\begin_layout Plain Layout

		(12) edge (1) (12) edge (2)
\end_layout

\begin_layout Plain Layout

		(13) edge (1) (13) edge (3)
\end_layout

\begin_layout Plain Layout

		(14) edge (1) (14) edge (4)
\end_layout

\begin_layout Plain Layout

		(23) edge (2) (23) edge (3)
\end_layout

\begin_layout Plain Layout

		(24) edge (2) (24) edge (4)
\end_layout

\begin_layout Plain Layout

		(34) edge (3) (34) edge (4)
\end_layout

\begin_layout Plain Layout

\end_layout

\begin_layout Plain Layout

;
\end_layout

\begin_layout Plain Layout

\end_layout

\begin_layout Plain Layout


\backslash
end{tikzpicture}
\end_layout

\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Plain Layout
\begin_inset Caption Standard

\begin_layout Plain Layout
\begin_inset CommandInset label
LatexCommand label
name "fig:circuit"

\end_inset

Schaltkreis 
\begin_inset Formula $\mathcal{C}_{4}$
\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Plain Layout

\end_layout

\end_inset


\end_layout

\begin_layout Section
Eigenschaften von Schaltkreisen
\end_layout

\begin_layout Definition

\series bold
Größe und Tiefe
\end_layout

\begin_layout Definition
Die Größe 
\begin_inset Formula $\left|\mathcal{C}\right|$
\end_inset

 eines Schaltkreises 
\begin_inset Formula $\mathcal{C}=\left(G,W,\Sigma,\Omega,U\right)$
\end_inset

 sei die Anzahl seiner Gates, 
\begin_inset Formula $\left|G\right|$
\end_inset

.
 Die Tiefe 
\begin_inset Formula $T\left(\mathcal{C}\right)$
\end_inset

 sei die maximale Länge eines Wegs durch den Graphen 
\begin_inset Formula $\left(G,W\right)$
\end_inset

.
\end_layout

\begin_layout Standard
\begin_inset Separator parbreak
\end_inset


\end_layout

\begin_layout Definition

\series bold
Invarianz
\end_layout

\begin_layout Definition
Ein 
\begin_inset Formula $\left(\sigma,\mathbb{B}\right)$
\end_inset

-Schaltkreis 
\begin_inset Formula $\mathcal{C}$
\end_inset

 mit dem Universum 
\begin_inset Formula $U$
\end_inset

 heiße 
\series bold
invariant
\series default
, wenn für alle 
\begin_inset Formula $\mathfrak{A}\in\mathbf{FIN}^{U}\left(\sigma\right)$
\end_inset

, alle 
\begin_inset Formula $\bar{t}\in U^{\mathrm{ar}\left(\mathcal{C}\right)}$
\end_inset

, und jede Permutation 
\begin_inset Formula $\pi\in\mathrm{Sym}_{U}$
\end_inset

 gilt:
\begin_inset Formula 
\[
\left\llbracket \mathcal{C}\right\rrbracket \left(\pi\mathfrak{A},\pi\bar{t}\right)=\left\llbracket \mathcal{C}\right\rrbracket \left(\mathfrak{A},\bar{t}\right)
\]

\end_inset


\end_layout

\begin_layout Definition
In diesem Fall definieren wir für jede Struktur 
\begin_inset Formula $\mathfrak{A}\in\mathbf{FIN}^{\left(\left|U\right|\right)}\left(\sigma\right)$
\end_inset

 und 
\begin_inset Formula $\bar{a}\in A^{\mathrm{ar}\left(\mathcal{C}\right)}$
\end_inset

 die Auswertung von 
\begin_inset Formula $\mathcal{C}$
\end_inset

 implizit als die Auswertung auf 
\begin_inset Formula $\pi\mathfrak{A}\in\mathbf{FIN}^{U}\left(\sigma\right)$
\end_inset

 mit einer beliebigen Bijektion 
\begin_inset Formula $\pi:A\rightleftarrows U$
\end_inset

:
\begin_inset Formula 
\[
\left\llbracket \mathcal{C}\right\rrbracket \left(\mathfrak{A},\bar{a}\right)\coloneqq\left\llbracket \mathcal{C}\right\rrbracket \left(\pi\mathfrak{A},\pi\bar{a}\right)
\]

\end_inset


\end_layout

\begin_layout Standard
\begin_inset Separator parbreak
\end_inset


\end_layout

\begin_layout Definition

\series bold
Symmetrie
\end_layout

\begin_layout Definition
Für einen Schaltkreis 
\begin_inset Formula $\mathcal{C}=\left(G,W,\Sigma,\Omega,U\right)$
\end_inset

, eine Permutation 
\begin_inset Formula $\pi\in\mathrm{Sym}_{U}$
\end_inset

 und einen Automorphismus 
\begin_inset Formula $\rho\in\mathrm{Aut}_{\mathcal{C}}$
\end_inset

 mit 
\begin_inset Formula $\rho_{\mid U}=\pi$
\end_inset

 nennen wir 
\begin_inset Formula $\rho$
\end_inset

 von 
\begin_inset Formula $\pi$
\end_inset

 
\series bold
induziert
\series default
.
 (Nach den formalen Definitionen 
\begin_inset CommandInset ref
LatexCommand ref
reference "def:formal"

\end_inset

 und 
\begin_inset CommandInset ref
LatexCommand ref
reference "def:isomorphism"

\end_inset

 ist 
\begin_inset Formula $\rho\in\mathrm{Aut}_{\mathcal{C}}\subseteq\mathrm{Sym}_{G\uplus U}$
\end_inset

 eine Permutation des Universums von 
\begin_inset Formula $\mathcal{C}$
\end_inset

.) Wir können aus der formalen Definition des Schaltkreises als 
\begin_inset Formula $\tau_{\sigma,\mathbb{B},k}$
\end_inset

-Struktur ableiten, dass ein von 
\begin_inset Formula $\pi$
\end_inset

 induzierter Automorphismus 
\begin_inset Formula $\rho$
\end_inset

 die folgenden Bedingungen erfüllt:
\begin_inset Separator latexpar
\end_inset


\end_layout

\begin_deeper
\begin_layout Enumerate
Die Kanten sind isomorph: 
\begin_inset Formula $\rho W=W$
\end_inset

.
\end_layout

\begin_layout Enumerate
Für alle Inputs 
\begin_inset Formula $g$
\end_inset

 mit 
\begin_inset Formula $\Sigma\left(g\right)=R\bar{x}$
\end_inset

 gilt 
\begin_inset Formula $\Sigma\left(\rho g\right)=R\,\bar{x'}$
\end_inset

, mit 
\begin_inset Formula $\bar{x'}=\pi\bar{x}$
\end_inset

.
\end_layout

\begin_layout Enumerate
Für alle übrigen Gates gilt 
\begin_inset Formula $\Sigma\left(\rho g\right)=\Sigma\left(g\right)$
\end_inset

.
\end_layout

\begin_layout Enumerate
Für jedes Tupel 
\begin_inset Formula $\bar{t}\in U^{k}$
\end_inset

 gilt 
\begin_inset Formula $\rho\Omega\left(\bar{x}\right)=\Omega\left(\pi\bar{t}\right)$
\end_inset

.
\end_layout

\end_deeper
\begin_layout Definition
Ein Schaltkreis heiße 
\series bold
symmetrisch
\series default
, genau dann wenn jede Permutation des Universums 
\begin_inset Formula $\pi\in\mathrm{Sym}_{U}$
\end_inset

 einen Automorphismus 
\begin_inset Formula $\hat{\pi}\in\mathrm{Aut}_{\mathcal{C}}$
\end_inset

 des Schaltkreises induziert.
 (In Zukunft betrachten wir der Einfachheit halber nur den Teil 
\begin_inset Formula $\hat{\pi}_{\mid G}$
\end_inset

, der die Gates des Schaltkreises permutiert, da der Rest des Automorphismus
 
\begin_inset Formula $\hat{\pi}=\hat{\pi}_{\mid G}\uplus\pi$
\end_inset

 lediglich die Permutation 
\begin_inset Formula $\pi$
\end_inset

 ist.)
\end_layout

\begin_layout Proposition
Symmetrie ist eine hinreichende, aber nicht notwendige, Bedingung für die
 Invarianz eines Schaltkreises.
\end_layout

\begin_layout Proof
Sei 
\begin_inset Formula $\mathcal{C}$
\end_inset

 ein symmetrischer 
\begin_inset Formula $k$
\end_inset

-stelliger 
\begin_inset Formula $\left(\sigma,\mathbb{B}\right)$
\end_inset

-Schaltkreis über 
\begin_inset Formula $U$
\end_inset

, und 
\begin_inset Formula $\mathfrak{A}\in\mathbf{FIN}^{U}\left(\sigma\right)$
\end_inset

.
 Sei 
\begin_inset Formula $\pi\in\mathrm{Sym}_{U}$
\end_inset

 eine beliebige Permutation, und sei 
\begin_inset Formula $\bar{t}\in U^{k}$
\end_inset

 ein beliebiges Tupel.
 Es ist zu zeigen, dass: 
\begin_inset Formula 
\begin{eqnarray*}
\left\llbracket \mathcal{C}\right\rrbracket \left(\mathfrak{A},\bar{t}\right) & = & \left\llbracket \mathcal{C}\right\rrbracket \left(\pi\mathfrak{A},\pi\bar{t}\right)
\end{eqnarray*}

\end_inset


\end_layout

\begin_layout Proof
Wegen der Symmetrie induziert 
\begin_inset Formula $\pi$
\end_inset

 einen Automorphismus 
\begin_inset Formula $\hat{\pi}$
\end_inset

 auf 
\begin_inset Formula $\mathcal{C}$
\end_inset

: 
\begin_inset Formula 
\begin{eqnarray*}
\hat{\pi}\left(W\right) & = & W\\
\Sigma\left(\hat{\pi}g\right) & = & \begin{cases}
R\pi\bar{x} & \mathrm{für}\,\,\Sigma\left(g\right)=R\bar{x}\\
\Sigma\left(g\right) & \mathrm{sonst}
\end{cases}\\
\Omega\left(\pi\bar{x}\right) & = & \hat{\pi}\Omega\left(\bar{x}\right)\,\mathrm{für\,alle}\,\bar{x}\in U^{\mathrm{ar}\left(\mathcal{C}\right)}
\end{eqnarray*}

\end_inset


\end_layout

\begin_layout Proof
Per Induktion über die Tiefe
\begin_inset Foot
status open

\begin_layout Plain Layout
Die Tiefe 
\begin_inset Formula $T:G\rightarrow\mathbb{N}$
\end_inset

 sei die maximale Länge eines Weges von einer Quelle zum Gate 
\begin_inset Formula $g$
\end_inset

.
\end_layout

\end_inset

 
\begin_inset Formula $T\left(g\right)$
\end_inset

 des Gates 
\begin_inset Formula $g$
\end_inset

 wird gezeigt: 
\begin_inset Formula 
\begin{eqnarray*}
\mathcal{C}\left[\mathfrak{A}\right]\left(g\right)=\mathcal{C}\left[\pi\mathfrak{A}\right]\left(\hat{\pi}g\right) &  & \mathrm{für\,alle}\,g\in G
\end{eqnarray*}

\end_inset


\begin_inset Separator latexpar
\end_inset


\end_layout

\begin_deeper
\begin_layout Description
Induktionsanfang
\begin_inset space ~
\end_inset


\begin_inset Formula $T\left(g\right)=0$
\end_inset

: Sei 
\begin_inset Formula $g\in G$
\end_inset

 ein Input mit 
\begin_inset Formula $\Sigma\left(g\right)=R\bar{x}$
\end_inset

.
 Per Definition von 
\begin_inset Formula $\tau$
\end_inset

 und 
\begin_inset Formula $\hat{\tau}$
\end_inset

 gilt:
\begin_inset Formula 
\begin{eqnarray*}
\Sigma\left(\hat{\pi}g\right) & = & R\pi\bar{x}\\
\pi\bar{x}\in\pi R^{\mathfrak{A}} & \Longleftrightarrow & \bar{x}\in\pi_{2}R^{\mathfrak{A}}
\end{eqnarray*}

\end_inset

 Es folgt: 
\begin_inset Formula 
\begin{eqnarray*}
\mathcal{C}\left[\pi\mathfrak{A}\right]\left(\hat{\pi}g\right) & = & \left[\pi R^{\mathfrak{A}}\right]\left(\pi\bar{x}\right)\\
 & = & \left[R^{\mathfrak{A}}\right]\left(\bar{x}\right)\\
 & = & \mathcal{C}\left[\mathfrak{A}\right]\left(g\right)
\end{eqnarray*}

\end_inset

(Falls 
\begin_inset Formula $\Sigma\left(g\right)\in\left\{ \mathbf{0},\mathbf{1}\right\} $
\end_inset

, folgt die Behauptung direkt aus 
\begin_inset Formula $\Sigma\left(\hat{\pi}g\right)=\Sigma\left(g\right)$
\end_inset

.)
\end_layout

\begin_layout Description
Induktionsschritt
\begin_inset space ~
\end_inset


\begin_inset Formula $n\mapsto n+1$
\end_inset

: 
\begin_inset Separator latexpar
\end_inset


\end_layout

\begin_deeper
\begin_layout Description
Annahme: Für alle Gates 
\begin_inset Formula $g\in G$
\end_inset

 mit Tiefe 
\begin_inset Formula $T\left(g\right)\leqslant n$
\end_inset

 gilt 
\begin_inset Formula $\mathcal{C}\left[\pi\mathfrak{A}\right]\left(\hat{\pi}g\right)=\mathcal{C}\left[\mathfrak{A}\right]\left(g\right)$
\end_inset

.
\end_layout

\begin_layout Standard
So gilt für jedes Gatter 
\begin_inset Formula $g'\in G$
\end_inset

 mit 
\begin_inset Formula $T\left(g'\right)=n+1$
\end_inset

: 
\end_layout

\begin_layout Enumerate
Die Beschriftungen 
\begin_inset Formula $\Sigma\left(\hat{\pi}g'\right)=\Sigma\left(g'\right)=\phi$
\end_inset

 sind gleich.
\end_layout

\begin_layout Enumerate
\begin_inset Formula $\mathcal{C}\left[\pi\mathfrak{A}\right]\left(\hat{\pi}g\right)=\mathcal{C}\left[\mathfrak{A}\right]\left(g\right)$
\end_inset

 für alle 
\begin_inset Formula $\left(g,g'\right)\in W$
\end_inset

.
\end_layout

\begin_layout Standard
Es folgt 
\begin_inset Formula $\mathcal{C}\left[\pi\mathfrak{A}\right]\left(\hat{\pi}g'\right)=\mathcal{C}\left[\mathfrak{A}\right]\left(g'\right)$
\end_inset

.
\end_layout

\end_deeper
\end_deeper
\begin_layout Proof
Schließlich gilt für jedes Tupel 
\begin_inset Formula $\bar{t}\in U^{\mathrm{ar}\left(\mathcal{C}\right)}$
\end_inset

:
\end_layout

\begin_layout Proof
\begin_inset Formula 
\begin{eqnarray*}
\left\llbracket \mathcal{C}\right\rrbracket \left(\pi\mathfrak{A},\pi\bar{t}\right) & = & \mathcal{C}\left[\pi\mathfrak{A}\right]\left(\Omega\left(\pi\bar{t}\right)\right)\\
 & = & \mathcal{C}\left[\pi\mathfrak{A}\right]\left(\hat{\pi}\Omega\left(\bar{t}\right)\right)\\
 & = & \mathcal{C}\left[\mathfrak{A}\right]\left(\Omega\left(\bar{t}\right)\right)=\left\llbracket \mathcal{C}\right\rrbracket \left(\mathfrak{A},\bar{t}\right)
\end{eqnarray*}

\end_inset


\end_layout

\begin_layout Proof
Damit ist der Schaltkreis invariant.
\end_layout

\begin_layout Proof
Um die Umkehrrichtung zu widerlegen, wird als Gegenbeispiel der folgende
 
\begin_inset Formula $0$
\end_inset

-stellige Schaltkreis 
\begin_inset Formula $\mathcal{C}_{2}$
\end_inset

 (siehe Abbildung 
\begin_inset CommandInset ref
LatexCommand ref
reference "fig:symm"

\end_inset

) über 
\begin_inset Formula $U=\left\{ 1,2\right\} $
\end_inset

 angeführt:
\begin_inset Formula 
\begin{eqnarray*}
\mathcal{C} & \coloneqq & \left(G,W,\Sigma,\Omega,U\right)\\
G & \coloneqq & \left\{ g_{i,j}\mid i,j\in U\right\} \cup\left\{ g_{\wedge},g_{\wedge}'\right\} \\
W & \coloneqq & \left\{ \left(g_{1,1},g_{\wedge}\right),\left(g_{1,2},g_{\wedge}\right),\left(g_{2,1},g_{\wedge}'\right),\left(g_{2,2},g_{\wedge}'\right),\left(g_{\wedge},g_{\wedge}'\right)\right\} \\
\Sigma\left(g\right) & \coloneqq & \mathtt{AND}\\
\Omega & \coloneqq & g_{\wedge}'
\end{eqnarray*}

\end_inset


\end_layout

\begin_layout Proof
\begin_inset Float figure
wide false
sideways false
status open

\begin_layout Plain Layout
\align center
\begin_inset Preview

\begin_layout Standard
\align center
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
tikzstyle{every node}=[circle, draw=black]
\end_layout

\begin_layout Plain Layout


\backslash
begin{tikzpicture}
\end_layout

\begin_layout Plain Layout

\end_layout

\begin_layout Plain Layout


\backslash
node [label=below:$
\backslash
Omega$] (C) {$
\backslash
wedge$};
\end_layout

\begin_layout Plain Layout

\end_layout

\begin_layout Plain Layout


\backslash
node [above left of=C,node distance=6em] (B1) {$
\backslash
wedge$};
\end_layout

\begin_layout Plain Layout

\end_layout

\begin_layout Plain Layout

\end_layout

\begin_layout Plain Layout


\backslash
node [above left of=B1,node distance=6em] (A1) {$E12$};
\end_layout

\begin_layout Plain Layout


\backslash
node [right of=A1,node distance=5.5em] (A2) {$E11$};
\end_layout

\begin_layout Plain Layout


\backslash
node [right of=B1,node distance=5.5em] (A3) {$E22$};
\end_layout

\begin_layout Plain Layout


\backslash
node [right of=A3,node distance=5.5em] (A4) {$E21$};
\end_layout

\begin_layout Plain Layout

\end_layout

\begin_layout Plain Layout


\backslash
path [->] (A1) edge (B1) (A2) edge (B1) (A3) edge (C) (A4) edge (C)
\end_layout

\begin_layout Plain Layout

			(B1) edge (C);
\end_layout

\begin_layout Plain Layout


\backslash
end{tikzpicture}
\end_layout

\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Plain Layout
\begin_inset Caption Standard

\begin_layout Plain Layout
\begin_inset CommandInset label
LatexCommand label
name "fig:symm"

\end_inset

Schaltkreis 
\begin_inset Formula $\mathcal{C}_{2}$
\end_inset


\end_layout

\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Standard
Der Schaltkreis ist invariant, und akzeptiert alle vollständigen 
\begin_inset Formula $K_{2}$
\end_inset

-Graphen.
 Er ist aber nicht symmetrisch: Die Permutation 
\begin_inset Formula $\left(\begin{array}{cc}
1 & 2\\
2 & 1
\end{array}\right)$
\end_inset

 induziert keinen Automorphismus.
\end_layout

\begin_layout Standard
\begin_inset Separator parbreak
\end_inset


\end_layout

\begin_layout Definition

\series bold
\begin_inset CommandInset label
LatexCommand label
name "def:rigid"

\end_inset

Rigidität
\end_layout

\begin_layout Definition
Ein Schaltkreis 
\begin_inset Formula $\mathcal{C}=\left(G,W,\Sigma,\Omega,U\right)$
\end_inset

 sei rigide, wenn er keine redundanten Gates besitzt.
 Formal dürfen nicht 
\begin_inset Formula $g,g'\in G$
\end_inset

 existieren, so dass:
\begin_inset Formula 
\begin{eqnarray*}
\Sigma\left(g\right) & = & \Sigma\left(g'\right)\\
\left\{ u\in G\mid\left(u,g\right)\in W\right\}  & = & \left\{ u\in G\mid\left(u,g'\right)\in W\right\} 
\end{eqnarray*}

\end_inset


\end_layout

\begin_layout Definition
Insbesondere heißt dies, das der Schaltkreis höchstens zwei Konstanten 
\begin_inset Formula $g_{0},g_{1}$
\end_inset

 mit 
\begin_inset Formula $\Sigma\left(g_{0}\right)=\mathbf{0}$
\end_inset

 und 
\begin_inset Formula $\Sigma\left(g_{1}\right)=\mathbf{1}$
\end_inset

 enthält, und jede Input-Beschriftung 
\begin_inset Formula $\Sigma\left(g\right)=R\bar{x}$
\end_inset

 nur einmal vorkommt.
\end_layout

\begin_layout Standard
Die Rigidität ist hier analog zu der Arbeit von Anderson und Dawar
\begin_inset CommandInset citation
LatexCommand cite
key "AD2014"

\end_inset

 definiert, verlangt aber zusätzlich, dass zwei Gates nicht nur durch die
 (hier nicht injektive) Output-Markierung 
\begin_inset Formula $\Omega$
\end_inset

 unterschieden werden.
 Diese Einschränkung ist strenger, schränkt aber die Definition nicht bedeutend
 ein:
\end_layout

\begin_layout Standard
Für zwei Gates 
\begin_inset Formula $g,g'\in G$
\end_inset

 mit den gleichen Vorgängern, der gleichen Markierung 
\begin_inset Formula $\Sigma\left(g\right)=\Sigma\left(g'\right)$
\end_inset

 und 
\begin_inset Formula $\Omega^{-1}\left(g\right)\neq\Omega^{-1}\left(g'\right)$
\end_inset

 erlaubt die nicht-injektive Definition von 
\begin_inset Formula $\Omega$
\end_inset

, dass 
\begin_inset Formula $g'$
\end_inset

 entfernt wird und für alle 
\begin_inset Formula $\bar{t}\in\Omega^{-1}\left(g'\right)$
\end_inset

 stattdessen 
\begin_inset Formula $\Omega\left(\bar{t}\right)\coloneqq g$
\end_inset

 gesetzt wird.
\end_layout

\begin_layout Section
Eigenschaften von Schaltkreisfamilien
\end_layout

\begin_layout Definition
Eine 
\begin_inset Formula $\left(\sigma,\mathbb{B}\right)$
\end_inset

-
\series bold
Schaltkreisfamilie
\series default
 
\begin_inset Formula $\bar{\mathcal{C}}=\left(\mathcal{C}_{n}\right)_{n\in\mathbb{N}}$
\end_inset

 sei eine Sequenz von invarianten Schaltkreisen 
\begin_inset Formula $\mathcal{C}_{n}=\left(G_{n},W_{n},\Sigma_{n},\Omega_{n},U_{n}\right)$
\end_inset

 mit der gleichen Stelligkeit 
\begin_inset Formula $\mathrm{ar}\left(\mathcal{C}_{n}\right)=k$
\end_inset

 und den Universen 
\begin_inset Formula $U_{n}=\left[1,n\right]$
\end_inset

.
\end_layout

\begin_layout Definition
Die von der Schaltkreisfamilie berechnete 
\begin_inset Formula $\sigma$
\end_inset

-Anfrage 
\begin_inset Formula $q_{\bar{\mathcal{C}}}$
\end_inset

 sei wie folgt: 
\begin_inset Formula 
\[
q_{\bar{\mathcal{C}}}\left(\mathfrak{A}\right)\coloneqq q_{\mathcal{C}_{\left|A\right|}}\left(\mathfrak{A}\right)
\]

\end_inset


\end_layout

\begin_layout Standard
\begin_inset Separator parbreak
\end_inset


\end_layout

\begin_layout Definition
Für eine Komplexitätsklasse 
\begin_inset Formula $\mathcal{K}$
\end_inset

 sei eine Schaltkreisfamilie 
\begin_inset Formula $\bar{\mathcal{C}}$
\end_inset

 
\begin_inset Formula $\mathcal{K}$
\end_inset

-uniform, wenn die Berechnung einer Repräsentation von 
\begin_inset Formula $\mathcal{C}_{n}$
\end_inset

 bei Eingabe des Worts 
\begin_inset Formula $\overset{n}{\overbrace{1\cdots1}}$
\end_inset

 in 
\begin_inset Formula $\mathcal{K}$
\end_inset

 ist.
\end_layout

\begin_layout Standard
\begin_inset Separator parbreak
\end_inset


\end_layout

\begin_layout Definition

\series bold
Beschränkte Größe
\end_layout

\begin_layout Definition
Für eine Funktion 
\begin_inset Formula $f:\mathbb{N}\rightarrow\mathbb{N}$
\end_inset

 habe eine Schaltkreisfamilie 
\begin_inset Formula $\bar{\mathcal{C}}$
\end_inset

 
\begin_inset Formula $f$
\end_inset

-
\series bold
Größe
\series default
, wenn für ein 
\begin_inset Formula $n_{0}\in\mathbb{N}$
\end_inset

 und alle 
\begin_inset Formula $n\geqslant n_{0}$
\end_inset

 gilt, dass 
\begin_inset Formula $\left|\mathcal{C}_{n}\right|\leqslant f\left(n\right)$
\end_inset

.
 Für eine Klasse von Funktionen 
\begin_inset Formula $\mathcal{F}\subseteq\mathrm{Abb}\left(\mathbb{N},\mathbb{N}\right)$
\end_inset

 mit 
\begin_inset Formula $f\in\mathcal{F}$
\end_inset

 habe 
\begin_inset Formula $\bar{C}$
\end_inset

 
\begin_inset Formula $\mathcal{F}$
\end_inset

-Größe.
\end_layout

\begin_layout Definition
Insbesondere sei 
\begin_inset Formula $\mathrm{poly}\left(n\right)=n^{\mathcal{O}\left(1\right)}$
\end_inset

 die Klasse aller polynomiell beschränkten Funktionen.
\end_layout

\begin_layout Remark*
Statt 
\begin_inset Quotes gld
\end_inset


\begin_inset Formula $\mathrm{poly}\left(n\right)$
\end_inset

-groß
\begin_inset Quotes grd
\end_inset

 wird in 
\begin_inset CommandInset citation
LatexCommand cite
key "AD2014"

\end_inset

 der Begriff 
\begin_inset Quotes gld
\end_inset


\begin_inset Formula $\mathrm{P}/\mathrm{poly}$
\end_inset

-uniform
\begin_inset Quotes grd
\end_inset

 verwendet:
\end_layout

\begin_layout Remark*
Eine 
\begin_inset Formula $\mathrm{P/poly}$
\end_inset

-Turingmaschine arbeitet in Polynomialzeit und erhält für eine Eingabe der
 Länge 
\begin_inset Formula $n$
\end_inset

 eine polynomiell beschränkte Orakel-Eingabe 
\begin_inset Formula $\Upsilon\left(n\right)\in\left\{ 0,1\right\} ^{f\left(n\right)}$
\end_inset

, 
\begin_inset Formula $f\left(n\right)\in\mathrm{poly}\left(n\right)$
\end_inset

.
 Unter Voraussetzung einer geeigneten Kodierung kann 
\begin_inset Formula $\Upsilon\left(n\right)$
\end_inset

 jede 
\begin_inset Formula $\mathrm{poly}\left(n\right)$
\end_inset

-große Schaltkreisfamilie repräsentieren
\begin_inset CommandInset citation
LatexCommand cite
key "arora-barak"

\end_inset

.
 Daher sind die Begriffe 
\begin_inset Quotes gld
\end_inset


\begin_inset Formula $\mathrm{poly}\left(n\right)$
\end_inset

-groß
\begin_inset Quotes grd
\end_inset

 und 
\begin_inset Quotes gld
\end_inset


\begin_inset Formula $P/\mathrm{poly}$
\end_inset

-uniform
\begin_inset Quotes grd
\end_inset

 äquivalent.
\end_layout

\begin_layout Definition

\series bold
Beschränkte Tiefe
\end_layout

\begin_layout Definition
Für eine Funktion 
\begin_inset Formula $f:\mathbb{N}\rightarrow\mathbb{N}$
\end_inset

 habe eine Schaltkreisfamilie 
\begin_inset Formula $\bar{\mathcal{C}}$
\end_inset

 
\begin_inset Formula $f$
\end_inset

-
\series bold
Tiefe
\series default
, wenn 
\begin_inset Formula $T\left(\mathcal{C}_{n}\right)\leqslant f\left(n\right)$
\end_inset

 für ein 
\begin_inset Formula $n_{0}\in\mathbb{N}$
\end_inset

 und alle 
\begin_inset Formula $n\geqslant n_{0}$
\end_inset

.
 Für eine Klasse 
\begin_inset Formula $\mathcal{F}\subseteq\mathrm{Abb}\left(\mathbb{N},\mathbb{N}\right)$
\end_inset

 sei der Begriff 
\begin_inset Quotes gld
\end_inset


\begin_inset Formula $\mathcal{F}$
\end_inset

-tief
\begin_inset Quotes grd
\end_inset

 analog zu 
\begin_inset Quotes gld
\end_inset


\begin_inset Formula $\mathcal{F}$
\end_inset

-groß
\begin_inset Quotes grd
\end_inset

 definiert.
\end_layout

\begin_layout Standard
\begin_inset Separator parbreak
\end_inset


\end_layout

\begin_layout Definition
Benennung von Schaltkreisklassen
\end_layout

\begin_layout Definition
Sei 
\begin_inset Formula $\sigma$
\end_inset

 eine beliebige relationale Signatur.
\begin_inset Separator latexpar
\end_inset


\end_layout

\begin_deeper
\begin_layout Itemize
Mit 
\begin_inset Formula $\mathrm{SBC}\left[\sigma\right]$
\end_inset

 bezeichnen wir die Klasse der Anfragen, die von einer symmetrischen
\series bold
 
\begin_inset Formula $\left(\sigma,\mathbb{B}_{\mathrm{std}}\right)$
\end_inset


\series default
-Schaltkreisfamilie beschrieben werden.
\end_layout

\begin_layout Itemize
\begin_inset Formula $\left(\mathrm{SBC}+\mathbf{MAJ}\right)\left[\sigma\right]$
\end_inset

 sei die Klasse der Anfragen, die von einer symmetrischen
\series bold
 
\begin_inset Formula $\left(\sigma,\mathbb{B}_{\mathrm{maj}}\right)$
\end_inset


\series default
-Schaltkreisfamilie beschrieben werden.
 (Zur Erinnerung: 
\begin_inset Formula $\mathbb{B}_{\mathrm{maj}}=\mathbb{B}_{\mathrm{std}}\uplus\left\{ \mathtt{MAJ}\right\} $
\end_inset

, wobei 
\begin_inset Formula $\mathtt{MAJ}$
\end_inset

 der Majority-Operator ist.)
\end_layout

\end_deeper
\begin_layout Definition
Für eine Komplexitätsklasse 
\begin_inset Formula $\mathcal{K}$
\end_inset

 bezeichne 
\begin_inset Formula $\mathrm{SBC}^{\mathcal{K}}$
\end_inset

 (beziehungsweise 
\begin_inset Formula $\left(\mathrm{SBC}+\mathbf{MAJ}\right)^{\mathcal{K}}$
\end_inset

 die Klasse der Anfragen, die von einer entsprechenden 
\begin_inset Formula $\mathcal{K}$
\end_inset

-uniformen Schaltkreisfamilie beschrieben werden.
\end_layout

\begin_layout Definition
Für jede dieser Klassen schreiben wir 
\begin_inset Quotes gld
\end_inset


\begin_inset Formula $\mathrm{SAC}^{0}$
\end_inset


\begin_inset Quotes grd
\end_inset

 anstelle von 
\begin_inset Quotes gld
\end_inset


\begin_inset Formula $\mathrm{SBC}$
\end_inset


\begin_inset Quotes grd
\end_inset

, um die Klasse auf Schaltkreisfamilien mit konstanter Tiefe und 
\begin_inset Formula $\mathrm{poly}\left(n\right)$
\end_inset

-Größe zu beschränken.
\end_layout

\begin_layout Chapter
Von Formeln zu Schaltkreisfamilien
\end_layout

\begin_layout Section
Logik erster Stufe
\end_layout

\begin_layout Standard
Wir weisen zunächst nach, dass die Logik der ersten Stufe durch symmetrische,
 
\begin_inset Formula $\mathrm{LOGSPACE}$
\end_inset

-uniforme Schaltkreisfamilien konstanter Tiefe beschrieben wird.
 
\begin_inset Formula 
\[
\mathrm{FO}\subseteq\left(\mathrm{SAC}^{0}\right)^{\mathrm{LOGSPACE}}
\]

\end_inset


\end_layout

\begin_layout Lemma
\begin_inset CommandInset label
LatexCommand label
name "lem:fo-circuit"

\end_inset

Jede 
\begin_inset Formula $\mathrm{FO}\left[\sigma\right]$
\end_inset

-Formel 
\begin_inset Formula $\varphi\left(\bar{x}\right)$
\end_inset

 definiert eine 
\begin_inset Formula $\sigma$
\end_inset

-Anfrage 
\begin_inset Formula $q$
\end_inset

, die von einer symmetrischen 
\begin_inset Formula $\mathrm{LOGSPACE}$
\end_inset

-uniformen Schaltkreis-Familie 
\begin_inset Formula $\bar{\mathcal{C}^{\varphi}}$
\end_inset

 mit 
\begin_inset Formula $\left\Vert \varphi\right\Vert $
\end_inset

-Tiefe und 
\begin_inset Formula $\left\Vert \varphi\right\Vert n^{\mathtt{MF}\left(\varphi\right)}$
\end_inset

-Größe berechnet wird.
\end_layout

\begin_layout Proof
Sei 
\begin_inset Formula $\sigma$
\end_inset

 eine relationale Signatur, und sei 
\begin_inset Formula $\varphi\left(\bar{x}\right)$
\end_inset

 eine 
\begin_inset Formula $k$
\end_inset

-stellige 
\begin_inset Formula $\mathrm{FO}\left[\sigma\right]$
\end_inset

-Formel.
\end_layout

\begin_layout Proof
Per induktiver Konstruktion über den Aufbau von 
\begin_inset Formula $\varphi$
\end_inset

 wird der 
\begin_inset Formula $k$
\end_inset

-stellige Schaltkreis 
\begin_inset Formula $\mathcal{C}_{n}^{\varphi}$
\end_inset

 über dem Universum 
\begin_inset Formula $U\coloneqq\left[1,n\right]$
\end_inset

 definiert, so dass 
\begin_inset Formula $\left\llbracket \varphi\right\rrbracket \left(\mathfrak{A},\bar{t}\right)\Leftrightarrow\left\llbracket \mathcal{C}_{n}^{\varphi}\right\rrbracket \left(\mathfrak{A},\bar{t}\right)$
\end_inset

 für alle 
\begin_inset Formula $n\in\mathbb{N}$
\end_inset

, 
\begin_inset Formula $\mathfrak{A}\in\mathbf{FIN}^{\left[1,n\right]}\left(\sigma\right)$
\end_inset

 und 
\begin_inset Formula $\bar{t}\in\left[1,n\right]^{k}$
\end_inset

 gilt.
 Für eine beliebige Permutation 
\begin_inset Formula $\pi\in\mathrm{Sym}_{U}$
\end_inset

 wird ein Automorphismus 
\begin_inset Formula $\hat{\pi}$
\end_inset

 angegeben, und damit die Symmetrie nachgewiesen.
\begin_inset Separator latexpar
\end_inset


\end_layout

\begin_deeper
\begin_layout Case
Falls 
\begin_inset Formula $\varphi\left(\bar{x}\right)=R\bar{y}$
\end_inset

 für 
\begin_inset Formula $R/m\in\sigma$
\end_inset

 und 
\begin_inset Formula $\bar{y}\in\mathrm{frei}\left(\varphi\right)^{m}$
\end_inset

, so besteht 
\begin_inset Formula $\mathcal{C}_{n}^{\varphi}$
\end_inset

 aus 
\begin_inset Formula $n^{k}$
\end_inset

 Gates.
\begin_inset Separator latexpar
\end_inset


\end_layout

\begin_deeper
\begin_layout Description
Schaltkreis: 
\begin_inset Formula 
\[
\mathcal{C}_{n}^{\varphi}\coloneqq\left(\left\{ g_{\bar{t}}\mid\bar{t}\in U^{k}\right\} ,\emptyset,\Sigma,\Omega,U\right)
\]

\end_inset

Für jedes Tupel 
\begin_inset Formula $\bar{t}\in U^{k}$
\end_inset

 sei 
\begin_inset Formula $\beta_{\bar{t}}\coloneqq\left(\bar{x}\mapsto\bar{t}\right)$
\end_inset

 die Belegung der Variablen 
\begin_inset Formula $\bar{x}$
\end_inset

 mit 
\begin_inset Formula $\bar{t}$
\end_inset

:
\begin_inset Formula 
\begin{eqnarray*}
\Sigma\left(g_{\bar{t}}\right) & \coloneqq & R\beta_{\bar{t}}\left(\bar{y}\right)\\
\Omega\left(\bar{t}\right) & \coloneqq & g_{\bar{t}}
\end{eqnarray*}

\end_inset


\end_layout

\begin_layout Description
Korrektheit: 
\begin_inset Formula 
\[
\begin{array}{cccccc}
\left\llbracket R\bar{x}\right\rrbracket \left(\mathfrak{A},\bar{t}\right) & = & \left[R^{\mathfrak{A}}\right]\left(\beta_{\bar{t}}\bar{y}\right) & = & \mathcal{C}_{n}^{\varphi}\left[\mathfrak{A}\right]\left(g_{\bar{t}}\right)= & \left\llbracket \mathcal{C}_{n}^{\varphi}\right\rrbracket \left(\mathfrak{A},\bar{t}\right)\end{array}
\]

\end_inset


\end_layout

\begin_layout Description
Symmetrie: Sei 
\begin_inset Formula $\hat{\pi}g_{\bar{t}}\coloneqq g_{\pi\bar{t}}$
\end_inset

 für alle Tupel 
\begin_inset Formula $\bar{t}\in U^{k}$
\end_inset

.
 Per Definition ist 
\begin_inset Formula $\pi\beta_{\bar{t}}\left(\bar{y}\right)=\beta_{\pi\bar{t}}\left(\bar{y}\right)$
\end_inset

 und daher 
\begin_inset Formula 
\begin{eqnarray*}
\Sigma\left(\hat{\pi}g_{\bar{t}}\right) & = & \pi\Sigma\left(g_{\bar{t}}\right)\\
\Omega\left(\pi\bar{t}\right) & = & \hat{\pi}\Omega\left(\bar{t}\right)
\end{eqnarray*}

\end_inset


\end_layout

\begin_layout Description
Größe: Der Schaltkreis hat die Tiefe 
\begin_inset Formula $0$
\end_inset

 und die Größe 
\begin_inset Formula $n^{k}=n^{\mathtt{MF}\left(\varphi\right)}$
\end_inset

.
\end_layout

\end_deeper
\begin_layout Case
Falls 
\begin_inset Formula $\varphi\left(\bar{x}\right)=y_{1}\dot{=}y_{2}$
\end_inset

, so besteht 
\begin_inset Formula $\mathcal{C}_{n}^{\varphi}$
\end_inset

 aus 
\begin_inset Formula $n^{k}$
\end_inset

 isolierten Gates (hier ist 
\begin_inset Formula $k\in\left\{ 1,2\right\} $
\end_inset

).
\begin_inset Separator latexpar
\end_inset


\end_layout

\begin_deeper
\begin_layout Description
Schaltkreis: 
\begin_inset Formula 
\[
\mathcal{C}_{n}^{\varphi}\coloneqq\left(\left\{ g_{\bar{t}}\mid\bar{t}\in U^{k}\right\} ,\emptyset,\Sigma,\Omega,U\right)
\]

\end_inset

Für jedes Tupel 
\begin_inset Formula $\bar{t}\in U^{k}$
\end_inset

 sei 
\begin_inset Formula $\beta_{\bar{t}}\coloneqq\left(\bar{x}\mapsto\bar{t}\right)$
\end_inset

 die entsprechende Belegung:
\begin_inset Formula 
\begin{eqnarray*}
\Sigma\left(g_{\bar{t}}\right) & \coloneqq & \begin{cases}
\mathbf{1} & \mathrm{falls}\,\,\beta\left(y_{1}\right)=\beta\left(y_{2}\right)\\
\mathbf{0} & \mathrm{sonst}
\end{cases}\\
\Omega\left(\bar{t}\right) & \coloneqq & g_{\bar{t}}
\end{eqnarray*}

\end_inset


\end_layout

\begin_layout Description
Korrektheit: 
\begin_inset Formula 
\begin{eqnarray*}
\left\llbracket y_{1}\dot{=}y_{2}\right\rrbracket \left(\mathfrak{A},\bar{t}\right)=1 & \Leftrightarrow & \left(\beta_{\bar{t}}y_{1}=\beta_{\bar{t}}y_{2}\right)\\
 & \Leftrightarrow & \mathcal{C}_{n}^{\varphi}\left[\mathfrak{A}\right]\left(g_{\bar{t}}\right)=1\\
 & \Leftrightarrow & \left\llbracket \mathcal{C}_{n}^{\varphi}\right\rrbracket \left(\mathfrak{A},\bar{t}\right)=1
\end{eqnarray*}

\end_inset


\end_layout

\begin_layout Description
Symmetrie: Sei 
\begin_inset Formula $\hat{\pi}\left(g_{\bar{t}}\right)\coloneqq g_{\pi\bar{t}}$
\end_inset

.
 Es gilt 
\begin_inset Formula $\beta_{\bar{t}}\left(x\right)=\beta_{\bar{t}}\left(x'\right)$
\end_inset

 genau dann wenn 
\begin_inset Formula $\beta_{\pi\bar{t}}\left(x\right)=\beta_{\pi\bar{t}}\left(x\right)$
\end_inset

, und daher ist 
\begin_inset Formula $\Sigma\left(\hat{\pi}g_{\bar{t}}\right)=\Sigma\left(g_{\pi\bar{t}}\right)$
\end_inset

.
\end_layout

\begin_layout Description
Größe: Der Schaltkreis hat die Tiefe 
\begin_inset Formula $0$
\end_inset

 und die Größe 
\begin_inset Formula $n^{k}=n^{\mathtt{MF}\left(\varphi\right)}$
\end_inset

.
\end_layout

\end_deeper
\begin_layout Case
Falls 
\begin_inset Formula $\varphi\left(\bar{x}\right)=\varphi_{1}\left(\bar{y_{1}}\right)\wedge\cdots\wedge\varphi_{m}\left(\bar{y_{m}}\right)$
\end_inset

 mit 
\begin_inset Formula $\mathrm{ar}\left(\varphi_{i}\right)=k_{i}$
\end_inset

, so besteht 
\begin_inset Formula $\mathcal{C}_{n}^{\varphi}$
\end_inset

 aus der disjunkten Vereinigung aller 
\begin_inset Formula $\mathcal{C}_{n}^{\varphi_{i}}$
\end_inset

 für 
\begin_inset Formula $1\leqslant i\leqslant m$
\end_inset

 mit der folgenden Erweiterung.
\begin_inset Separator latexpar
\end_inset


\end_layout

\begin_deeper
\begin_layout Description
Schaltkreis: 
\begin_inset Formula 
\begin{eqnarray*}
\mathcal{C}_{n}^{\varphi_{i}} & = & \left(G_{i},W_{i},\Sigma_{i},\Omega_{i},U\right)\\
\mathcal{C}_{n}^{\varphi} & \coloneqq & \left(G,W,\Sigma,\Omega,U\right)
\end{eqnarray*}

\end_inset

Es werden neue Outputs für jedes 
\begin_inset Formula $k$
\end_inset

-Tupel aus 
\begin_inset Formula $U$
\end_inset

 hinzugefügt:
\begin_inset Formula 
\begin{eqnarray*}
G & \coloneqq & \biguplus_{i=1}^{m}G_{i}\uplus\left\{ g_{\bar{t}}\mid\bar{t}\in U^{k}\right\} 
\end{eqnarray*}

\end_inset

Die Outputs werden entsprechend mit denen von 
\begin_inset Formula $\mathcal{C}_{n}^{\varphi_{i}}$
\end_inset

 verknüpft, wobei 
\begin_inset Formula $\rho_{i}:U^{k}\rightarrow U^{k_{i}}$
\end_inset

 ein 
\begin_inset Formula $k$
\end_inset

-Tupel 
\begin_inset Formula $\bar{t}$
\end_inset

 wie folgt auf die in 
\begin_inset Formula $\varphi_{i}$
\end_inset

 frei vorkommenden Variablen reduziere:
\begin_inset Formula 
\begin{eqnarray*}
\mathrm{Sei}\,\,\,\bar{j} & \in & \left[1,k\right]^{k_{i}}\\
\mathrm{so}\,\mathrm{dass}\,\,\,\bar{y_{i}} & = & \left(x_{\left(j_{1}\right)},\cdots,x_{\left(j_{k_{i}}\right)}\right)
\end{eqnarray*}

\end_inset


\begin_inset Formula 
\begin{eqnarray*}
\mathrm{dann}\,\,\,\rho_{i}\left(t_{1},\cdots,t_{k}\right) & \coloneqq & \left(t_{\left(j_{1}\right)},\cdots,t_{\left(j_{k_{i}}\right)}\right)
\end{eqnarray*}

\end_inset


\begin_inset Formula 
\begin{eqnarray*}
W & \coloneqq & \bigcup_{i=1}^{m}W_{i}\cup W_{\mathtt{AND}}\\
W_{\mathtt{AND}} & \coloneqq & \left\{ \left(\Omega_{i}\left(\rho_{i}\bar{t}\right),g_{\bar{t}}\right)\mid1\leqslant i\leqslant m,\,\bar{t}\in U^{k}\right\} 
\end{eqnarray*}

\end_inset

Die Gates werden entsprechend beschriftet:
\begin_inset Formula 
\begin{eqnarray*}
\Sigma\left(g\right) & \coloneqq & \begin{cases}
\Sigma_{i}\left(g\right) & \mathrm{für}\,\,g\in G_{i}\\
\mathtt{AND} & \mathrm{sonst}
\end{cases}\\
\Omega\left(\bar{t}\right) & \coloneqq & g_{\bar{t}}\,\,\mathrm{für\,alle\,\,}\bar{t}\in U^{k}
\end{eqnarray*}

\end_inset


\end_layout

\begin_layout Description
Korrektheit: Es gilt für 
\begin_inset Formula $\bar{t}\in U^{k}$
\end_inset

: 
\begin_inset Formula 
\begin{eqnarray*}
\left\llbracket \varphi_{1}\wedge\cdots\wedge\varphi_{m}\right\rrbracket \left(\mathfrak{A},\bar{t}\right) & = & \min_{1\leqslant i\leqslant m}\left\llbracket \varphi_{i}\right\rrbracket \left(\mathfrak{A},\bar{t}\right)\\
 & = & \min_{1\leqslant i\leqslant m}\mathcal{C}_{n}^{\varphi_{i}}\left[\mathfrak{A}\right]\left(\Omega_{i}\left(\rho_{i}\bar{t}\right)\right)\\
 & = & \mathcal{C}_{n}^{\varphi}\left[\mathfrak{A}\right]\left(g_{\bar{t}}\right)
\end{eqnarray*}

\end_inset


\end_layout

\begin_layout Description
Symmetrie: Es existieren bereits die Automorphismen 
\begin_inset Formula $\hat{\pi_{i}}$
\end_inset

 für jeden Schaltkreis 
\begin_inset Formula $\mathcal{C}_{n}^{\varphi_{i}}$
\end_inset

.
 Der Automorphismus 
\begin_inset Formula $\hat{\pi}$
\end_inset

 erweitert diese wie folgt:
\begin_inset Formula 
\[
\hat{\pi}\left(g\right)\coloneqq\begin{cases}
\hat{\pi}_{i}\left(g\right) & \mathrm{für}\,g\in G_{i}\\
g_{\pi\bar{t}} & \mathrm{für}\,g=g_{\bar{t}}
\end{cases}
\]

\end_inset

Für die Gates und Kanten der Schaltkreise 
\begin_inset Formula $\mathcal{C}_{n}^{\varphi_{i}}$
\end_inset

 ist 
\begin_inset Formula $\hat{\pi}$
\end_inset

 per Annahme bereits korrekt.
\begin_inset Separator latexpar
\end_inset


\end_layout

\begin_deeper
\begin_layout Enumerate
Für jede neue Kante 
\begin_inset Formula $\left(\Omega_{i}\left(\rho_{i}\bar{t}\right),g_{\bar{t}}\right)\in W_{\mathtt{AND}}$
\end_inset

 gilt nach Voraussetzung: 
\begin_inset Formula 
\begin{eqnarray*}
\left(\hat{\pi}\Omega_{i}\left(\rho_{i}\bar{t}\right),\hat{\pi}g_{\bar{t}}\right) & = & \left(\hat{\pi}_{i}\Omega_{i}\left(\rho_{i}\bar{t}\right),\hat{\pi}g_{\bar{t}}\right)\\
 & = & \left(\Omega_{i}\left(\rho_{i}\pi\bar{t}\right),g_{\pi\bar{t}}\right)\\
 & \in & W_{\mathtt{AND}}
\end{eqnarray*}

\end_inset

(Die Reduktion 
\begin_inset Formula $\rho_{i}:U^{k}\rightarrow U^{k_{i}}$
\end_inset

 ist ein Homomorphismus und kommutiert mit der Permutation 
\begin_inset Formula $\pi$
\end_inset

.)
\end_layout

\begin_layout Enumerate
Es gilt 
\begin_inset Formula $\Sigma\left(\hat{\pi}g_{\bar{t}}\right)=\Sigma\left(g_{\bar{t}}\right)=\mathtt{AND}$
\end_inset

.
\end_layout

\begin_layout Enumerate
Es gilt 
\begin_inset Formula $\hat{\pi}\Omega\left(\bar{t}\right)=\hat{\pi}g_{\bar{t}}=g_{\pi\bar{t}}=\Omega\left(\pi\bar{t}\right)$
\end_inset

.
\end_layout

\end_deeper
\begin_layout Description
Größe: Der Schaltkreis hat die Tiefe 
\begin_inset Formula $T\left(\mathcal{C}_{n}^{\varphi}\right)$
\end_inset

 und die Größe 
\begin_inset Formula $\left|\mathcal{C}_{n}^{\varphi}\right|$
\end_inset

: 
\begin_inset Formula 
\begin{eqnarray*}
T\left(\mathcal{C}_{n}^{\varphi}\right) & = & 1+\max_{i=1}^{m}T\left(\mathcal{C}_{n}^{\psi_{i}}\right)\\
 & \overset{\mathrm{Ann.}}{\leqslant} & 1+\max_{i=1}^{m}\left\Vert \psi_{i}\right\Vert \\
 & \leqslant & 1+\sum_{i=1}^{m}\left\Vert \psi_{i}\right\Vert \leqslant\left\Vert \varphi\right\Vert 
\end{eqnarray*}

\end_inset

 
\begin_inset Formula 
\begin{eqnarray*}
\left|\mathcal{C}_{n}^{\varphi}\right| & = & n^{k}+\sum_{i=1}^{m}\left|\mathcal{C}_{n}^{\psi_{i}}\right|\\
 & \overset{\mathrm{Ann.}}{\leqslant} & n^{k}+\sum_{i=1}^{m}\left\Vert \psi_{i}\right\Vert n^{\mathtt{MF}\left(\psi_{i}\right)}\\
 & \leqslant & n^{\mathtt{MF}\left(\varphi\right)}+\sum_{i=1}^{m}\left\Vert \psi_{i}\right\Vert n^{\mathtt{MF}\left(\varphi\right)}\\
 & \leqslant & n^{\mathtt{MF}\left(\varphi\right)}\left(1+\sum_{i=1}^{m}\left\Vert \psi_{i}\right\Vert \right)\leqslant n^{\mathtt{MF}\left(\varphi\right)}\left\Vert \varphi\right\Vert 
\end{eqnarray*}

\end_inset


\end_layout

\end_deeper
\begin_layout Case
Falls 
\begin_inset Formula $\varphi\left(\bar{x}\right)=\varphi_{1}\vee\cdots\vee\varphi_{\ell}$
\end_inset

, so ist der Schaltkreis analog zu Fall 3 mit 
\begin_inset Formula $\Sigma\left(g_{\bar{t}}\right)=\mathtt{OR}$
\end_inset

.
\end_layout

\begin_layout Case
Falls 
\begin_inset Formula $\varphi\left(\bar{x}\right)=\neg\psi$
\end_inset

, so wird der Schaltkreis 
\begin_inset Formula $\mathcal{C}_{n}^{\psi}$
\end_inset

 wie folgt erweitert:
\begin_inset Separator latexpar
\end_inset


\end_layout

\begin_deeper
\begin_layout Description
Schaltkreis: 
\begin_inset Formula 
\begin{eqnarray*}
\mathcal{C}_{n}^{\psi} & = & \left(G',W',\Sigma',\Omega',U\right)\\
\mathcal{C}_{n}^{\varphi} & \coloneqq & \left(G,W,\Sigma,\Omega,U\right)
\end{eqnarray*}

\end_inset

Für jedes Tupel 
\begin_inset Formula $\bar{t}\in U^{k}$
\end_inset

 wird ein neues Gate 
\begin_inset Formula $g_{\bar{t}}$
\end_inset

 eingefügt.
 Die Gates werden mit den Outputs von 
\begin_inset Formula $\mathcal{C}_{n}^{\varphi'}$
\end_inset

 verknüpft.
 
\begin_inset Formula 
\begin{eqnarray*}
G & \coloneqq & G'\uplus\left\{ g_{\bar{t}}\mid\bar{t}\in U^{k}\right\} \\
W & \coloneqq & W'\cup W_{\mathtt{NOT}}\\
W_{\mathtt{NOT}} & \coloneqq & \left\{ \left(\Omega'\left(\bar{t}\right),g_{\bar{t}}\right)\mid\bar{t}\in U^{k}\right\} \\
\Sigma\left(g\right) & \coloneqq & \begin{cases}
\Sigma'\left(g\right) & \mathrm{falls}\,\,g\in G'\\
\mathtt{NOT} & \mathrm{sonst}
\end{cases}\\
\Omega\left(\bar{t}\right) & \coloneqq & g_{\bar{t}}
\end{eqnarray*}

\end_inset


\end_layout

\begin_layout Description
Korrektheit: 
\begin_inset Formula 
\begin{eqnarray*}
\left\llbracket \neg\psi\right\rrbracket \left(\mathfrak{A},\bar{t}\right) & = & 1-\left\llbracket \psi\right\rrbracket \left(\mathfrak{A},\bar{t}\right)\\
 & = & 1-\mathcal{C}_{n}^{\psi}\left[\mathfrak{A}\right]\left(\Omega'\left(\bar{t}\right)\right)\\
 & = & \mathcal{C}_{n}^{\varphi}\left[\mathfrak{A}\right]\left(g_{\bar{t}}\right)
\end{eqnarray*}

\end_inset


\end_layout

\begin_layout Description
Symmetrie: Es existiert bereits der Automorphismus 
\begin_inset Formula $\hat{\pi'}$
\end_inset

.
 Dieser wird wie folgt erweitert:
\begin_inset Formula 
\[
\hat{\pi}\left(g\right)\coloneqq\begin{cases}
\hat{\pi'}\left(g\right) & \mathrm{falls}\,\,g\in G'\\
g_{\pi\bar{t}} & \mathrm{falls}\,\,g=g_{\bar{t}}
\end{cases}
\]

\end_inset

Dann gilt:
\begin_inset Formula 
\begin{eqnarray*}
\hat{\pi}W_{\mathtt{NOT}} & = & \left\{ \left(\hat{\pi}\Omega'\left(\bar{t}\right),\hat{\pi}g_{\bar{t}}\right)\mid\bar{t}\in U^{k}\right\} \\
 & = & \left\{ \left(\Omega'\left(\pi\bar{t}\right),g_{\pi\bar{t}}\right)\mid\bar{t}\in U^{k}\right\} =W_{\mathtt{NOT}}\\
\Sigma\left(\hat{\pi}g_{\bar{t}}\right) & = & \Sigma\left(g_{\bar{t}}\right)=\mathtt{NOT}
\end{eqnarray*}

\end_inset


\end_layout

\begin_layout Description
Größe: Der Schaltkreis hat die Tiefe 
\begin_inset Formula $T\left(\mathcal{C}_{n}^{\varphi}\right)$
\end_inset

 und die Größe 
\begin_inset Formula $\left|\mathcal{C}_{n}^{\varphi}\right|$
\end_inset

: 
\begin_inset Formula 
\begin{eqnarray*}
T\left(\mathcal{C}_{n}^{\varphi}\right) & = & 1+T\left(\mathcal{C}_{n}^{\psi}\right)\\
 & \leqslant & 1+\left\Vert \psi\right\Vert \leqslant\left\Vert \varphi\right\Vert 
\end{eqnarray*}

\end_inset


\begin_inset Formula 
\begin{eqnarray*}
\left|\mathcal{C}_{n}^{\varphi}\right| & = & n^{k}+\left|\mathcal{C}_{n}^{\psi}\right|\\
 & \overset{\mathrm{Ann.}}{\leqslant} & n^{k}+\left\Vert \psi\right\Vert n^{\mathtt{MF}\left(\psi\right)}\\
 & \leqslant & n^{\mathtt{MF}\left(\varphi\right)}+\left\Vert \psi\right\Vert n^{\mathtt{MF}\left(\varphi\right)}\\
 & \leqslant & \left\Vert \varphi\right\Vert n^{\mathtt{MF}\left(\varphi\right)}
\end{eqnarray*}

\end_inset


\end_layout

\end_deeper
\begin_layout Case
\begin_inset CommandInset label
LatexCommand label
name "case:fo-ex"

\end_inset

Falls 
\begin_inset Formula $\varphi\left(\bar{x}\right)=\exists y_{1}\cdots\exists y_{m}\psi\left(z_{1},\cdots,z_{k+m}\right)$
\end_inset

, so wird der Schaltkreis 
\begin_inset Formula $\mathcal{C}_{n}^{\varphi'}$
\end_inset

 wie folgt erweitert:
\begin_inset Separator latexpar
\end_inset


\end_layout

\begin_deeper
\begin_layout Description
Schaltkreis: 
\begin_inset Formula 
\begin{eqnarray*}
\mathcal{C}_{n}^{\varphi} & \coloneqq & \left(G,W,\Sigma,\Omega,U\right)\\
\mathcal{C}_{n}^{\varphi'} & \coloneqq & \left(G',W',\Sigma',\Omega',U\right)
\end{eqnarray*}

\end_inset

Sei 
\begin_inset Formula $\rho:U^{k+m}\rightarrow U^{k}$
\end_inset

 die Abbildung, die aus 
\begin_inset Formula $\bar{z}$
\end_inset

 die gebundenen Variablen 
\begin_inset Formula $\bar{y}$
\end_inset

 entferne:
\begin_inset Formula 
\begin{eqnarray*}
\mathrm{Sei}\,\,\,\bar{i} & \in & \left[1,k\right]^{k}\\
\mathrm{so}\,\mathrm{dass}\,\,\,\bar{x} & = & \left(z_{\left(i_{1}\right)},\cdots,z_{\left(i_{k}\right)}\right)\\
\mathrm{dann}\,\,\,\rho\left(t_{1},\cdots,t_{k}\right) & \coloneqq & \left(t_{\left(i_{1}\right)},\cdots,t_{\left(i_{k}\right)}\right)
\end{eqnarray*}

\end_inset


\end_layout

\begin_layout Standard
Es werden neue Outputs eingefügt.
\begin_inset Formula 
\begin{eqnarray*}
G & \coloneqq & G'\uplus\left\{ g_{\bar{t}}\mid\bar{t}\in U^{k}\right\} 
\end{eqnarray*}

\end_inset

Jedes Gate 
\begin_inset Formula $\Omega'\left(\bar{u}\right)$
\end_inset

 mit 
\begin_inset Formula $\bar{u}\in U^{k+m}$
\end_inset

 wird mit dem Gate 
\begin_inset Formula $g_{\rho\bar{u}}$
\end_inset

 verknüpft.
\begin_inset Formula 
\begin{eqnarray*}
W & \coloneqq & W'\cup W_{\exists}\\
W_{\exists} & \coloneqq & \left\{ \left(\Omega'\left(\bar{u}\right),g_{\rho\bar{u}}\right)\mid\bar{u}\in U^{k+m}\right\} 
\end{eqnarray*}

\end_inset


\end_layout

\begin_layout Standard
Die neuen Outputs werden mit 
\begin_inset Formula $\mathtt{OR}$
\end_inset

 markiert.
\begin_inset Formula 
\begin{eqnarray*}
\Sigma\left(g\right) & \coloneqq & \begin{cases}
\Sigma'\left(g\right) & \mathrm{für}\,g\in G'\\
\mathtt{OR} & \mathrm{sonst}
\end{cases}
\end{eqnarray*}

\end_inset


\begin_inset Formula 
\[
\Omega\left(\bar{t}\right)\coloneqq g_{\bar{t}}
\]

\end_inset


\end_layout

\begin_layout Description
Korrektheit: Für 
\begin_inset Formula $\bar{t}\in U^{k}$
\end_inset

 gilt: 
\begin_inset Formula 
\begin{eqnarray*}
\left\llbracket \varphi\right\rrbracket \left(\mathfrak{A},\bar{t}\right) & = & \max_{\begin{subarray}{c}
\bar{u}\in U^{k+m}\\
\rho\bar{u}=\bar{t}
\end{subarray}}\left\llbracket \psi\right\rrbracket \left(\mathfrak{A},\bar{u}\right)=1\\
 & = & \max_{\begin{subarray}{c}
\bar{u}\in U^{k+m}\\
\rho\bar{u}=\bar{t}
\end{subarray}}\left(\mathcal{C}_{n}^{\varphi}\left[\mathfrak{A}\right]\left(\Omega'\left(\bar{u}\right)\right)\right)\\
 & = & \mathcal{C}_{n}^{\varphi}\left[\mathfrak{A}\right]\left(g_{\bar{t}}\right)
\end{eqnarray*}

\end_inset


\end_layout

\begin_layout Description
Symmetrie: Es existiert bereits der Automorphismus 
\begin_inset Formula $\hat{\pi'}$
\end_inset

.
 Dieser wird wie folgt erweitert:
\begin_inset Formula 
\[
\hat{\pi}\left(g\right)\coloneqq\begin{cases}
\hat{\pi'}\left(g\right) & \mathrm{für}\,\,g\in G'\\
g_{\pi\bar{t}} & \mathrm{für}\,\,g=g_{\bar{t}}
\end{cases}
\]

\end_inset

Auf den Gates von 
\begin_inset Formula $\mathcal{C}_{n}^{\varphi'}$
\end_inset

 ist 
\begin_inset Formula $\hat{\pi}$
\end_inset

 per Annahme treu zu 
\begin_inset Formula $\pi$
\end_inset

.
\begin_inset Separator latexpar
\end_inset


\end_layout

\begin_deeper
\begin_layout Enumerate
Für die neuen Kanten 
\begin_inset Formula $\left(\Omega'\left(\bar{u}\right),g_{\rho\bar{u}}\right)\in W$
\end_inset

 gilt: 
\begin_inset Formula 
\[
\left(\hat{\pi}\Omega'\left(\bar{u}\right),\hat{\pi}g_{\rho\bar{u}}\right)=\left(\Omega'\left(\pi\bar{u}\right),g_{\rho\pi\bar{u}}\right)\in W
\]

\end_inset


\end_layout

\begin_layout Enumerate
\begin_inset Formula $\hat{\pi}\Sigma\left(g_{\bar{t}}\right)=\Sigma\left(g_{\bar{t}}\right)=\mathtt{OR}$
\end_inset

.
\end_layout

\begin_layout Enumerate
\begin_inset Formula $\Omega\left(\pi\bar{t}\right)=g_{\pi\bar{t}}=\hat{\pi}g_{\bar{t}}=\hat{\pi}\Omega\left(\bar{t}\right)$
\end_inset

.
\end_layout

\end_deeper
\begin_layout Description
Größe: Der Schaltkreis hat die Tiefe 
\begin_inset Formula $T\left(\mathcal{C}_{n}^{\varphi}\right)$
\end_inset

 und die Größe 
\begin_inset Formula $\left|\mathcal{C}_{n}^{\varphi}\right|$
\end_inset

:
\begin_inset Formula 
\begin{eqnarray*}
T\left(\mathcal{C}_{n}^{\varphi}\right) & = & 1+T\left(\mathcal{C}_{n}^{\psi}\right)\\
 & \leqslant & 1+\left\Vert \psi\right\Vert \leqslant\left\Vert \varphi\right\Vert 
\end{eqnarray*}

\end_inset


\begin_inset Formula 
\begin{eqnarray*}
\left|\mathcal{C}_{n}^{\varphi}\right| & = & n^{k}+\left|\mathcal{C}_{n}^{\psi}\right|\\
 & \overset{\mathrm{Ann.}}{\leqslant} & n^{k}+\left\Vert \psi\right\Vert n^{\mathtt{MF}\left(\psi\right)}\\
 & \leqslant & n^{\mathtt{MF}\left(\varphi\right)}+\left\Vert \psi\right\Vert n^{\mathtt{MF}\left(\varphi\right)}\\
 & \leqslant & \left\Vert \varphi\right\Vert n^{\mathtt{MF}\left(\varphi\right)}
\end{eqnarray*}

\end_inset


\end_layout

\end_deeper
\begin_layout Case
\begin_inset CommandInset label
LatexCommand label
name "case:fo-forall"

\end_inset

Falls 
\begin_inset Formula $\varphi\left(\bar{x}\right)=\forall y_{1}\cdots\forall y_{m}\psi\left(\bar{z}\right)$
\end_inset

, so sei der Schaltkreis analog zu Fall 8 mit 
\begin_inset Formula $\Sigma\left(g_{\bar{t}}\right)\coloneqq\mathtt{AND}$
\end_inset

.
\end_layout

\begin_layout Description
Speicherplatz Die beschriebene Konstruktion wird von dem 
\begin_inset Formula $\left\Vert \varphi\right\Vert \left|\mathrm{var}\left(\varphi\right)\right|\log n$
\end_inset

-platzbeschränkten Algorithmus 
\begin_inset CommandInset ref
LatexCommand ref
reference "alg:fo-circ"

\end_inset

 berechnet.
\begin_inset Separator latexpar
\end_inset


\end_layout

\begin_deeper
\begin_layout Standard
Jeder Aufruf von 
\begin_inset Formula $\mathtt{Berechne}\left(\varphi\left(\bar{x}\right)\right)$
\end_inset

 iteriert über Variablen 
\begin_inset Formula $\bar{t}\in U^{\mathrm{var}\left(\varphi\right)}$
\end_inset

, die 
\begin_inset Formula $\mathrm{var}\left(\varphi\right)\log n$
\end_inset

 Bits belegen.
 Da die maximale Tiefe der Rekursion durch 
\begin_inset Formula $\left\Vert \varphi\right\Vert $
\end_inset

 beschränkt ist, werden insgesamt 
\begin_inset Formula $\left\Vert \varphi\right\Vert \left|\mathrm{var}\left(\varphi\right)\right|\log n$
\end_inset

 Bits benötigt.
\end_layout

\begin_layout Standard
(Hierbei werden ohne Details eine passende Kodierung der Formel 
\begin_inset Formula $\varphi$
\end_inset

 und ein Algorithmus zur platz-effizienten Berechnung von 
\begin_inset Formula $\mathrm{frei}\left(\varphi\right)$
\end_inset

 vorausgesetzt.)
\end_layout

\end_deeper
\end_deeper
\begin_layout Standard
\begin_inset Float algorithm
wide false
sideways false
status open

\begin_layout LyX-Code
Berechne(
\begin_inset Formula $\varphi\left(\bar{x}\right)$
\end_inset

):
\begin_inset Separator latexpar
\end_inset


\end_layout

\begin_deeper
\begin_layout LyX-Code
Für jedes 
\begin_inset Formula $\bar{t}\in\left[1,n\right]^{\mathrm{ar}\left(\bar{x}\right)}$
\end_inset

:
\begin_inset Separator latexpar
\end_inset


\end_layout

\begin_deeper
\begin_layout LyX-Code
Gib Gate 
\begin_inset Formula $g_{\varphi\left(\bar{t}\right)}$
\end_inset

 und 
\begin_inset Formula $\Omega_{\varphi}\left(\bar{t}\right)\coloneqq g_{\varphi\left(\bar{t}\right)}$
\end_inset

 aus.
\end_layout

\begin_layout LyX-Code
Gib 
\begin_inset Formula $\Sigma_{\varphi}\left(g_{\varphi\left(\bar{t}\right)}\right)$
\end_inset

 entsprechend der Konstruktion aus.
\end_layout

\end_deeper
\begin_layout LyX-Code
Für jede direkte Teilformel 
\begin_inset Formula $\psi\left(\bar{y}\right)$
\end_inset

:
\begin_inset Separator latexpar
\end_inset


\end_layout

\begin_deeper
\begin_layout LyX-Code
Berechne(
\begin_inset Formula $\psi\left(\bar{y}\right)$
\end_inset

).
\end_layout

\begin_layout LyX-Code
Für jedes 
\begin_inset Formula $\bar{t}\in\left[1,n\right]^{\mathrm{ar}\left(\bar{x}\right)}$
\end_inset

:
\begin_inset Separator latexpar
\end_inset


\end_layout

\begin_deeper
\begin_layout LyX-Code
Für jedes 
\begin_inset Formula $\bar{t}'\in\left[1,n\right]^{\mathrm{ar}\left(\bar{y}\right)}$
\end_inset

:
\begin_inset Separator latexpar
\end_inset


\end_layout

\begin_deeper
\begin_layout LyX-Code
Falls 
\begin_inset Formula $t_{i}=t'_{j}$
\end_inset

 für alle 
\begin_inset Formula $i\in\left[1,\mathrm{ar}\left(\bar{x}\right)\right],j\in\left[1,\mathrm{ar}\left(\bar{y}\right)\right]$
\end_inset

 mit 
\begin_inset Formula $x_{i}=y_{j}$
\end_inset

:
\begin_inset Separator latexpar
\end_inset


\end_layout

\begin_deeper
\begin_layout LyX-Code
Verknüpfe 
\begin_inset Formula $\Omega_{\psi}\left(\bar{t}'\right)$
\end_inset

 mit 
\begin_inset Formula $g_{\varphi\left(\bar{t}\right)}$
\end_inset

.
\end_layout

\end_deeper
\end_deeper
\end_deeper
\end_deeper
\end_deeper
\begin_layout Plain Layout
\begin_inset Caption Standard

\begin_layout Plain Layout
\begin_inset CommandInset label
LatexCommand label
name "alg:fo-circ"

\end_inset

Berechnung von 
\begin_inset Formula $\mathcal{C}_{n}^{\varphi}$
\end_inset

 für 
\begin_inset Formula $\mathrm{FO}\left[\sigma\right]$
\end_inset

-Formeln.
\end_layout

\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Section
Disjunkte numerische Erweiterungen
\end_layout

\begin_layout Standard
Wir betrachten eine beliebige numerische Erweiterung 
\begin_inset Formula $\mathcal{L}+\Upsilon$
\end_inset

, und weisen nach, dass eine Schaltkreis-Konstruktion für 
\begin_inset Formula $\mathcal{L}$
\end_inset

 angepasst werden kann, ohne die asymptotische Tiefe und Größe zu verändern.
\end_layout

\begin_layout Standard
Die neue Schaltkreisfamilie ist 
\begin_inset Formula $\mathcal{K}$
\end_inset

-uniform (mit 
\begin_inset Formula $\mathcal{K}\supseteq\mathrm{LOGSPACE}$
\end_inset

), wenn sowohl die Konstruktion für 
\begin_inset Formula $\mathcal{L}$
\end_inset

 als auch das Orakel 
\begin_inset Formula $\mathcal{K}$
\end_inset

-uniform sind.
\end_layout

\begin_layout Lemma
\begin_inset CommandInset label
LatexCommand label
name "lem:oracle-circuit"

\end_inset

Sei 
\begin_inset Formula $\mathcal{L}$
\end_inset

 eine Logik, 
\begin_inset Formula $\mathbb{B}$
\end_inset

 eine boolesche Basis und 
\begin_inset Formula $\mathcal{K}\supseteq\mathrm{LOGSPACE}$
\end_inset

 eine Komplexitätsklasse, so dass für jede 
\begin_inset Formula $\mathcal{L}\left[\sigma\right]$
\end_inset

-Formel eine symmetrische 
\begin_inset Formula $\mathcal{K}$
\end_inset

-uniforme 
\begin_inset Formula $\left(\sigma,\mathbb{B}\right)$
\end_inset

-Schaltkreisfamilie mit 
\begin_inset Formula $t\left(n\right)$
\end_inset

-Tiefe und 
\begin_inset Formula $s\left(n\right)$
\end_inset

-Größe (mit 
\begin_inset Formula $s\mathrm{\left(n\right)\in\mathrm{poly}\left(n\right)}$
\end_inset

) existiert, die die gleiche Anfrage beschreibt.
\end_layout

\begin_layout Lemma
Sei 
\begin_inset Formula $\eta$
\end_inset

 eine von 
\begin_inset Formula $\sigma$
\end_inset

 disjunkte Signatur und 
\begin_inset Formula $\Upsilon$
\end_inset

 ein 
\begin_inset Formula $\mathcal{K}$
\end_inset

-uniformes 
\begin_inset Formula $\eta$
\end_inset

-Orakel.
\end_layout

\begin_layout Lemma
Dann existiert auch für jede 
\begin_inset Formula $\left(\mathcal{L}+\Upsilon\right)\left[\sigma\right]$
\end_inset

-Formel eine ebensolche Schaltkreisfamilie mit der Tiefe 
\begin_inset Formula $t'\left(n\right)\coloneqq t\left(2n+1\right)$
\end_inset

 und der Größe 
\begin_inset Formula $s'\left(n\right)\coloneqq s\left(2n+1\right)$
\end_inset

.
\end_layout

\begin_layout Standard
Insbesondere folgt dann aus der Kombination mit Lemma 
\begin_inset CommandInset ref
LatexCommand ref
reference "lem:fo-circuit"

\end_inset

: 
\begin_inset Formula 
\begin{eqnarray*}
\mathrm{FO}+\mathbf{BIT} & \subseteq & \left(\mathrm{SAC}^{0}\right)^{\mathrm{LOGSPACE}}\\
\mathrm{FO}+\mathbf{ARB} & \subseteq & \left(\mathrm{SAC}^{0}\right)^{P/\mathrm{poly}}
\end{eqnarray*}

\end_inset


\end_layout

\begin_layout Proof
Sei 
\begin_inset Formula $\varphi$
\end_inset

 eine 
\begin_inset Formula $\left(\mathcal{L}+\Upsilon\right)\left[\sigma\right]$
\end_inset

-Formel.
 Für 
\begin_inset Formula $n\in\mathbb{N}$
\end_inset

 und 
\begin_inset Formula $\mathfrak{A}\in\mathbf{FIN}^{\left(n\right)}\left(\sigma\right)$
\end_inset

 wird 
\begin_inset Formula $\varphi$
\end_inset

 als 
\begin_inset Formula $\mathcal{L}\left[\sigma\uplus\eta\uplus\left\{ \leqslant\right\} \right]$
\end_inset

-Formel auf der disjunkt vereinigten 
\begin_inset Formula $\left(\sigma\uplus\eta\uplus\left\{ \leqslant\right\} \right)$
\end_inset

-Struktur 
\begin_inset Formula $\mathfrak{A}\uplus\Upsilon\left(n\right)$
\end_inset

 ausgewertet, wobei 
\begin_inset Formula $\Upsilon\left(n\right)\in\mathbf{FIN}_{<}^{\left[0,n\right]}\left(\eta\right)$
\end_inset

 das Universum 
\begin_inset Formula $\left[0,n\right]$
\end_inset

 hat.
\end_layout

\begin_layout Proof
Der Schaltkreis 
\begin_inset Formula $\mathcal{C}_{n}$
\end_inset

 wird aber auf einer umbenannten 
\begin_inset Formula $\sigma$
\end_inset

-Struktur 
\begin_inset Formula $\mathfrak{A}'\coloneqq\pi\mathfrak{A}\in\mathbf{FIN}^{\left[1,n\right]}\left(\sigma\right)$
\end_inset

 mit für 
\begin_inset Formula $\pi:A\rightleftarrows\left[1,n\right]$
\end_inset

 ausgewertet.
 Um 
\begin_inset Formula $\mathfrak{A}'$
\end_inset

 disjunkt mit 
\begin_inset Formula $\Upsilon\left(n\right)$
\end_inset

 zu vereinigen, werden wir zuerst das Universum 
\begin_inset Formula $\left[0,n\right]$
\end_inset

 durch eine Umbenennung nach 
\begin_inset Formula $\left[n+1,2n+1\right]$
\end_inset

 
\begin_inset Quotes gld
\end_inset

verschieben
\begin_inset Quotes grd
\end_inset

:
\begin_inset Formula 
\begin{eqnarray*}
\Upsilon'\left(n\right) & \coloneqq & \rho\Upsilon\left(n\right)\\
\rho & : & \left[0,n\right]\rightarrow\left[n+1,2n+1\right]\\
\rho\left(i\right) & \coloneqq & i+n+1
\end{eqnarray*}

\end_inset


\end_layout

\begin_layout Proof
Nun betrachten wir die disjunkte Vereinigung (wobei die Prädikate aus 
\begin_inset Formula $\eta\uplus\left\{ \leqslant\right\} $
\end_inset

 nur auf 
\begin_inset Formula $\left[n+1,2n+1\right]$
\end_inset

 definiert sind): 
\begin_inset Formula 
\[
\mathfrak{A}'\uplus\Upsilon'\left(n\right)\in\mathbf{FIN}^{\left[1,2n+1\right]}\left(\sigma\uplus\eta\uplus\left\{ \leqslant\right\} \right)
\]

\end_inset


\end_layout

\begin_layout Proof
Weil 
\begin_inset Formula $\Upsilon\left(n\right)\cong\Upsilon'\left(n\right)$
\end_inset

 und 
\begin_inset Formula $\mathfrak{A}\cong\mathfrak{A}'$
\end_inset

, gilt auch 
\begin_inset Formula $\mathfrak{A}\uplus\Upsilon\left(n\right)\cong\mathfrak{A}'\uplus\Upsilon'\left(n\right)$
\end_inset

 (denn der Isomorphismus ist unter disjunkter Vereinigung abgeschlossen):
 
\begin_inset Formula 
\[
\left\llbracket \varphi\right\rrbracket \left(\mathfrak{A}\uplus\Upsilon\left(n\right),\beta\right)=\left\llbracket \varphi\right\rrbracket \left(\mathfrak{A}'\uplus\Upsilon'\left(n\right),\beta\right)
\]

\end_inset


\end_layout

\begin_layout Proof
Per Voraussetzung können wir in 
\begin_inset Formula $\mathcal{K}$
\end_inset

 einen 
\begin_inset Formula $\left(\sigma\uplus\eta\uplus\left\{ \leqslant\right\} ,\mathbb{B}\right)$
\end_inset

-Schaltkreis 
\begin_inset Formula $\mathcal{C}_{2n+1}^{\varphi}$
\end_inset

 über 
\begin_inset Formula $U'=\left[1,2n+1\right]$
\end_inset

 berechnen.
 Dieser arbeitet korrekt auf 
\begin_inset Formula $\mathfrak{A}'\uplus\Upsilon'\left(n\right)$
\end_inset

 und hat offensichtlich die geforderte Größe 
\begin_inset Formula $s'\left(n\right)=s\left(2n+1\right)$
\end_inset

 und Tiefe 
\begin_inset Formula $t'\left(n\right)=t\left(2n+1\right)$
\end_inset

.
\end_layout

\begin_layout Proof
Anschließend konstruieren wir daraus den 
\begin_inset Formula $\left(\sigma,\mathbb{B}\right)$
\end_inset

-Schaltkreis 
\begin_inset Formula $\dot{\mathcal{C}_{n}^{\varphi}}\coloneqq\left(G,W,\dot{\Sigma},\dot{\Omega},U\right)$
\end_inset

 über 
\begin_inset Formula $U\coloneqq\left[1,n\right]$
\end_inset

, indem alle Inputs 
\begin_inset Formula $\Sigma\left(g\right)=R\bar{t}$
\end_inset

 mit 
\begin_inset Formula $\bar{t}\notin U^{*}$
\end_inset

 oder 
\begin_inset Formula $R\notin\sigma$
\end_inset

 durch Konstanten 
\begin_inset Formula $\dot{\Sigma}\left(g\right)\in\left\{ \mathbf{0},\mathbf{1}\right\} $
\end_inset

 ersetzt werden, und die Ausgangsfunktion auf 
\begin_inset Formula $\dot{\Omega}=\Omega_{\mid U}$
\end_inset

 reduziert wird.
 Das ist eine einfache Iteration über die Gates 
\begin_inset Formula $G$
\end_inset

 des Schaltkreises, die nur einen Zähler der Größe 
\begin_inset Formula $\log\left(s'\left(n\right)\right)\in\log\left(\mathrm{poly}\left(n\right)\right)=\mathcal{O}\left(\log n\right)$
\end_inset

 benötigt, und somit in 
\begin_inset Formula $\mathrm{LOGSPACE}$
\end_inset

 bleibt.
\begin_inset Separator latexpar
\end_inset


\end_layout

\begin_deeper
\begin_layout Case
Für 
\begin_inset Formula $\Sigma\left(g\right)=R\bar{t}$
\end_inset

 mit 
\begin_inset Formula $R/k\in\sigma$
\end_inset

 werden die 
\begin_inset Quotes gld
\end_inset

überschüssigen
\begin_inset Quotes grd
\end_inset

 Inputs einfach auf 
\begin_inset Formula $\mathbf{0}$
\end_inset

 gesetzt:
\begin_inset Formula 
\begin{eqnarray*}
\dot{\Sigma}\left(g\right) & \coloneqq & \begin{cases}
R\bar{t} & \mathrm{falls}\,\,\bar{t}\in U^{k}\\
\mathbf{0} & \mathrm{sonst}
\end{cases}
\end{eqnarray*}

\end_inset


\end_layout

\begin_layout Case
Für 
\begin_inset Formula $\Sigma\left(g\right)=R\bar{t}$
\end_inset

 mit 
\begin_inset Formula $\sigma/k\in\eta\uplus\left\{ \leqslant\right\} $
\end_inset

 wird die numerische Relation 
\begin_inset Formula $R^{\Upsilon'\left(n\right)}$
\end_inset

 fest in den Schaltkreis eingebaut:
\begin_inset Formula 
\begin{eqnarray*}
\dot{\Sigma}\left(g\right) & \coloneqq & \begin{cases}
\mathbf{1} & \mathrm{falls}\,\,\bar{t}\in R^{\Upsilon'\left(n\right)}\\
\mathbf{0} & \mathrm{sonst}
\end{cases}
\end{eqnarray*}

\end_inset


\end_layout

\end_deeper
\begin_layout Proof
Sei nun 
\begin_inset Formula $\pi\in\mathrm{Sym}_{U}$
\end_inset

 eine beliebige Permutation.
\end_layout

\begin_layout Proof
Wir betrachten die Erweiterung 
\begin_inset Formula $\pi'\coloneqq\pi\cup\mathbf{id}_{\left[n+1,2n+1\right]}$
\end_inset

, die die Elemente von 
\begin_inset Formula $\Upsilon'\left(n\right)$
\end_inset

 auf sich selbst abbildet.
 Offensichtlich ist 
\begin_inset Formula $\pi'\in\mathrm{Sym}_{U'}$
\end_inset

 eine Permutation von 
\begin_inset Formula $U'=\left[1,2n+1\right]$
\end_inset

.
\end_layout

\begin_layout Proof
Aus der Symmetrie des Schaltkreises 
\begin_inset Formula $\mathcal{C}_{2n+1}^{\varphi}$
\end_inset

 bezüglich 
\begin_inset Formula $\mathrm{Sym}_{U'}$
\end_inset

 (siehe Lemma 
\begin_inset CommandInset ref
LatexCommand ref
reference "lem:fo-circuit"

\end_inset

) folgt die Existenz eines von 
\begin_inset Formula $\pi'$
\end_inset

 induzierten Automorphismus 
\begin_inset Formula $\hat{\pi}$
\end_inset

.
\end_layout

\begin_layout Proof
Es wird nun nachgewiesen, dass 
\begin_inset Formula $\hat{\pi}$
\end_inset

 auch ein von 
\begin_inset Formula $\pi$
\end_inset

 induzierter Automorphismus in 
\begin_inset Formula $\dot{\mathcal{C}_{n}^{\varphi}}$
\end_inset

 ist.
 Dazu müssen nur 
\begin_inset Formula $\dot{\Sigma}$
\end_inset

 und 
\begin_inset Formula $\dot{\Omega}$
\end_inset

 betrachtet werden, da der Graph 
\begin_inset Formula $\left(G,W\right)$
\end_inset

 unverändert bleibt.
 Ferner betrachten wir nur die nicht-konstanten Inputs von 
\begin_inset Formula $\mathcal{C}_{2n+1}^{\varphi}$
\end_inset

, denn ansonsten bleibt 
\begin_inset Formula $\Sigma$
\end_inset

 unverändert.
\begin_inset Separator latexpar
\end_inset


\end_layout

\begin_deeper
\begin_layout Case
Für 
\begin_inset Formula $\Sigma\left(g\right)=R\bar{t}$
\end_inset

 mit 
\begin_inset Formula $R/k\in\sigma$
\end_inset

 gilt:
\begin_inset Separator latexpar
\end_inset


\end_layout

\begin_deeper
\begin_layout Case
Falls 
\begin_inset Formula $\bar{t}\in U^{k}$
\end_inset

:
\begin_inset Formula 
\[
\dot{\Sigma}\left(\hat{\pi}g\right)=\Sigma\left(\hat{\pi}g\right)=R\pi\bar{t}
\]

\end_inset


\end_layout

\begin_layout Case
Sonst:
\begin_inset Formula 
\[
\dot{\Sigma}\left(\hat{\pi}g\right)=\mathbf{0}=\dot{\Sigma}\left(g\right)
\]

\end_inset


\end_layout

\end_deeper
\begin_layout Case
Für 
\begin_inset Formula $\Sigma\left(g\right)=R\bar{t}$
\end_inset

 mit 
\begin_inset Formula $R/k\in\eta\uplus\left\{ \leqslant\right\} $
\end_inset

 gilt:
\begin_inset Separator latexpar
\end_inset


\end_layout

\begin_deeper
\begin_layout Case
Falls 
\begin_inset Formula $\bar{t}\in R^{\Upsilon'\left(n\right)}\subseteq\left[n+1,2n+1\right]^{k}$
\end_inset

, dann ist 
\begin_inset Formula $\pi'\bar{t}=\bar{t}$
\end_inset

:
\begin_inset Formula 
\[
\dot{\Sigma}\left(\hat{\pi}g\right)=\mathbf{1}=\dot{\Sigma}\left(g\right)
\]

\end_inset


\end_layout

\begin_layout Case
Sonst:
\begin_inset Formula 
\[
\dot{\Sigma}\left(\hat{\pi}g\right)=\mathbf{0}=\dot{\Sigma}\left(g\right)
\]

\end_inset


\end_layout

\end_deeper
\end_deeper
\begin_layout Proof
Außerdem gilt ist 
\begin_inset Formula $U^{k}$
\end_inset

 bezüglich 
\begin_inset Formula $\pi'$
\end_inset

 abgeschlossen: 
\begin_inset Formula 
\[
\hat{\pi}\dot{\Omega}\left(\bar{t}\right)=\hat{\pi}\Omega\left(\bar{t}\right)=\Omega\left(\pi'\bar{t}\right)=\dot{\Omega}\left(\pi'\bar{t}\right)
\]

\end_inset

 Damit ist 
\begin_inset Formula $\bar{\dot{\mathcal{C}^{\varphi}}}$
\end_inset

 eine symmetrische, 
\begin_inset Formula $\mathcal{K}$
\end_inset

-uniforme Schaltkreisfamilie mit Tiefe 
\begin_inset Formula $t'\left(n\right)=t\left(2n+1\right)$
\end_inset

 und Größe 
\begin_inset Formula $s'\left(n\right)=s\left(2n+1\right)$
\end_inset

, die 
\begin_inset Formula $q$
\end_inset

 berechnet.
\end_layout

\begin_layout Section
Logiken mit Zählquantoren
\end_layout

\begin_layout Standard
Wir betrachten die Logik 
\begin_inset Formula $\mathcal{L}+\Upsilon+C$
\end_inset

, und weisen nach, dass die Konstruktion von Lemma 
\begin_inset CommandInset ref
LatexCommand ref
reference "lem:oracle-circuit"

\end_inset

 angepasst werden kann, indem Majority-Gates hinzugefügt werden.
\end_layout

\begin_layout Lemma
\begin_inset CommandInset label
LatexCommand label
name "lem:counting-circuit"

\end_inset

Sei 
\begin_inset Formula $\mathcal{L}$
\end_inset

 eine Logik, 
\begin_inset Formula $c\in\mathbb{N}$
\end_inset

 eine Konstante, 
\begin_inset Formula $\mathbb{B}$
\end_inset

 eine boolesche Basis und 
\begin_inset Formula $\mathcal{K}\supseteq\mathrm{LOGSPACE}$
\end_inset

 eine Komplexitätsklasse.
\end_layout

\begin_layout Lemma
Es gelte die Voraussetzung dass für jede 
\begin_inset Formula $\mathcal{L}\left[\sigma\right]$
\end_inset

-Formel eine symmetrische, 
\begin_inset Formula $\mathcal{K}$
\end_inset

-uniforme 
\begin_inset Formula $\left(\sigma,\mathbb{B}\right)$
\end_inset

-Schaltkreisfamilie mit 
\begin_inset Formula $\left\Vert \varphi\right\Vert n^{c\left\Vert \varphi\right\Vert }$
\end_inset

-Tiefe und 
\begin_inset Formula $\left\Vert \varphi\right\Vert n^{\left\Vert \varphi\right\Vert }$
\end_inset

-Größe existiert, die die gleiche Anfrage beschreibt.
\end_layout

\begin_layout Lemma
Sei 
\begin_inset Formula $\eta$
\end_inset

 eine von 
\begin_inset Formula $\sigma$
\end_inset

 disjunkte Signatur und 
\begin_inset Formula $\Upsilon$
\end_inset

 ein 
\begin_inset Formula $\mathcal{K}$
\end_inset

-uniformes 
\begin_inset Formula $\eta$
\end_inset

-Orakel.
\end_layout

\begin_layout Lemma
Dann existiert für jede 
\begin_inset Formula $\left(\mathcal{L}+\Upsilon+C\right)\left[\sigma\right]$
\end_inset

 eine ebensolche 
\begin_inset Formula $\left(\sigma,\mathbb{B}\cup\left\{ \mathtt{MAJ}\right\} \right)$
\end_inset

-Schaltkreisfamilie mit der Tiefe 
\begin_inset Formula $\left\Vert \varphi\right\Vert \left(2n+1\right){}^{t\left\Vert \varphi\right\Vert }+\left\Vert \varphi\right\Vert $
\end_inset

 und der Größe 
\begin_inset Formula $\left\Vert \varphi\right\Vert \left(2n+1\right)^{\left\Vert \varphi\right\Vert }+2n\left\Vert \varphi\right\Vert $
\end_inset

.
 
\end_layout

\begin_layout Standard
Insbesondere folgt aus der Kombination mit Lemma 
\begin_inset CommandInset ref
LatexCommand ref
reference "lem:fo-circuit"

\end_inset

 und Lemma 
\begin_inset CommandInset ref
LatexCommand ref
reference "lem:oracle-circuit"

\end_inset

 (mit 
\begin_inset Formula $c=0$
\end_inset

 und der Tiefenbeschränkung 
\begin_inset Formula $\mathcal{O}\left(1\right)$
\end_inset

):
\end_layout

\begin_layout Standard
\begin_inset Formula 
\begin{eqnarray*}
\mathrm{FO}+\mathbf{BIT}+C & \subseteq & \left(\mathrm{SAC}^{0}+\mathbf{MAJ}\right)^{\mathrm{LOGSPACE}}\\
\mathrm{FO}+\mathbf{ARB}+C & \subseteq & \left(\mathrm{SAC}^{0}+\mathbf{MAJ}\right)^{P/\mathrm{poly}}
\end{eqnarray*}

\end_inset

Wir werden in diesem Fall konkret mit 
\begin_inset Formula $\exists^{\geqslant}$
\end_inset

-Quantoren arbeiten, denn per Satz 
\begin_inset CommandInset ref
LatexCommand ref
reference "prop:counting-equal"

\end_inset

 sind diese gleich ausdrucksstark mit 
\begin_inset Formula $\exists^{=}$
\end_inset

-Quantoren und 
\begin_inset Formula $\#$
\end_inset

-Termen.
\end_layout

\begin_layout Proof
Sei 
\begin_inset Formula $\varphi$
\end_inset

 eine 
\begin_inset Formula $\left(\mathcal{L}+\Upsilon+\exists^{\geqslant}\right)\left[\sigma\right]$
\end_inset

-Formel, und sei 
\begin_inset Formula $n\in\mathbb{N}$
\end_inset

 die Eingabegröße.
 Wir gehen analog zu Lemma 
\begin_inset CommandInset ref
LatexCommand ref
reference "lem:oracle-circuit"

\end_inset

 für 
\begin_inset Formula $\mathcal{L}+\Upsilon$
\end_inset

 vor und erzeugen einen 
\begin_inset Formula $\left(\sigma\uplus\eta\uplus\left\{ \leqslant\right\} ,\mathbb{B}\cup\left\{ \mathtt{MAJ}\right\} \right)$
\end_inset

-Schaltkreis über 
\begin_inset Formula $U'=\left[1,2n+1\right]$
\end_inset

, wobei wir die folgende induktive Konstruktion verwenden:
\begin_inset Separator latexpar
\end_inset


\end_layout

\begin_deeper
\begin_layout Case
Falls 
\begin_inset Formula $\varphi\left(\bar{x}\right)$
\end_inset

 eine 
\begin_inset Formula $\left(\mathcal{L}+\Upsilon\right)\left[\sigma\right]$
\end_inset

-Formel ohne 
\begin_inset Formula $\exists^{\geqslant}$
\end_inset

-Quantor ist, so existiert der 
\begin_inset Formula $\left(\sigma\uplus\eta\uplus\left\{ \leqslant\right\} ,\mathbb{B}\right)$
\end_inset

-Schaltkreis 
\begin_inset Formula $\mathcal{C}_{2n+1}^{\varphi}$
\end_inset

 schon per Voraussetzung.
\end_layout

\begin_layout Case
Falls 
\begin_inset Formula $\varphi\left(\bar{x}\right)=\exists^{\geqslant x_{i}}y_{j}\psi\left(\bar{y}\right)$
\end_inset

 mit 
\begin_inset Formula $\bar{x}\in\mathbf{var}^{k}$
\end_inset

, so nehmen wir an, dass die Behauptung für 
\begin_inset Formula $\psi$
\end_inset

 gilt.
 
\begin_inset Separator latexpar
\end_inset


\end_layout

\begin_deeper
\begin_layout Standard
Sei 
\begin_inset Formula $\mathcal{C}_{2n+1}^{\psi}$
\end_inset

 der symmetrische Schaltkreis für die Formel 
\begin_inset Formula $\psi$
\end_inset

 mit der Tiefe 
\begin_inset Formula $t\leqslant\left\Vert \psi\right\Vert \left(2n+1\right)^{c\left\Vert \psi\right\Vert }+\left\Vert \psi\right\Vert $
\end_inset

 und der Größe 
\begin_inset Formula $s\leqslant\left\Vert \psi\right\Vert \left(2n+1\right)^{\left\Vert \psi\right\Vert }+2n\left\Vert \psi\right\Vert $
\end_inset

.
\begin_inset Formula 
\[
\mathcal{C}_{2n+1}^{\psi}=\left(G_{\psi},W_{\psi},\Sigma_{\psi},\Omega_{\psi},U'\right)
\]

\end_inset

Wir erzeugen den folgenden Schaltkreis 
\begin_inset Formula $\mathcal{C}_{2n+1}^{\varphi}$
\end_inset

:
\begin_inset Formula 
\begin{eqnarray*}
\mathcal{C}_{2n+1}^{\varphi} & \coloneqq & \left(G,W,\Sigma,\Omega,U'\right)
\end{eqnarray*}

\end_inset

Es wird für jedes Tupel 
\begin_inset Formula $\bar{t}\in\left[1,2n+1\right]^{k}$
\end_inset

 ein neuer Output 
\begin_inset Formula $g_{\bar{t}}$
\end_inset

 eingefügt; ferner werden 
\begin_inset Formula $2n$
\end_inset

 Konstanten eingefügt: 
\begin_inset Formula 
\begin{eqnarray*}
G & = & G_{\psi}\uplus\left\{ g_{\bar{t}}\mid\bar{t}\in U'^{k}\right\} \uplus\left\{ 0_{j},1_{j}\mid1\leqslant j\leqslant n\right\} \\
W & = & W_{\psi}\uplus W_{\mathrm{maj}}\uplus W_{\mathrm{pad}}
\end{eqnarray*}

\end_inset

Die neuen Outputs werden mit 
\begin_inset Formula $\mathtt{MAJ}$
\end_inset

 markiert, falls 
\begin_inset Formula $t_{i}$
\end_inset

 (der Wert der Variable 
\begin_inset Formula $x_{i}$
\end_inset

) einer der numerischen Werte (im Bereich 
\begin_inset Formula $\rho\left[0,n\right]=\left[n+1,2n+1\right]$
\end_inset

) ist, und sonst mit 
\begin_inset Formula $\mathbf{0}$
\end_inset

.
 
\begin_inset Formula 
\[
\begin{array}{ccc}
\Sigma\left(0_{j}\right)=\mathbf{0}, & \Sigma\left(0_{j}\right)=\mathbf{1}, & \Sigma\left(g_{\bar{t}}\right)=\begin{cases}
\mathtt{MAJ} & \mathrm{falls}\,\,t_{i}\in\rho\left[0,n\right]\\
\mathbf{0} & \mathrm{sonst}
\end{cases}\end{array}
\]

\end_inset


\begin_inset Formula 
\[
\Omega\left(\bar{t}\right)=g_{\bar{t}}
\]

\end_inset

Seien 
\begin_inset Formula $\tau_{1},\tau_{2}:U^{k}\rightarrow U^{k-1}$
\end_inset

 die folgenden Abbildungen, die den Wert 
\begin_inset Formula $t_{i}$
\end_inset

 aus 
\begin_inset Formula $\bar{t}$
\end_inset

 beziehungsweise 
\begin_inset Formula $u_{j}$
\end_inset

 aus 
\begin_inset Formula $\bar{u}$
\end_inset

 entfernen:
\begin_inset Formula 
\begin{eqnarray*}
\tau_{1}\left(t_{1},\cdots,t_{k}\right) & = & \left(t_{1},\cdots t_{i-1},t_{i+1},\cdots,t_{k}\right)\\
\tau_{2}\left(t_{1},\cdots,t_{k}\right) & = & \left(t_{1},\cdots t_{j-1},t_{j+1},\cdots,t_{k}\right)
\end{eqnarray*}

\end_inset

Es gilt also 
\begin_inset Formula $\tau_{1}\left(\bar{t}\right)=\tau_{2}\left(\bar{u}\right)$
\end_inset

 genau dann wenn 
\begin_inset Formula $\bar{t}$
\end_inset

 und 
\begin_inset Formula $\bar{u}$
\end_inset

 in den gemeinsamen freien Variablen von 
\begin_inset Formula $\varphi$
\end_inset

 und 
\begin_inset Formula $\psi$
\end_inset

 übereinstimmen.
 Das Majority-Gate 
\begin_inset Formula $g_{\bar{t}}$
\end_inset

 soll prüfen, ob 
\begin_inset Formula $t_{i}\leqslant\rho f\left(\tau_{1}\left(\bar{t}\right)\right)$
\end_inset

, wobei 
\begin_inset Formula $f:U^{k-1}\rightarrow\left[0,n\right]$
\end_inset

 die Anzahl der 
\begin_inset Formula $\psi$
\end_inset

 erfüllenden Belegungen von 
\begin_inset Formula $y_{j}$
\end_inset

 bei der Belegung der übrigen freien Variablen mit 
\begin_inset Formula $\tau_{1}\left(\bar{t}\right)$
\end_inset

 sei: 
\begin_inset Formula 
\begin{eqnarray*}
f\left(\tau_{1}\left(\bar{t}\right)\right) & \coloneqq & \left|\left\{ u_{j}\mid\bar{u}\in q_{\mathcal{C}_{2n+1}^{\psi}}\left(\mathfrak{A}\uplus\rho\Upsilon\left(n\right)\right),\,\tau_{2}\left(\bar{u}\right)=\tau_{1}\left(\bar{t}\right)\right\} \right|
\end{eqnarray*}

\end_inset

Dazu wird jedes Gate 
\begin_inset Formula $g_{\bar{t}}$
\end_inset

 mit 
\begin_inset Formula $t_{i}\in\left[n+1,2n+1\right]$
\end_inset

 zunächst mit den entsprechenden Outputs von 
\begin_inset Formula $\mathcal{C}_{2n+1}^{\psi}$
\end_inset

 verknüpft: 
\begin_inset Formula 
\[
W_{\mathrm{maj}}=\left\{ \left(\Omega_{\psi}\left(\bar{u}\right),g_{\bar{t}}\right)\mid\bar{t},\bar{u}\in U'^{k},\,\tau_{1}\left(\bar{t}\right)=\tau_{2}\left(\bar{u}\right),\,u_{j}\in\left[1,n\right]\right\} 
\]

\end_inset

Momentan hat es genau 
\begin_inset Formula $n$
\end_inset

 Eingänge (für jeden Wert 
\begin_inset Formula $u_{j}\in\left[1,n\right]$
\end_inset

).
 Daher gibt es 
\begin_inset Formula $1$
\end_inset

 aus, wenn 
\begin_inset Formula $f\left(\bar{t}\right)\geqslant\frac{n}{2}$
\end_inset

.
 Es soll aber berechnen, ob 
\begin_inset Formula $f\left(\bar{t}\right)\geqslant\rho^{-1}t_{i}$
\end_inset

.
 Dazu fügen wir die Kanten 
\begin_inset Formula $W_{\mathrm{pad}}$
\end_inset

 ein, um die Eingänge der Majority-Gates mit Konstanten aufzufüllen.
 Ein Majority-Gate mit 
\begin_inset Formula $k$
\end_inset

 zusätzlichen 
\begin_inset Formula $\mathbf{0}$
\end_inset

-Eingängen entscheidet 
\begin_inset Formula $f\left(\bar{t}\right)\geqslant\frac{n+k}{2}$
\end_inset

, eines mit 
\begin_inset Formula $k'$
\end_inset

 zusätzlichen 
\begin_inset Formula $\mathbf{1}$
\end_inset

-Eingängen berechnet 
\begin_inset Formula $f\left(\bar{t}\right)\geqslant\frac{n-k'}{2}$
\end_inset

.
 Es folgt:
\begin_inset Formula 
\begin{eqnarray*}
\rho^{-1}t_{i} & \in & \left\{ \frac{n+k}{2},\frac{n-k'}{2}\right\} \\
k=2\rho^{-1}t_{i}-n & \mbox{oder} & k'=n-2\rho^{-1}t_{i}
\end{eqnarray*}

\end_inset

Jedes Majority-Gate 
\begin_inset Formula $g_{\bar{t}}$
\end_inset

 muss entweder 
\begin_inset Formula $k=2\rho^{-1}t_{i}-n$
\end_inset

 
\begin_inset Formula $\mathbf{0}$
\end_inset

-Eingänge oder 
\begin_inset Formula $k'=n-2\rho^{-1}t_{i}$
\end_inset

 
\begin_inset Formula $\mathbf{1}$
\end_inset

-Eingänge erhalten:
\begin_inset Formula 
\begin{eqnarray*}
W_{\mathrm{pad}} & = & \left\{ \left(0_{j},g_{\bar{t}}\right)\mid\bar{t}\in U'^{k},\,t_{i}\in\rho\left[0,n\right],\,1\leqslant j\leqslant2\rho^{-1}t_{i}-n\right\} \\
 & \cup & \left\{ \left(1_{j},g_{\bar{t}}\right)\mid\bar{t}\in U'^{k},\,t_{i}\in\rho\left[0,n\right],\,1\leqslant j\leqslant n-2\rho^{-1}t_{i}\right\} 
\end{eqnarray*}

\end_inset


\begin_inset Formula 
\begin{eqnarray*}
\overset{n+k=2\rho^{-1}t_{i}}{\overbrace{x_{1}\cdots x_{n}\underset{k=2\rho^{-1}t_{i}-n}{\underbrace{\mathbf{0}\mathbf{0}\cdots\mathbf{0}}}}} &  & \overset{n+k'=2n-2\rho^{-1}t_{i}}{\overbrace{x_{1}\cdots x_{n}\underset{k'=n-2\rho^{-1}t_{i}}{\underbrace{\mathbf{1}\mathbf{1}\cdots\mathbf{1}}}}}
\end{eqnarray*}

\end_inset

Der neue Schaltkreis hat die Tiefe 
\begin_inset Formula 
\[
t+1\leqslant\left\Vert \psi\right\Vert n^{c\left\Vert \psi\right\Vert }+\left\Vert \psi\right\Vert +1<\left\Vert \varphi\right\Vert n^{c\left\Vert \varphi\right\Vert }+\left\Vert \varphi\right\Vert 
\]

\end_inset

 und die Größe 
\begin_inset Formula 
\begin{eqnarray*}
s+n^{k}+2n & \leqslant & \left(\left\Vert \psi\right\Vert +1\right)n^{\left\Vert \varphi\right\Vert }+2n\left(\left\Vert \psi\right\Vert +1\right)\\
 & \leqslant & \left\Vert \varphi\right\Vert n^{\left\Vert \varphi\right\Vert }+2n\left\Vert \varphi\right\Vert 
\end{eqnarray*}

\end_inset


\end_layout

\end_deeper
\begin_layout Case
\begin_inset CommandInset label
LatexCommand label
name "case:counting3"

\end_inset

Falls 
\begin_inset Formula $\varphi\left(\bar{x}\right)$
\end_inset

 eine andere 
\begin_inset Formula $\left(\mathcal{L}+\Upsilon+\exists^{\geqslant}\right)\left[\sigma\right]$
\end_inset

-Formel ist, so seien 
\begin_inset Formula $\psi_{1}\left(\bar{y}_{1}\right),\cdots,\psi_{m}\left(\bar{y}_{m}\right)$
\end_inset

 alle größten
\begin_inset Foot
status collapsed

\begin_layout Plain Layout
d.h.
 solche, die nicht selbst in einer Teilformel der gleichen Form enthalten
 sind.
\end_layout

\end_inset

 Teilformeln von 
\begin_inset Formula $\varphi$
\end_inset

 der Form 
\begin_inset Formula $\psi_{i}=\exists^{\geqslant u_{i}}v_{i}\chi_{i}$
\end_inset

.
 Wir ersetzen diese Teilformeln durch neue Atome 
\begin_inset Formula $R_{1}\bar{y}_{1},\cdots,R_{m}\bar{y}_{m}$
\end_inset

 und erhalten eine 
\begin_inset Formula $\left(\mathcal{L}+\Upsilon\right)\left[\sigma\uplus\left\{ R_{1},\cdots,R_{m}\right\} \right]$
\end_inset

-Formel 
\begin_inset Formula $\varphi'$
\end_inset

, die per Voraussetzung zu einer 
\begin_inset Formula $\left(\sigma\uplus\eta\uplus\left\{ \leqslant\right\} \uplus\left\{ R_{1},\cdots,R_{m}\right\} ,\mathbb{B}\right)$
\end_inset

-Schaltkreisfamilie 
\begin_inset Formula $\mathcal{C}_{2n+1}^{\varphi'}$
\end_inset

 wird.
 Per Annahme existiert für jede der Teilformeln 
\begin_inset Formula $\psi_{1},\cdots,\psi_{m}$
\end_inset

 ein Schaltkreis 
\begin_inset Formula $\mathcal{C}_{2n+1}^{\psi_{i}}$
\end_inset

.
 (In der Implementierung fügen wir den Zählquantor effektiv als Subroutine
 in die bestehende Konstruktion ein.)
\begin_inset Separator latexpar
\end_inset


\end_layout

\begin_deeper
\begin_layout Standard
Wir erzeugen den Schaltkreis 
\begin_inset Formula $\mathcal{C}_{2n+1}^{\varphi}$
\end_inset

 aus der disjunkten Vereinigung wie folgt:
\begin_inset Formula 
\begin{eqnarray*}
\mathcal{C}_{2n+1}^{\psi_{i}} & = & \left(G_{i},W_{i},\Sigma_{i},\Omega_{i},\left[1,2n+1\right]\right)\\
\mathcal{C}_{2n+1}^{\varphi'} & = & \left(G',W',\Sigma',\Omega',\left[1,2n+1\right]\right)\\
\mathcal{C}_{2n+1}^{\varphi} & \coloneqq & \left(G,W,\Sigma,\Omega',\left[1,2n+1\right]\right)
\end{eqnarray*}

\end_inset


\begin_inset Formula 
\begin{eqnarray*}
G & \coloneqq & G'\uplus\biguplus_{i=1}^{m}G_{i}\\
W & \coloneqq & W'\uplus\biguplus_{i=1}^{m}W_{i}\uplus\\
 &  & \uplus\left\{ \left(\Omega_{i}\left(\bar{t}\right),g\right)\mid g\in G',\,\Sigma'\left(g\right)=R_{i}\bar{t}\right\} 
\end{eqnarray*}

\end_inset

Die Output-Gates der Schaltkreise 
\begin_inset Formula $\mathcal{C}_{2n+1}^{\psi_{i}}$
\end_inset

 werden mit den 
\begin_inset Formula $R_{i}\bar{t}$
\end_inset

-Inputs des Schaltkreises 
\begin_inset Formula $\mathcal{C}_{2n+1}^{\varphi'}$
\end_inset

 verbunden, und deren Beschriftung zu 
\begin_inset Formula $\mathtt{AND}$
\end_inset

 geändert.
 
\begin_inset Formula 
\begin{eqnarray*}
\Sigma\left(g\right) & \coloneqq & \begin{cases}
\mathtt{AND} & \mathrm{falls}\,g\in G',\,\Sigma'\left(g\right)=R_{i}\bar{y}_{i}\\
\Sigma'\left(g\right) & \mathrm{sonst,\,falls}\,g\in G'\\
\Sigma_{i}\left(g\right) & \mathrm{sonst,\,falls}\,g\in G_{i}
\end{cases}
\end{eqnarray*}

\end_inset

Die Tiefe von 
\begin_inset Formula $\mathcal{C}_{2n+1}^{\psi_{i}}$
\end_inset

 ist 
\begin_inset Formula $\left\Vert \psi_{i}\right\Vert \left(2n+1\right)^{c\left\Vert \psi_{i}\right\Vert }+\left\Vert \psi_{i}\right\Vert $
\end_inset

 und die Größe ist 
\begin_inset Formula $\left\Vert \psi_{i}\right\Vert \left(2n+1\right)^{\left\Vert \psi_{i}\right\Vert }+2n\left\Vert \psi_{i}\right\Vert $
\end_inset

.
 Der Schaltkreis 
\begin_inset Formula $\mathcal{C}_{2n+1}^{\varphi'}$
\end_inset

 hat per Voraussetzung die Tiefe 
\begin_inset Formula $\left\Vert \varphi'\right\Vert \left(2n+1\right)^{c\left\Vert \varphi'\right\Vert }$
\end_inset

 und die Größe 
\begin_inset Formula $\left\Vert \varphi'\right\Vert \left(2n+1\right)^{\left\Vert \varphi'\right\Vert }$
\end_inset

.
 Zusätzlich ist 
\begin_inset Formula $\left\Vert \varphi\right\Vert \geqslant\left\Vert \varphi'\right\Vert ,\sum_{i=1}^{m}\left\Vert \psi_{i}\right\Vert $
\end_inset

, da die 
\end_layout

\begin_layout Standard
Daher hat der neue Schaltkreis die Tiefe
\begin_inset Formula 
\begin{eqnarray*}
t' & \leqslant & \left\Vert \varphi'\right\Vert \left(2n+1\right)^{c\left\Vert \varphi'\right\Vert }+\max\left\Vert \psi_{i}\right\Vert \left(2n+1\right)^{c\left\Vert \psi_{i}\right\Vert }+\left\Vert \psi_{i}\right\Vert +1\\
 & \leqslant & \left\Vert \varphi\right\Vert \left(2n+1\right)^{c\left\Vert \varphi\right\Vert }+\left\Vert \varphi\right\Vert 
\end{eqnarray*}

\end_inset


\begin_inset Formula 
\begin{eqnarray*}
s' & \leqslant & \left\Vert \varphi'\right\Vert \left(2n+1\right)^{\left\Vert \varphi'\right\Vert }+\sum_{i=1}^{m}\left(\left\Vert \psi_{i}\right\Vert \left(2n+1\right)^{\left\Vert \psi_{i}\right\Vert }+2n\left\Vert \psi_{i}\right\Vert \right)\\
 & \leqslant & \left\Vert \varphi\right\Vert \left(2n+1\right)^{\left\Vert \varphi\right\Vert }+2n\left\Vert \varphi\right\Vert 
\end{eqnarray*}

\end_inset


\end_layout

\end_deeper
\begin_layout Description
Symmetrie: Der neue Schaltkreis ist offensichtlich nicht symmetrisch bezüglich
 
\begin_inset Formula $\mathrm{Sym}_{\left[1,2n+1\right]}$
\end_inset

, denn die Anzahl der konstanten Vorgänger jedes Majority-Gates 
\begin_inset Formula $g_{\bar{t}}$
\end_inset

 hängt von dem Wert 
\begin_inset Formula $t_{i}$
\end_inset

 ab.
 Allerdings ist er symmetrisch bezüglich der Permutationen, die die Werte
 in 
\begin_inset Formula $\left[n+1,2n+1\right]$
\end_inset

 fixieren, denn für alle Werte 
\begin_inset Formula $t_{i}\in\left[1,n\right]$
\end_inset

 ist das Gate 
\begin_inset Formula $g_{\bar{t}}$
\end_inset

 eine 
\begin_inset Formula $\mathbf{0}$
\end_inset

-Konstante.
 
\begin_inset Separator latexpar
\end_inset


\end_layout

\begin_deeper
\begin_layout Standard
Sei 
\begin_inset Formula $\pi\in\mathrm{Sym}_{U}$
\end_inset

 beliebig, und 
\begin_inset Formula $\pi'\coloneqq\pi\cup\mathbf{id}_{\left[n+1,2n+1\right]}$
\end_inset

 deren Erweiterung auf 
\begin_inset Formula $U'$
\end_inset

.
 Nun erweitern wir den Automorphismus 
\begin_inset Formula $\hat{\pi}$
\end_inset

 von 
\begin_inset Formula $\mathcal{C}_{2n+1}^{\psi}$
\end_inset

 wie folgt: 
\begin_inset Formula 
\begin{eqnarray*}
\hat{\pi}\left(0_{i}\right) & \coloneqq & 0_{i}\\
\hat{\pi}\left(1_{i}\right) & \coloneqq & 1_{i}\\
\hat{\pi}\left(g_{\bar{t}}\right) & \coloneqq & g_{\pi'\bar{t}}
\end{eqnarray*}

\end_inset


\end_layout

\begin_layout Enumerate
Nun gilt für jede Kante 
\begin_inset Formula $\left(\Omega_{\psi}\left(\bar{u}\right),g_{\bar{t}}\right)\in W_{\mathrm{maj}}$
\end_inset

 mit 
\begin_inset Formula $\bar{t},\bar{u}\in U'^{k}$
\end_inset

 und 
\begin_inset Formula $\tau_{1}\left(\bar{t}\right)=\tau_{2}\left(\bar{u}\right)$
\end_inset

:
\begin_inset Formula 
\begin{eqnarray*}
\left(\hat{\pi}\Omega_{\psi}\left(\bar{u}\right),\hat{\pi}g_{\bar{t}}\right) & \overset{\mathrm{Ann.}}{=} & \left(\Omega_{\psi}\left(\pi'\bar{u}\right),\hat{\pi}g_{\bar{t}}\right)\\
 & = & \left(\Omega_{\psi}\left(\pi'\bar{u}\right),g_{\pi'\bar{t}}\right)
\end{eqnarray*}

\end_inset

Und weil 
\begin_inset Formula $\pi'\bar{t},\pi'\bar{u}\in U'^{k}$
\end_inset

 und 
\begin_inset Formula $\tau_{1}\left(\pi'\bar{t}\right)=\tau_{2}\left(\pi'\bar{u}\right)$
\end_inset

 gilt, folgt:
\begin_inset Formula 
\[
\left(\Omega_{\psi}\left(\pi'\bar{u}\right),g_{\pi'\bar{t}}\right)\in W_{\mathtt{MAJ}}
\]

\end_inset


\end_layout

\begin_layout Enumerate
Für jede Kante 
\begin_inset Formula $\left(0_{j},g_{\bar{t}}\right)\in W_{\mathrm{pad}}$
\end_inset

 (mit 
\begin_inset Formula $\bar{t}\in U'^{k}$
\end_inset

 und 
\begin_inset Formula $t_{i}\in\left[n+1,2n+1\right]$
\end_inset

, und 
\begin_inset Formula $j\in\left[1,2t_{i}-3n-2\right]$
\end_inset

):
\begin_inset Formula 
\begin{eqnarray*}
\left(\hat{\pi}0_{j},\hat{\pi}g_{\bar{t}}\right) & = & \left(0_{j},g_{\pi'\bar{t}}\right)
\end{eqnarray*}

\end_inset

Und weil 
\begin_inset Formula $\pi't_{i}=t_{i}$
\end_inset

, gilt immer noch 
\begin_inset Formula $j\in\left[1,2\pi't_{i}-3n-2\right]$
\end_inset

, und daher 
\begin_inset Formula $\left(\hat{\pi}0_{j},\hat{\pi}g_{\bar{t}}\right)\in W_{\mathrm{pad}}$
\end_inset

.
 Das gleiche gilt analog für die Kanten 
\begin_inset Formula $\left(\hat{\pi}1_{j},\hat{\pi}g_{\bar{t}}\right)$
\end_inset

.
\end_layout

\begin_layout Enumerate
Für 
\begin_inset Formula $\Sigma$
\end_inset

:
\begin_inset Formula 
\begin{eqnarray*}
\Sigma\left(\hat{\pi}0_{j}\right) & = & \Sigma\left(0_{j}\right)\\
\Sigma\left(\hat{\pi}1_{j}\right) & = & \Sigma\left(1_{j}\right)\\
\Sigma\left(\hat{\pi}g_{\bar{t}}\right) & = & \Sigma\left(g_{\pi'\bar{t}}\right)\\
 & = & \begin{cases}
\mathtt{MAJ} & \mathrm{falls}\,\,\pi't_{i}\in\left[n+1,2n+1\right]\\
\mathbf{0} & \mathrm{sonst}
\end{cases}\\
 & = & \Sigma\left(g_{\bar{t}}\right)
\end{eqnarray*}

\end_inset


\end_layout

\begin_layout Enumerate
Für 
\begin_inset Formula $\Omega$
\end_inset

 ist 
\begin_inset Formula $\hat{\pi}\Omega\left(\bar{t}\right)=\hat{\pi}g_{\bar{t}}=g_{\pi'\bar{t}}=\Omega\left(\pi'\bar{t}\right)$
\end_inset

 per Definition gegeben.
\end_layout

\end_deeper
\end_deeper
\begin_layout Proof
Nach der Erzeugung von 
\begin_inset Formula $\mathcal{C}_{2n+1}^{\varphi}$
\end_inset

 wird der Schaltkreis auf die bereits beschriebene Weise zu 
\begin_inset Formula $\dot{\mathcal{C}_{n}^{\varphi}}$
\end_inset

 umgewandelt, in dem die nicht-konstanten Inputs mit Elementen aus 
\begin_inset Formula $\left[n+1,2n+1\right]$
\end_inset

 zu Konstanten werden.
 Der neue Schritt fügt keine nicht-konstanten Inputs hinzu, so dass sich
 hierbei nichts ändert.
\end_layout

\begin_layout Proof
Da der Schaltkreis 
\begin_inset Formula $\mathcal{C}_{2n+1}^{\varphi}$
\end_inset

 für jede Permutation 
\begin_inset Formula $\pi\cup\mathbf{id}_{\left[n+1,2n+1\right]}$
\end_inset

 mit 
\begin_inset Formula $\pi\in\mathrm{Sym}_{\left[1,n\right]}$
\end_inset

 einen Automorphismus besitzt, ist der Schaltkreis 
\begin_inset Formula $\dot{\mathcal{C}_{n}^{\varphi}}$
\end_inset

 symmetrisch (siehe Lemma 
\begin_inset CommandInset ref
LatexCommand ref
reference "lem:oracle-circuit"

\end_inset

).
\end_layout

\begin_layout Section
Fixpunktlogik
\end_layout

\begin_layout Standard
Die Fixpunktlogik 
\begin_inset Formula $\mathrm{LFP}\left[\sigma\right]$
\end_inset

 ist echt ausdrucksstärker als die Logik 
\begin_inset Formula $\mathrm{FO}\left[\sigma\right]$
\end_inset

.
 Beispielsweise ist die Erreichbarkeit über einen Pfad beliebiger Länge
 nicht erststufig definierbar 
\begin_inset CommandInset citation
LatexCommand cite
key "Immerman1982,Libkin2012"

\end_inset

.
 In 
\begin_inset Formula $\mathrm{LFP}\left[E\right]$
\end_inset

 wird diese Klasse durch die folgende Formel definiert:
\begin_inset Formula 
\[
\varphi\left(u,v\right)\coloneqq\left[\mathrm{lfp}_{R,\left(x,y\right)}\,\left(\exists z\,\left(E\left(x,z\right)\wedge R\left(z,y\right)\right)\vee x=y\right)\right]\left(u,v\right)
\]

\end_inset

Jede 
\begin_inset Formula $\mathrm{LFP}\left[\sigma\right]$
\end_inset

-Formel 
\begin_inset Formula $\varphi$
\end_inset

 ist aber äquivalent zu einer Familie von 
\begin_inset Formula $\mathrm{FO}\left[\sigma\right]$
\end_inset

-Formeln 
\begin_inset Formula $\left(\varphi_{n}\right)_{n\in\mathbb{N}}$
\end_inset

 mit einer konstanten Anzahl Variablen, so dass 
\begin_inset Formula $\varphi_{n}$
\end_inset

 auf allen Strukturen der Größe 
\begin_inset Formula $n$
\end_inset

 äquivalent zu 
\begin_inset Formula $\varphi$
\end_inset

 ist.
 (Dies ist vergleichbar zum 
\begin_inset Formula $k$
\end_inset

-Variablen-Fragment der infinitären Logik 
\begin_inset Formula $L_{\infty\omega}^{k}$
\end_inset

, welches die Fixpunktlogik einschließt
\begin_inset CommandInset citation
LatexCommand cite
key "Dawar1995c,Kolaitis1992,Kolaitis1992b"

\end_inset

.
 In unserer Definition hat jedoch jede einzelne Formel 
\begin_inset Formula $\varphi_{n}$
\end_inset

 eine endliche Länge.)
\end_layout

\begin_layout Standard
Leider sind diese Formeln noch zu lang: Wenn das Symbol 
\begin_inset Formula $R$
\end_inset

 mehr als einmal in 
\begin_inset Formula $\psi$
\end_inset

 vorkommt, ist 
\begin_inset Formula $\left\Vert \psi_{i+1}\right\Vert \geqslant2\left\Vert \psi_{i}\right\Vert $
\end_inset

, und daher wächst die Formellänge mit 
\begin_inset Formula $\left\Vert \varphi\right\Vert \geqslant2^{n^{k}}$
\end_inset

 exponentiell für 
\begin_inset Formula $k=\mathrm{ar}\left(R\right)$
\end_inset

.
 Mit 
\begin_inset Formula $\mathcal{C}_{n}^{\varphi}=\mathcal{C}_{n}^{\varphi_{n}}$
\end_inset

 könnten wir nicht die gewünschte 
\begin_inset Formula $\mathrm{poly}\left(n\right)$
\end_inset

-Größe ableiten.
\end_layout

\begin_layout Standard
Die booleschen Schaltkreise haben jedoch nicht dieselbe Einschränkung wie
 
\begin_inset Formula $\mathrm{FO}\left[\sigma\right]$
\end_inset

: Die Berechnung einer Teilformel 
\begin_inset Formula $\psi_{i}\left(\bar{z}\right)$
\end_inset

 kann mehrfach verwendet werden, ohne den Schaltkreis 
\begin_inset Formula $\mathcal{C}_{n}^{\psi_{i}}$
\end_inset

 zu vervielfältigen.
\end_layout

\begin_layout Lemma
\begin_inset CommandInset label
LatexCommand label
name "lem:lfp-circ"

\end_inset

Sei 
\begin_inset Formula $\sigma$
\end_inset

 eine beliebige relationale Signatur, und sei 
\begin_inset Formula $\varphi$
\end_inset

 eine parameter-freie 
\begin_inset Formula $\mathrm{LFP}\left[\sigma\right]$
\end_inset

-Formel.
\end_layout

\begin_layout Lemma
Dann existiert eine 
\begin_inset Formula $P$
\end_inset

-uniforme symmetrische 
\begin_inset Formula $\left(\sigma,\mathbb{B}_{\mathrm{std}}\right)$
\end_inset

-Schaltkreisfamilie 
\begin_inset Formula $\bar{\mathcal{C}^{\varphi}}$
\end_inset

 mit 
\begin_inset Formula $\mathrm{poly}\left(n\right)$
\end_inset

-Tiefe und 
\begin_inset Formula $\mathrm{poly}\left(n\right)$
\end_inset

-Größe, so dass 
\begin_inset Formula $q_{\bar{\mathcal{C}^{\varphi}}}\left(\mathfrak{A}\right)=q_{\varphi}\left(\mathfrak{A}\right)$
\end_inset

 für alle 
\begin_inset Formula $\mathfrak{A}\in\mathbf{FIN}\left(\sigma\right)$
\end_inset

 gilt.
\end_layout

\begin_layout Standard
In Kombination mit dem Rest dieses Kapitels folgt dann:
\begin_inset Formula 
\begin{eqnarray*}
\mathrm{LFP}+\mathbf{BIT} & \subseteq & \mathrm{SBC}^{P}\\
\mathrm{LFP}+\mathbf{ARB} & \subseteq & \mathrm{SBC}^{P/\mathrm{poly}}\\
\mathrm{LFP}+\mathbf{BIT}+C & \subseteq & \left(\mathrm{SBC}+\mathbf{MAJ}\right)^{P}\\
\mathrm{LFP}+\mathbf{ARB}+C & \subseteq & \left(\mathrm{SBC}+\mathbf{MAJ}\right)^{P/\mathrm{poly}}
\end{eqnarray*}

\end_inset


\end_layout

\begin_layout Proof
Sei 
\begin_inset Formula $\varphi$
\end_inset

 eine 
\begin_inset Formula $\mathrm{LFP}\left[\sigma\right]$
\end_inset

-Formel, und sei 
\begin_inset Formula $n\in\mathbb{N}$
\end_inset

 die Eingabegröße.
 Die Behauptung wird induktiv über den Aufbau der Formel nachgewiesen.
\begin_inset Separator latexpar
\end_inset


\end_layout

\begin_deeper
\begin_layout Case
Falls 
\begin_inset Formula $\varphi$
\end_inset

 eine 
\begin_inset Formula $\mathrm{FO}\left[\sigma\right]$
\end_inset

-Formel ohne Fixpunkt-Operator ist, dann existiert die Schaltkreisfamilie
 
\begin_inset Formula $\mathcal{C}_{n}^{\varphi}$
\end_inset

 schon per Voraussetzung.
\end_layout

\begin_layout Case
Falls 
\begin_inset Formula $\varphi=\left[\mathrm{lfp}_{X,\bar{x}}\psi\right]\left(\bar{y}\right)$
\end_inset

 für eine Relationsvariable 
\begin_inset Formula $X/k\in\mathbf{var}_{2}$
\end_inset

, eine 
\begin_inset Formula $k$
\end_inset

-stellige parameterfreie 
\begin_inset Formula $\mathrm{LFP}\left[\sigma\right]$
\end_inset

-Formel 
\begin_inset Formula $\psi\left(X,\bar{x}\right)$
\end_inset

 und ein Tupel von 
\begin_inset Formula $\mathrm{LFP}\left[\sigma\right]$
\end_inset

-Termen 
\begin_inset Formula $\bar{y}\in\mathbf{var}^{k}$
\end_inset

, so seien 
\begin_inset Formula $\psi_{1}\left(\bar{y}_{1}\right),\cdots,\psi_{m}\left(\bar{y}_{m}\right)$
\end_inset

 alle größten Teilformeln von 
\begin_inset Formula $\psi$
\end_inset

 der Form 
\begin_inset Formula $\psi_{i}=\left[\mathrm{lfp}_{X_{i}\bar{x}_{i}}\varphi_{i}\right]\left(\bar{y}_{i}\right)$
\end_inset

.
 Wir ersetzen diese Teilformeln durch neue Atome 
\begin_inset Formula $R_{1}\bar{y}_{1},\cdots,R_{m}\bar{y}_{m}$
\end_inset

 und erhalten eine 
\begin_inset Formula $\mathrm{FO}\left[\sigma\uplus\left\{ R_{1},\cdots,R_{m}\right\} \right]$
\end_inset

-Formel 
\begin_inset Formula $\psi'$
\end_inset

, die per Voraussetzung zu einer 
\begin_inset Formula $\left(\sigma\uplus\left\{ R_{1},\cdots,R_{m}\right\} ,\mathbb{B}_{\mathrm{std}}\right)$
\end_inset

-Schaltkreisfamilie 
\begin_inset Formula $\mathcal{C}_{n}^{\varphi'}$
\end_inset

 mit konstanter Tiefe 
\begin_inset Formula $t\in\mathbb{N}$
\end_inset

 wird.
 Per Annahme existiert für jede der Teilformeln 
\begin_inset Formula $\psi_{1},\cdots,\psi_{m}$
\end_inset

 ein Schaltkreis 
\begin_inset Formula $\mathcal{C}_{n}^{\psi_{i}}$
\end_inset

.
 
\begin_inset Formula 
\[
\mathcal{C}_{n}^{\psi'}=\left(G_{\psi},W_{\psi},\Sigma_{\psi},\Omega_{\psi},U\right)
\]

\end_inset

Wir bauen einen neuen Schaltkreis für 
\begin_inset Formula $\mathcal{C}_{n}^{\varphi}$
\end_inset

 bauen, der den Schaltkreis 
\begin_inset Formula $\mathcal{C}_{n}^{\psi}$
\end_inset

 genau 
\begin_inset Formula $n^{k}$
\end_inset

-mal iteriert.
\begin_inset Separator latexpar
\end_inset


\end_layout

\begin_deeper
\begin_layout Description
Schaltkreis: Es wird eine Sequenz 
\begin_inset Formula $\left(\mathcal{D}^{i}\right)_{i\in\mathbb{N}}$
\end_inset

 von 
\begin_inset Formula $k$
\end_inset

-stelligen 
\begin_inset Formula $\left(\sigma,\mathbb{B}_{\mathrm{std}}\right)$
\end_inset

-Schaltkreisen definiert.
\begin_inset Formula 
\[
\mathcal{D}^{i}\coloneqq\left(G_{i},W_{i},\Sigma_{i},\Omega_{i},U\right)
\]

\end_inset

 Für 
\begin_inset Formula $i=0$
\end_inset

 nehmen wir nur eine 
\begin_inset Formula $\mathbf{0}$
\end_inset

-Konstante:
\begin_inset Formula 
\begin{eqnarray*}
\mathcal{D}^{0} & \coloneqq & \left(\left\{ g_{0}\right\} ,\emptyset,\Sigma_{0},\Omega_{0},U\right)\\
\Sigma_{0}\left(g_{0}\right)=\mathbf{0} &  & \Omega\left(\bar{t}\right)=g_{0}
\end{eqnarray*}

\end_inset

Für 
\begin_inset Formula $i\in\mathbb{N}_{\geqslant1}$
\end_inset

 fügen wir eine neue Kopie von 
\begin_inset Formula $\mathcal{C}_{n}^{\psi}$
\end_inset

 in 
\begin_inset Formula $\mathcal{D}^{i}$
\end_inset

 ein:
\begin_inset Formula 
\begin{eqnarray*}
G_{i+1} & \coloneqq & G_{i}\uplus G_{\psi}\\
W_{i+1} & \coloneqq & W_{i}\uplus W_{\psi}\uplus W'
\end{eqnarray*}

\end_inset


\begin_inset Formula $\mathcal{D}^{i}$
\end_inset

 verbindet alle mit 
\begin_inset Formula $X\bar{u}$
\end_inset

 markierten Inputs mit dem Output 
\begin_inset Formula $\Omega_{i}\left(\bar{u}\right)$
\end_inset

, und markiert sie mit 
\begin_inset Quotes gld
\end_inset


\begin_inset Formula $\mathtt{AND}$
\end_inset


\begin_inset Quotes grd
\end_inset

.
 (Hier wäre 
\begin_inset Quotes gld
\end_inset


\begin_inset Formula $\mathtt{OR}$
\end_inset


\begin_inset Quotes grd
\end_inset

 äquivalent, da jedes dieser Gates nur einen Vorgänger bekommt.) 
\begin_inset Formula 
\[
\Sigma_{i+1}\left(g\right)\coloneqq\begin{cases}
\Sigma_{i}\left(g\right) & \mathrm{falls}\,\,g\in G_{i}\\
\mathtt{AND} & \mathrm{falls}\,\,g\in G_{\psi},\,\Sigma_{\psi}\left(g\right)=X\bar{u}\\
\Sigma_{\psi}\left(g\right) & \mathrm{sonst}
\end{cases}
\]

\end_inset


\begin_inset Formula 
\[
W'\coloneqq\left\{ \left(\Omega_{i}\left(\bar{u}\right),g\right)\mid g\in G_{\psi},\,\Sigma_{\psi}\left(g\right)=X\bar{u}\right\} 
\]

\end_inset

Die Outputs von 
\begin_inset Formula $\mathcal{C}_{n}^{\psi'}$
\end_inset

 werden zu den Outputs von 
\begin_inset Formula $\mathcal{D}^{i+1}$
\end_inset

: 
\begin_inset Formula 
\[
\Omega_{i+1}\coloneqq\Omega_{\psi}
\]

\end_inset

Seien nun 
\begin_inset Formula $\mathcal{C}_{n}^{\psi_{i}}=\left(G_{i},W_{i},\Sigma_{i},\Omega_{i},U\right)$
\end_inset

 die Schaltkreise für jede 
\begin_inset Formula $\mathrm{LFP}\left[\sigma\right]$
\end_inset

-Formel 
\begin_inset Formula $\psi_{i}$
\end_inset

.
 Wir vereinigen diese mit 
\begin_inset Formula $\mathcal{C}_{n}^{\psi'}$
\end_inset

, benennen die mit 
\begin_inset Formula $R_{i}\bar{t}$
\end_inset

 beschrifteten Gates zu 
\begin_inset Formula $\mathtt{AND}$
\end_inset

 um und verbinden sie mit dem Output 
\begin_inset Formula $\Omega_{i}\left(\bar{t}\right)$
\end_inset

 aus dem Schaltkreis 
\begin_inset Formula $\mathcal{C}_{n}^{\psi'}$
\end_inset

, um den Schaltkreis 
\begin_inset Formula $\mathcal{C}_{n}^{\psi}$
\end_inset

 zu erhalten.
\end_layout

\begin_layout Description
Korrektheit: Es wird induktiv bewiesen, dass 
\begin_inset Formula $\mathcal{D}^{i}$
\end_inset

 auf 
\begin_inset Formula $\mathfrak{A}\in\mathbf{FIN}\left(\sigma\right)$
\end_inset

 die 
\begin_inset Formula $\sigma$
\end_inset

-Anfrage 
\begin_inset Formula $q_{\mathcal{D}^{i}}\left(\mathfrak{A}\right)=F^{i}\left(\emptyset\right)$
\end_inset

 berechnet.
\begin_inset Formula 
\[
q_{\mathcal{D}^{0}}\left(\mathfrak{A}\right)=F^{0}\left(\emptyset\right)=\emptyset
\]

\end_inset


\begin_inset Formula 
\begin{eqnarray*}
q_{\mathcal{D}^{i+1}}\left(\mathfrak{A}\right) & = & q_{\mathcal{C}_{n}^{\psi}}\left(\mathfrak{A}\cup\left(A,\left(X\mapsto q_{\mathcal{D}^{i}}\left(\mathfrak{A}\right)\right)\right)\right)\\
 & \overset{\mathrm{Ann.}}{=} & q_{\mathcal{C}_{n}^{\psi}}\left(\mathfrak{A}\cup\left(A,\left(X\mapsto F^{i}\left(\emptyset\right)\right)\right)\right)\\
 & = & q_{\psi^{\left(X\mapsto F^{i}\left(\emptyset\right)\right)}}\left(\mathfrak{A}\right)\\
 & \overset{\mathrm{Def.\ref{def:lfp}}}{=} & F^{i+1}\left(\emptyset\right)
\end{eqnarray*}

\end_inset

Daher berechnet 
\begin_inset Formula $\mathcal{C}_{n}^{\varphi}=\mathcal{D}^{n^{k}}$
\end_inset

 die Anfrage 
\begin_inset Formula $q_{\mathcal{C}_{n}^{\varphi}}\left(\mathfrak{A}\right)=F^{n^{k}}\left(\emptyset\right)=F^{\infty}\left(\emptyset\right)$
\end_inset

.
\end_layout

\begin_layout Description
Symmetrie: Sei 
\begin_inset Formula $\pi\in\mathrm{Sym}_{U}$
\end_inset

 beliebig.
 Per Annahme ist 
\begin_inset Formula $\mathcal{C}_{n}^{\psi}$
\end_inset

 symmetrisch, also existiert der Automorphismus 
\begin_inset Formula $\hat{\pi}$
\end_inset

.
\end_layout

\begin_layout Standard
Sei 
\begin_inset Formula $\hat{\pi}_{0}\coloneqq\mathbf{id}_{\left\{ g_{0}\right\} }$
\end_inset

.
 Per Annahme existiere für 
\begin_inset Formula $i\in\mathbb{N}$
\end_inset

 ein von 
\begin_inset Formula $\pi$
\end_inset

 induzierter Automorphismus 
\begin_inset Formula $\hat{\pi}_{i}$
\end_inset

 in 
\begin_inset Formula $\mathcal{D}^{i}$
\end_inset

.
 Sei dann 
\begin_inset Formula $\hat{\pi}_{i+1}$
\end_inset

 die folgende Abbildung in 
\begin_inset Formula $\mathcal{D}^{i+1}$
\end_inset

:
\begin_inset Formula 
\begin{eqnarray*}
\\
\hat{\pi}_{i+1}\left(g\right) & \coloneqq & \begin{cases}
\hat{\pi}_{i}\left(g\right) & \mathrm{falls}\,g\in G_{i}\\
\hat{\pi}\left(g\right) & \mathrm{sonst}
\end{cases}
\end{eqnarray*}

\end_inset


\end_layout

\begin_layout Enumerate
Es gilt 
\begin_inset Formula $\left(\hat{\pi}_{i+1}\right)_{\mid G_{i}}=\hat{\pi}_{i}$
\end_inset

, und 
\begin_inset Formula $\left(\hat{\pi}_{i+1}\right)_{\mid G_{\psi}}=\hat{\pi}$
\end_inset

; damit sind die Bedingungen für 
\begin_inset Formula $W_{i}\cup W_{\psi}$
\end_inset

, 
\begin_inset Formula $\Sigma_{i}$
\end_inset

, 
\begin_inset Formula $\Omega_{i+1}=\Omega_{\psi}$
\end_inset

 und alle internen Gates 
\begin_inset Formula $g\in G_{\psi}$
\end_inset

 mit 
\begin_inset Formula $\Sigma_{\psi}\notin\left\{ X\bar{u}\mid\bar{u}\in U^{m}\right\} $
\end_inset

 bereits erfüllt.
\end_layout

\begin_layout Enumerate
Für die ehemaligen Inputs mit 
\begin_inset Formula $\Sigma\left(g\right)=X\bar{u}$
\end_inset

 gilt 
\begin_inset Formula $\Sigma_{i+1}\left(\hat{\pi}g\right)=\Sigma_{i+1}\left(g\right)=\mathtt{AND}$
\end_inset

.
\end_layout

\begin_layout Enumerate
Für jede neue Kante 
\begin_inset Formula $\left(\Omega_{i}\left(\bar{u}\right),g\right)\in W'$
\end_inset

 mit 
\begin_inset Formula $g\in G_{\psi}$
\end_inset

 und 
\begin_inset Formula $\Sigma_{\psi}\left(g\right)=X\bar{u}$
\end_inset

: 
\begin_inset Formula 
\begin{eqnarray*}
\left(\hat{\pi}_{i+1}\Omega_{i}\left(\bar{u}\right),\hat{\pi}_{i+1}g\right) & = & \left(\hat{\pi}_{i}\Omega_{i}\left(\bar{u}\right),\hat{\pi}g\right)\\
 & = & \left(\Omega_{i}\left(\pi\bar{u}\right),\hat{\pi}g\right)
\end{eqnarray*}

\end_inset

Per Definition ist 
\begin_inset Formula $\Sigma_{\psi}\left(\hat{\pi}g\right)=X\pi\bar{u}$
\end_inset

, und daher:
\begin_inset Formula 
\[
\left(\Omega_{i}\left(\pi\bar{u}\right),\hat{\pi}g\right)\in W'
\]

\end_inset


\end_layout

\begin_layout Standard
Daher ist 
\begin_inset Formula $\mathcal{D}^{i+1}$
\end_inset

 ebenfalls symmetrisch, und es folgt die Symmetrie von 
\begin_inset Formula $\mathcal{C}_{n}^{\varphi}=\mathcal{D}^{n^{k}}$
\end_inset

.
\end_layout

\begin_layout Description
Größe: Es wird induktiv bewiesen, dass 
\begin_inset Formula $T\left(\mathcal{D}^{i}\right)\leqslant i\left(t+1\right)$
\end_inset

, und 
\begin_inset Formula $\left|\mathcal{D}^{i}\right|\leqslant1+i\cdot s\left(n\right)$
\end_inset

 
\begin_inset Formula 
\begin{eqnarray*}
T\left(\mathcal{D}^{0}\right) & = & 0\\
T\left(\mathcal{D}^{i+1}\right) & = & T\left(\mathcal{D}^{i}\right)+T\left(\mathcal{C}_{n}^{\psi}\right)+1\\
 & \leqslant & T\left(\mathcal{D}^{i}\right)+t+1\\
 & \overset{\mathrm{Ann.}}{\leqslant} & i\left(t+1\right)+t+1=\left(i+1\right)\left(t+1\right)
\end{eqnarray*}

\end_inset


\begin_inset Formula 
\begin{eqnarray*}
\left|\mathcal{D}^{0}\right| & = & 1\\
\left|\mathcal{D}^{i+1}\right| & = & \left|\mathcal{D}^{i}\right|+\left|\mathcal{C}_{n}^{\psi}\right|\\
 & \leqslant & \left|\mathcal{D}^{i}\right|+s\left(n\right)\\
 & \overset{\mathrm{Ann.}}{\leqslant} & 1+i\cdot s\left(n\right)+s\left(n\right)=1+\left(i+1\right)s\left(n\right)
\end{eqnarray*}

\end_inset

Damit gilt 
\begin_inset Formula $T\left(\mathcal{C}_{n}^{\varphi}\right)=T\left(\mathcal{D}^{n^{k}}\right)+\max_{i=1}^{m}T\left(\mathcal{C}_{n}^{\psi_{i}}\right)\in\mathrm{poly}\left(n\right)$
\end_inset

 und 
\begin_inset Formula $\left|\mathcal{C}_{n}^{\varphi}\right|=\left|\mathcal{D}^{n^{k}}\right|+\sum_{i=1}^{m}\left|\mathcal{C}_{n}^{\psi_{i}}\right|\in\mathrm{poly}\left(n\right)$
\end_inset

.
\end_layout

\end_deeper
\begin_layout Case
Falls 
\begin_inset Formula $\varphi$
\end_inset

 eine andere Form hat, dann gehe analog zu Fall 2 vor: Ersetze die Fixpunkt-Oper
atoren durch atomare Formeln, erzeuge den Schaltkreis der 
\begin_inset Formula $\mathrm{FO}\left[\sigma\uplus\left\{ R_{1},\cdots,R_{m}\right\} \right]$
\end_inset

-Formel 
\begin_inset Formula $\varphi'$
\end_inset

 und die Schaltkreise der Fixpunkt-Formeln 
\begin_inset Formula $\psi_{1},\cdots,\psi_{m}$
\end_inset

, und füge diese zusammen.
 Es gelten die gleichen Schranken für die Größe und Tiefe.
\end_layout

\end_deeper
\begin_layout Chapter
Partitionen und Träger
\end_layout

\begin_layout Standard
Unsere Konstruktion der logischen Formel aus einer Schaltkreisfamilie wird
 voraussetzen, dass jedes Gate 
\begin_inset Formula $g$
\end_inset

 unter allen Bijektionen 
\begin_inset Formula $\pi:A\rightleftarrows U$
\end_inset

 ausgewertet wird.
 Wir stehen zunächst vor dem Problem, dass es 
\begin_inset Formula $\left|\mathrm{Bij}\left(A,U\right)\right|=n!\in\Omega\left(2^{n}\right)$
\end_inset

 solche Bijektionen gibt.
 Um sie für jedes Gate auf eine 
\begin_inset Formula $\mathrm{poly}\left(n\right)$
\end_inset

-beschränkte Zahl zu reduzieren, möchten wir gerne nachweisen, dass die
 
\begin_inset Formula $n!$
\end_inset

 Bijektionen bezüglich jedem Gate in 
\begin_inset Formula $\frac{n!}{\left(n-k\right)!}$
\end_inset

 verschiedene Äquivalenzklassen der Größe 
\begin_inset Formula $\left(n-k\right)!$
\end_inset

 (mit 
\begin_inset Formula $k\in\mathcal{O}\left(1\right)$
\end_inset

) fallen (und einen effizienten Algorithmus finden, der die Repräsentanten
 dieser Äquivalenzklassen erzeugt).
\end_layout

\begin_layout Standard
In dem Ergebnis von Martin Otto in 1997
\begin_inset CommandInset citation
LatexCommand cite
key "Otto1997"

\end_inset

 setzt er eine lokale polynomielle Beschränkung der Orbits jedes Gates voraus,
 und leitet für diese Schaltkreisfamilien eine Charakterisierung durch das
 variablen-beschränkte Fragment der infinitären Logik (
\begin_inset Formula $L_{\infty\omega}^{\omega}$
\end_inset

) her.
\end_layout

\begin_layout Standard
Anderson und Dawar betrachten in 
\begin_inset CommandInset citation
LatexCommand cite
key "AD2014"

\end_inset

 symmetrische Schaltkreisfamilien mit polynomieller Größe (und daher automatisch
 polynomiell beschränkten Orbits).
 Hier wird für jedes Gate nachgewiesen, dass sein Wert nur von 
\begin_inset Formula $\mathcal{O}\left(1\right)$
\end_inset

 vielen Elementen des Universums 
\begin_inset Formula $U$
\end_inset

 abhängt, und daraus eine Charakterisierung durch die Fixpunktlogik abgeleitet.
\end_layout

\begin_layout Standard
Hierfür werden zunächst die Begriffe der Partition, des Stabilisators und
 des Trägers eingeführt.
\end_layout

\begin_layout Section
Partitionen einer Menge
\end_layout

\begin_layout Standard
Sei 
\begin_inset Formula $U$
\end_inset

 ein beliebiges Universum.
 Wir führen die 
\series bold
Partition 
\series default
als Zerlegung von 
\begin_inset Formula $U$
\end_inset

 in disjunkte Teilmengen ein.
\end_layout

\begin_layout Definition
Sei 
\begin_inset Formula $\mathcal{P}\coloneqq\left\{ P_{1},\cdots,P_{k}\right\} $
\end_inset

 eine Menge von disjunkten nicht-leeren Mengen.
 Wir nennen 
\begin_inset Formula $\mathcal{P}$
\end_inset

 eine Partition von 
\begin_inset Formula $U$
\end_inset

, wenn 
\begin_inset Formula $\biguplus_{i=1}^{k}P_{i}=U$
\end_inset

.
 Sei 
\begin_inset Formula $\mathrm{Part}_{U}$
\end_inset

 die Menge aller Partitionen von 
\begin_inset Formula $U$
\end_inset

.
 Sei 
\begin_inset Formula $\sim_{\mathcal{P}}$
\end_inset

 eine Äquivalenzrelation auf 
\begin_inset Formula $U$
\end_inset

, deren Äquivalenzklassen von 
\begin_inset Formula $\mathcal{P}$
\end_inset

 repräsentiert werden.
\end_layout

\begin_layout Standard
Die Permutationen 
\begin_inset Formula $\mathrm{Sym}_{U}$
\end_inset

 werden auf natürliche Weise auf 
\begin_inset Formula $\mathcal{P}\in\mathrm{Part}_{U}$
\end_inset

 erweitert:
\begin_inset Formula 
\begin{eqnarray*}
\pi\mathcal{P} & \coloneqq & \left\{ \pi P_{i}\mid P_{i}\in\mathcal{P}\right\} \in\mathrm{Part}_{U}
\end{eqnarray*}

\end_inset

Als nächstes wird die 
\series bold
Feinheit
\series default
 als Relation auf 
\begin_inset Formula $\mathrm{Part}_{U}$
\end_inset

 eingeführt.
\end_layout

\begin_layout Definition
\begin_inset CommandInset label
LatexCommand label
name "def:feinheit"

\end_inset

Sei 
\begin_inset Formula $\mathcal{P}\preceq\mathcal{P}'$
\end_inset

 (
\begin_inset Quotes gld
\end_inset


\begin_inset Formula $\mathcal{P}$
\end_inset

 ist mindestens so fein wie 
\begin_inset Formula $\mathcal{P}'$
\end_inset


\begin_inset Quotes grd
\end_inset

) genau dann wenn jedes 
\begin_inset Formula $P_{i}\in\mathcal{P}$
\end_inset

 eine Teilmenge eines 
\begin_inset Formula $P'_{j}\in\mathcal{P}'$
\end_inset

 ist.
\end_layout

\begin_layout Definition
Dies ist äquivalent zu der Teilmengenbeziehung von 
\begin_inset Formula $\sim_{\mathcal{P}}$
\end_inset

 und 
\begin_inset Formula $\sim_{\mathcal{P}'}$
\end_inset

: 
\begin_inset Formula 
\begin{eqnarray*}
\mathcal{P}\preceq\mathcal{P}' & \Leftrightarrow & \mathrm{f.a.}\,P\in\mathcal{P}\,\mathrm{ex.\,}P'\in\mathcal{P}'\,\mathrm{s.d.}\,P\subseteq P'\\
 & \Leftrightarrow & \mathrm{f.a.}\,u,u'\in U\,\mathrm{gilt}\,u\sim_{\mathcal{P}}u'\,\Rightarrow u\sim_{\mathcal{P}'}u'\\
 & \Leftrightarrow & \left(\sim_{\mathcal{P}}\right)\subseteq\left(\sim_{\mathcal{P}'}\right)
\end{eqnarray*}

\end_inset


\end_layout

\begin_layout Definition
Genau wie die Teilmengenbeziehung der Äquivalenzrelation bildet 
\begin_inset Formula $\preceq$
\end_inset

 eine Halbordnung auf 
\begin_inset Formula $\mathrm{Part}_{U}$
\end_inset

.
\end_layout

\begin_layout Definition
Daher bildet 
\begin_inset Formula $\mathrm{Part}_{U}$
\end_inset

 einen vollständigen Verband (siehe 
\begin_inset CommandInset citation
LatexCommand cite
key "Klein-Barmen1935"

\end_inset

) mit den folgenden Infimum- und Supremum-Operationen 
\begin_inset Formula $\sqcap$
\end_inset

 und 
\begin_inset Formula $\sqcup$
\end_inset

:
\begin_inset Formula 
\begin{eqnarray*}
\mathcal{A}\sqcap\mathcal{B} & \coloneqq & \max_{\preceq}\left\{ \mathcal{P}\in\mathrm{Part}_{U}\mid\mathcal{P}\preceq\mathcal{A}\,\mathrm{und}\,\mathcal{P}\preceq\mathcal{B}\right\} \\
\mathcal{A}\sqcup\mathcal{B} & \coloneqq & \min_{\preceq}\left\{ \mathcal{P}\in\mathrm{Part}_{U}\mid\mathcal{A}\preceq\mathcal{P}\,\mathrm{und}\,\mathcal{B}\preceq\mathcal{P}\right\} 
\end{eqnarray*}

\end_inset


\end_layout

\begin_layout Definition
(
\begin_inset Formula $\mathcal{A}\sqcap\mathcal{B}$
\end_inset

 sei die gröbste feinere Partition als 
\begin_inset Formula $\mathcal{A}$
\end_inset

 und 
\begin_inset Formula $\mathcal{B}$
\end_inset

, und 
\begin_inset Formula $\mathcal{A}\sqcup\mathcal{B}$
\end_inset

 die feinste gröbere Partition als 
\begin_inset Formula $\mathcal{A}$
\end_inset

 und 
\begin_inset Formula $\mathcal{B}$
\end_inset

.)
\end_layout

\begin_layout Proposition
\begin_inset CommandInset label
LatexCommand label
name "prop:part-eq"

\end_inset

Wenn 
\begin_inset Formula $\left[x\right]_{\sim}$
\end_inset

 die Äquivalenzklasse 
\begin_inset Formula $\left\{ y\mid x\sim y\right\} $
\end_inset

 ist, und 
\begin_inset Formula $\mathcal{P}_{1},\mathcal{P}_{2}\in\mathrm{Part}_{U}$
\end_inset

 wie folgt sind, 
\begin_inset Formula 
\begin{eqnarray*}
\mathcal{P}_{1} & \coloneqq & \left\{ \left[x\right]_{\sim_{\mathcal{A}}\cap\sim_{\mathcal{B}}}\mid x\in U\right\} \\
\mathcal{P}_{2} & \coloneqq & \left\{ \left[x\right]_{\sim^{*}}\mid x\in U\right\} \\
 &  & \mathrm{wobei}\,\sim\coloneqq\left(\sim_{\mathcal{A}}\right)\cup\left(\sim_{\mathcal{B}}\right)
\end{eqnarray*}

\end_inset

dann ist 
\begin_inset Formula $\mathcal{P}_{1}=\mathcal{A}\sqcap\mathcal{B}$
\end_inset

 und 
\begin_inset Formula $\mathcal{P}_{2}=\mathcal{A}\sqcup\mathcal{B}$
\end_inset

.
\end_layout

\begin_layout Proof
Die Eigenschaft 
\begin_inset Formula $\mathcal{P}_{1}\preceq\mathcal{A},\mathcal{B}\preceq\mathcal{P}_{2}$
\end_inset

 folgt offensichtlich aus 
\begin_inset Formula $\left(\sim_{\mathcal{A}}\cap\sim_{\mathcal{B}}\right)\subseteq\sim_{\mathcal{A}},\sim_{\mathcal{B}}\subseteq\left(\sim_{\mathcal{A}}\cup\sim_{\mathcal{B}}\right)^{*}$
\end_inset

.
 Ferner muss jede Relation 
\begin_inset Formula $\sim_{\mathcal{P}}$
\end_inset

 mit 
\begin_inset Formula $\left(\sim_{\mathcal{P}}\right)\subseteq\left(\sim_{\mathcal{A}}\right)$
\end_inset

 und 
\begin_inset Formula $\left(\sim_{\mathcal{A}}\right)\subseteq\left(\sim_{\mathcal{B}}\right)$
\end_inset

 auch in 
\begin_inset Formula $\left(\sim_{\mathcal{A}}\right)\cap\left(\sim_{\mathcal{B}}\right)$
\end_inset

 enthalten sein, und jede mit 
\begin_inset Formula $\left(\sim_{\mathcal{P}}\right)\supseteq\left(\sim_{\mathcal{A}}\right)$
\end_inset

, 
\begin_inset Formula $\left(\sim_{\mathcal{P}}\right)\supseteq\left(\sim_{\mathcal{B}}\right)$
\end_inset

 muss auch 
\begin_inset Formula $\left(\sim_{\mathcal{A}}\right)\cup\left(\sim_{\mathcal{B}}\right)$
\end_inset

 (und dessen Abschluss) enthalten.
\end_layout

\begin_layout Definition
Die feinste und gröbste Partition von 
\begin_inset Formula $U$
\end_inset

 seien 
\begin_inset Formula $\mathcal{P}_{\min}\left(U\right)\coloneqq\left\{ \left\{ u_{1}\right\} ,\cdots,\left\{ u_{n}\right\} \right\} $
\end_inset

 und 
\begin_inset Formula $\mathcal{P}_{\max}\left(U\right)\coloneqq\left\{ U\right\} $
\end_inset

.
\end_layout

\begin_layout Section
Stabilisatoren einer Partition
\end_layout

\begin_layout Standard
Wir führen die Stabilisatoren von Elementen, Teilmengen und Partitionen
 eines Universums 
\begin_inset Formula $U$
\end_inset

 ein.
\end_layout

\begin_layout Definition
Der Stabilisator eines Elements 
\begin_inset Formula $u\in U$
\end_inset

 in 
\begin_inset Formula $U$
\end_inset

 sei die Untergruppe 
\begin_inset Formula $\mathrm{Stab}_{U}\left(u\right)\subseteq\mathrm{Sym}_{U}$
\end_inset

 aller Permutationen, die 
\begin_inset Formula $u$
\end_inset

 fixieren: 
\begin_inset Formula 
\[
\mathrm{Stab}_{U}\left(u\right)\coloneqq\left\{ \pi\in\mathrm{Sym}_{U}\mid\pi u=u\right\} 
\]

\end_inset


\end_layout

\begin_layout Definition
Der Punktstabilisator
\series bold
 
\series default
einer Teilmenge 
\begin_inset Formula $X\subseteq U$
\end_inset

 in 
\begin_inset Formula $U$
\end_inset

 sei die Untergruppe 
\begin_inset Formula $\mathrm{Stab}_{U}\left(X\right)\subseteq\mathrm{Sym}_{U}$
\end_inset

 der Permutationen, die jedes Element 
\begin_inset Formula $x\in X$
\end_inset

 fixieren:
\begin_inset Formula 
\begin{eqnarray*}
\mathrm{Stab}_{U}\left(X\right) & \coloneqq & \left\{ \pi\in\mathrm{Sym}_{U}\mid\pi x=x\,\,\mathrm{f.a.}\,\,x\in X\right\} \\
 & = & \bigcap_{x\in X}\mathrm{Stab}_{U}\left(x\right)
\end{eqnarray*}

\end_inset


\end_layout

\begin_layout Definition
Der Mengenstabilisator von 
\begin_inset Formula $X$
\end_inset

 in 
\begin_inset Formula $U$
\end_inset

 sei die Untergruppe 
\begin_inset Formula $\mathrm{Stab}_{U}\left\{ X\right\} \subseteq\mathrm{Sym}_{U}$
\end_inset

 der Permutationen, die die Menge 
\begin_inset Formula $X$
\end_inset

 als ganzes fixieren.
\begin_inset Formula 
\begin{eqnarray*}
\mathrm{Stab}_{U}\left\{ X\right\}  & \coloneqq & \left\{ \pi\in\mathrm{Sym}_{U}\mid\pi X=X\right\} \\
 & = & \bigcup_{\pi\in\mathrm{Sym}_{X}}\left(\pi\cup\mathbf{id}_{U\backslash X}\right)\left(\mathrm{Stab}_{U}\left(X\right)\right)
\end{eqnarray*}

\end_inset


\end_layout

\begin_layout Standard
\begin_inset Separator parbreak
\end_inset


\end_layout

\begin_layout Definition
Die obige Definition wird auf Partitionen 
\begin_inset Formula $\mathcal{P}\in\mathrm{Part}_{U}$
\end_inset

 erweitert:
\end_layout

\begin_layout Definition
Der Punktstabilisator
\series bold
 
\series default
von 
\begin_inset Formula $\mathcal{P}$
\end_inset

 in 
\begin_inset Formula $U$
\end_inset

 sei die Untergruppe 
\begin_inset Formula $\mathrm{Stab}_{U}\left(\mathcal{P}\right)\subseteq\mathrm{Sym}_{U}$
\end_inset

 aller Permutationen, die jede Menge 
\begin_inset Formula $P_{i}\in\mathcal{P}$
\end_inset

 fixieren:
\begin_inset Formula 
\begin{eqnarray*}
\mathrm{Stab}_{U}\left(\mathcal{P}\right) & \coloneqq & \left\{ \pi\in\mathrm{Sym}_{U}\mid\pi P_{i}=P_{i}\,\mathrm{für}\,\mathrm{alle}\,P_{i}\in\mathcal{P}\right\} \\
 & = & \bigcap_{P_{i}\in\mathcal{P}}\mathrm{Stab}_{U}\left\{ P_{i}\right\} 
\end{eqnarray*}

\end_inset


\end_layout

\begin_layout Definition
Der Mengenstabilisator von 
\begin_inset Formula $\mathcal{P}$
\end_inset

 in 
\begin_inset Formula $U$
\end_inset

 sei die Untergruppe 
\begin_inset Formula $\mathrm{Stab}_{U}\left\{ \mathcal{P}\right\} \subseteq\mathrm{Sym}_{U}$
\end_inset

 aller Permutationen, die die Partition als ganzes fixieren: 
\begin_inset Formula 
\begin{eqnarray*}
\mathrm{Stab}_{U}\left\{ \mathcal{P}\right\}  & \coloneqq & \left\{ \pi\in\mathrm{Sym}_{U}\mid\pi\mathcal{P}=\mathcal{P}\right\} 
\end{eqnarray*}

\end_inset

Diese Gruppe wird durch 
\begin_inset Formula $\mathrm{Stab}_{U}\left(\mathcal{P}\right)$
\end_inset

 und alle Permutationen von gleich-mächtigen Elementen von 
\begin_inset Formula $\mathcal{P}$
\end_inset

 erzeugt: Sei 
\begin_inset Formula $\mathcal{P}_{\mid i}\coloneqq\left\{ P_{j}\in\mathcal{P}\mid\left|P_{j}\right|=i\right\} $
\end_inset

 für 
\begin_inset Formula $i\in\left[1,\left|U\right|\right]$
\end_inset

, dann gilt: 
\begin_inset Formula 
\[
\mathrm{Stab}_{U}\left\{ \mathcal{P}\right\} =\bigcup_{\begin{subarray}{c}
i\in\left[1,\left|U\right|\right]\\
\pi\in\mathrm{Sym}_{\mathcal{P}_{\mid i}}
\end{subarray}}\pi\mathrm{Stab}_{U}\left(\mathcal{P}\right)
\]

\end_inset


\end_layout

\begin_layout Definition
Die Feinheit von Partitionen ist äquivalent zu der Teilmengenbeziehung ihrer
 Stabilisatoren.
\end_layout

\begin_layout Proposition
\begin_inset CommandInset label
LatexCommand label
name "prop:feinheit-stab"

\end_inset

Für zwei Partitionen 
\begin_inset Formula $\mathcal{P},\mathcal{P}'\in\mathrm{Part}_{U}$
\end_inset

 gilt 
\begin_inset Formula $\mathcal{P}\preceq\mathcal{P}'$
\end_inset

 genau dann wenn 
\begin_inset Formula $\mathrm{Stab}_{U}\left(\mathcal{P}\right)\subseteq\mathrm{Stab}_{U}\left(\mathcal{P}'\right)$
\end_inset

.
\end_layout

\begin_layout Proof
Sei 
\begin_inset Formula $\pi\in\mathrm{Stab}_{U}\left(\mathcal{P}\right)$
\end_inset

 beliebig, so besteht 
\begin_inset Formula $\pi$
\end_inset

 aus einer Folge von Transpositionen:
\begin_inset Formula 
\[
\pi=\left(u_{1}v_{1}\right)\circ\cdots\circ\left(u_{k}v_{k}\right)
\]

\end_inset


\end_layout

\begin_layout Proof
Jede Transposition 
\begin_inset Formula $\left(u_{i}v_{i}\right)$
\end_inset

 vertauscht Elemente einer Menge 
\begin_inset Formula $P_{i}\in\mathcal{P}$
\end_inset

; daher gilt 
\begin_inset Formula $u_{i}\sim_{\mathcal{P}}v_{i}$
\end_inset

.
 Per Definition 
\begin_inset CommandInset ref
LatexCommand ref
reference "def:feinheit"

\end_inset

 gilt 
\begin_inset Formula $\left(\sim_{\mathcal{P}}\right)\subseteq\left(\sim_{\mathcal{P}'}\right)$
\end_inset

, und daher 
\begin_inset Formula $u_{i}\sim_{\mathcal{P}'}v_{i}$
\end_inset

 und 
\begin_inset Formula $\left(u_{i}v_{i}\right)\in\mathrm{Stab}_{U}\left(\mathcal{P}'\right)$
\end_inset

 für alle 
\begin_inset Formula $i\in\left[1,k\right]$
\end_inset

.
 Aus der Abgeschlossenheit des Stabilisators folgt 
\begin_inset Formula $\pi\in\mathrm{Stab}_{U}\left(\mathcal{P}'\right)$
\end_inset

.
\end_layout

\begin_layout Proof
Umgekehrt impliziert auch 
\begin_inset Formula $\mathrm{Stab}_{U}\left(\mathcal{P}\right)\subseteq\mathrm{Stab}_{U}\left(\mathcal{P}'\right)$
\end_inset

, dass für jedes Paar 
\begin_inset Formula $u\sim_{\mathcal{P}}v$
\end_inset

 die Transposition 
\begin_inset Formula $\left(uv\right)\in\mathrm{Stab}_{U}\left(\mathcal{P}\right)$
\end_inset

 auch in 
\begin_inset Formula $\mathrm{Stab}_{U}\left(\mathcal{P}'\right)$
\end_inset

 enthalten ist, und daher 
\begin_inset Formula $u\sim_{\mathcal{P}'}v$
\end_inset

 gilt.
 Aus 
\begin_inset Formula $\left(\sim_{\mathcal{P}}\right)\subseteq\left(\sim_{\mathcal{P}'}\right)$
\end_inset

 folgt 
\begin_inset Formula $\mathcal{P}\preceq\mathcal{P}'$
\end_inset

.
\end_layout

\begin_layout Section
Träger
\end_layout

\begin_layout Subsection
Trägerpartitionen einer Permutationsgruppe
\end_layout

\begin_layout Definition
\begin_inset CommandInset label
LatexCommand label
name "def:traeger"

\end_inset

Sei 
\begin_inset Formula $G\subseteq\mathrm{\mathrm{Sym}}_{U}$
\end_inset

 eine Untergruppe und 
\begin_inset Formula $\mathcal{P}$
\end_inset

 eine Partition von 
\begin_inset Formula $U$
\end_inset

.
 
\begin_inset Formula $\mathcal{P}$
\end_inset

 sei eine 
\series bold
Trägerpartition
\series default
 von
\series bold
 
\series default

\begin_inset Formula $G$
\end_inset

 genau dann wenn 
\begin_inset Formula $\mathrm{Stab}_{U}\left(\mathcal{P}\right)\subseteq G$
\end_inset

.
\end_layout

\begin_layout Standard
Wenn die Partition 
\begin_inset Formula $\mathcal{P}$
\end_inset

 eine Trägerpartition von 
\begin_inset Formula $G$
\end_inset

 ist, dann ist sie es auch von jeder Obermenge 
\begin_inset Formula $G'\supseteq G$
\end_inset

.
 Außerdem sind per Satz 
\begin_inset CommandInset ref
LatexCommand ref
reference "prop:feinheit-stab"

\end_inset

 alle feineren 
\begin_inset Formula $\mathcal{P}'\preceq\mathcal{P}$
\end_inset

 Trägerpartitionen von 
\begin_inset Formula $G$
\end_inset

.
 Somit ist 
\begin_inset Formula $\mathcal{P}_{\min}=\left\{ \left\{ u_{1}\right\} ,\cdots,\left\{ u_{n}\right\} \right\} $
\end_inset

 mit 
\begin_inset Formula $\mathrm{Stab}_{U}\left(\mathcal{P}_{\min}\right)=\left\{ \mathbf{id}\right\} $
\end_inset

 eine triviale Trägerpartition jeder Untergruppe 
\begin_inset Formula $G\subseteq\mathrm{Sym}_{U}$
\end_inset

, und alle 
\begin_inset Formula $\mathcal{P}\in\mathrm{Part}_{U}$
\end_inset

 sind Trägerpartitionen der Gruppe 
\begin_inset Formula $\mathrm{Sym}_{U}=\mathrm{Stab}_{U}\left(\mathcal{P}_{\max}\right)$
\end_inset

.
\end_layout

\begin_layout Proposition
\begin_inset CommandInset label
LatexCommand label
name "prop:traeger-abschluss"

\end_inset

Wenn 
\begin_inset Formula $\mathcal{A}$
\end_inset

 und 
\begin_inset Formula $\mathcal{B}$
\end_inset

 Trägerpartitionen von 
\begin_inset Formula $G$
\end_inset

 sind, so sind es auch 
\begin_inset Formula $\mathcal{A}\sqcap\mathcal{B}$
\end_inset

 und 
\begin_inset Formula $\mathcal{A}\sqcup\mathcal{B}$
\end_inset

.
\end_layout

\begin_layout Proof
Per Definition ist 
\begin_inset Formula $\mathcal{A}\sqcap\mathcal{B}\preceq\mathcal{A}$
\end_inset

 und 
\begin_inset Formula $\mathcal{A}\sqcap\mathcal{B}\preceq\mathcal{B}$
\end_inset

, und daher folgt die Tatsache direkt aus Satz 
\begin_inset CommandInset ref
LatexCommand ref
reference "prop:feinheit-stab"

\end_inset

.
\end_layout

\begin_layout Proof
Für 
\begin_inset Formula $\mathcal{P}\coloneqq\mathcal{A}\sqcup\mathcal{B}$
\end_inset

 gilt:
\begin_inset Separator latexpar
\end_inset


\end_layout

\begin_deeper
\begin_layout Enumerate
Jede Permutation 
\begin_inset Formula $\pi\in\mathrm{Stab}_{U}\left(\mathcal{P}\right)$
\end_inset

 ist eine Folge von Transpositionen 
\begin_inset Formula $\pi=\left(u_{1}v_{1}\right)\circ\cdots\circ\left(u_{k}v_{k}\right)$
\end_inset

, so dass wir nur Transpositionen betrachten müssen.
\end_layout

\begin_layout Enumerate
Die Äquivalenzrelation 
\begin_inset Formula $\sim_{\mathcal{P}}$
\end_inset

 ist per Satz 
\begin_inset CommandInset ref
LatexCommand ref
reference "prop:part-eq"

\end_inset

 die transitive Hülle von 
\begin_inset Formula $\sim\coloneqq\left(\sim_{\mathcal{A}}\cup\sim_{\mathcal{B}}\right)$
\end_inset

.
 Daher existiert für alle 
\begin_inset Formula $u\sim_{\mathcal{P}}v$
\end_inset

 eine Folge von 
\begin_inset Formula $\ell\leqslant\left|U\right|$
\end_inset

 Elementen 
\begin_inset Formula $\bar{w}\in U^{\ell}$
\end_inset

 mit
\begin_inset Formula 
\[
u\sim w_{1}\sim\cdots\sim w_{\ell}\sim v
\]

\end_inset


\end_layout

\end_deeper
\begin_layout Proof
Sei nun 
\begin_inset Formula $\left(uv\right)\in\mathrm{Stab}_{U}\left(\mathcal{P}\right)$
\end_inset

 eine beliebige Transposition.
 
\begin_inset Formula $\left(uv\right)$
\end_inset

 lässt sich mit dem entsprechenden 
\begin_inset Formula $\bar{w}\in\left(U\backslash\left\{ u,v\right\} \right)^{*}$
\end_inset

 in die folgenden Transpositionen zerlegen:
\begin_inset Formula 
\begin{eqnarray*}
\left(uv\right) & = & \left(\begin{array}{c}
u\\
v
\end{array}\left(\begin{array}{c}
w_{i}\\
w_{i}
\end{array}\right)_{1\leqslant i\leqslant\ell}\begin{array}{c}
v\\
u
\end{array}\right)\\
 & = & \left(\begin{array}{c}
w_{1}\\
v
\end{array}\left(\begin{array}{c}
w_{i}\\
w_{i-1}
\end{array}\right)_{1<i\leqslant\ell}\begin{array}{c}
v\\
w_{\ell}
\end{array}\right)\circ\left(\begin{array}{c}
u\\
w_{1}
\end{array}\left(\begin{array}{c}
w_{i}\\
w_{i+1}
\end{array}\right)_{1\leqslant i<\ell}\begin{array}{cc}
w_{\ell} & v\\
v & u
\end{array}\right)\\
 &  & \left(vw_{\ell}\right)\left(w_{\ell}w_{\ell-1}\right)\cdots\left(w_{2}w_{1}\right)\circ\left(uw_{1}\right)\left(w_{1}w_{2}\right)\cdots\left(w_{\ell-1}w_{\ell}\right)\left(w_{\ell}v\right)
\end{eqnarray*}

\end_inset


\end_layout

\begin_layout Proof
Weil 
\begin_inset Formula $\sim=\left(\sim_{\mathcal{A}}\cup\sim_{\mathcal{B}}\right)$
\end_inset

, ist jede der Transpositionen entweder in 
\begin_inset Formula $\mathrm{Stab}_{U}\left(\mathcal{A}\right)$
\end_inset

 oder in 
\begin_inset Formula $\mathrm{Stab}_{U}\left(\mathcal{B}\right)$
\end_inset

 enthalten, und beide sind Teilmengen von 
\begin_inset Formula $G$
\end_inset

.
 Also ist 
\begin_inset Formula $\left(uv\right)\in G$
\end_inset

, und es folgt 
\begin_inset Formula $\mathrm{Stab}_{U}\left(\mathcal{P}\right)\subseteq G$
\end_inset

.
\end_layout

\begin_layout Corollary
Jede Gruppe 
\begin_inset Formula $G\subseteq\mathrm{Sym}_{U}$
\end_inset

 besitzt eine eindeutige gröbste Trägerpartition.
\end_layout

\begin_layout Proof
Angenommen, 
\begin_inset Formula $\mathcal{P}$
\end_inset

 und 
\begin_inset Formula $\mathcal{P}'$
\end_inset

 seien zwei gröbste Trägerpartitionen von 
\begin_inset Formula $G$
\end_inset

.
 Nun ist 
\begin_inset Formula $\mathcal{P}\sqcup\mathcal{P}'$
\end_inset

 nach Lemma 
\begin_inset CommandInset ref
LatexCommand ref
reference "prop:traeger-abschluss"

\end_inset

 ebenfalls eine Trägerpartition von 
\begin_inset Formula $G$
\end_inset

, und es gilt 
\begin_inset Formula $\mathcal{P},\mathcal{P}'\preceq\mathcal{P}\sqcup\mathcal{P}'$
\end_inset

.
\end_layout

\begin_layout Proof
Da aber per Definition 
\begin_inset Formula $\mathcal{P}$
\end_inset

 und 
\begin_inset Formula $\mathcal{P}'$
\end_inset

 aber per Definition gröbste Träger von 
\begin_inset Formula $G$
\end_inset

 sind, muss 
\begin_inset Formula $\mathcal{P}=\mathcal{P}\sqcup\mathcal{P}'=\mathcal{P}'$
\end_inset

 gelten.
\end_layout

\begin_layout Definition
Für jede Gruppe 
\begin_inset Formula $G\subseteq\mathrm{Sym}_{U}$
\end_inset

 sei 
\begin_inset Formula $\mathrm{SP}\left(G\right)$
\end_inset

 der gröbste Träger von 
\begin_inset Formula $G$
\end_inset

.
\end_layout

\begin_layout Standard
Wir betrachten nun die Konjugations-Operation 
\begin_inset Formula $\pi G\pi^{-1}$
\end_inset

 einer Permutation 
\begin_inset Formula $\pi$
\end_inset

 auf einer Untergruppe 
\begin_inset Formula $G\subseteq\mathrm{Sym}_{U}$
\end_inset

, und weisen nach, dass 
\begin_inset Formula $\pi\mathrm{SP}\left(G\right)=\mathrm{SP}\left(\pi G\pi^{-1}\right)$
\end_inset

.
\end_layout

\begin_layout Proposition
\begin_inset CommandInset label
LatexCommand label
name "prop:konjugation"

\end_inset

Wenn eine Partition 
\begin_inset Formula $\mathcal{P}$
\end_inset

 ein Träger einer Gruppe 
\begin_inset Formula $G\subseteq\mathrm{Sym}_{U}$
\end_inset

 ist, dann ist 
\begin_inset Formula $\pi\mathcal{P}$
\end_inset

 ein Träger von 
\begin_inset Formula $\pi G\pi^{-1}$
\end_inset

 für alle 
\begin_inset Formula $\pi\in\mathrm{Sym}_{U}$
\end_inset

.
\end_layout

\begin_layout Proof
Seien 
\begin_inset Formula $\rho\in\mathrm{Stab}_{U}\left(\pi\mathcal{P}\right)$
\end_inset

 und 
\begin_inset Formula $P_{i}\in\mathcal{P}$
\end_inset

 beliebig.
 
\begin_inset Formula $\pi^{-1}\rho\pi$
\end_inset

 fixiert 
\begin_inset Formula $P_{i}$
\end_inset

:
\begin_inset Formula 
\begin{eqnarray*}
\left(\pi^{-1}\rho\pi\right)P_{i} & = & \pi^{-1}\left(\rho\left(\pi P_{i}\right)\right)\\
 & = & \pi^{-1}\pi P_{i}\\
 & = & P_{i}
\end{eqnarray*}

\end_inset


\end_layout

\begin_layout Proof
Daraus folgt 
\begin_inset Formula $\left(\pi^{-1}\rho\pi\right)\in\mathrm{Stab}_{U}\left(\mathcal{P}\right)\subseteq G$
\end_inset

, und schließlich gilt:
\begin_inset Formula 
\begin{eqnarray*}
\rho & = & \left(\pi\pi^{-1}\right)\rho\left(\pi\pi^{-1}\right)\\
 & = & \pi\left(\pi^{-1}\rho\pi\right)\pi^{-1}\\
 & \in & \pi G\pi^{-1}
\end{eqnarray*}

\end_inset


\end_layout

\begin_layout Proof
Damit 
\begin_inset Formula $\pi\mathcal{P}$
\end_inset

 ein Träger der konjugierten Gruppe 
\begin_inset Formula $\pi G\pi^{-1}$
\end_inset

.
\end_layout

\begin_layout Corollary
\begin_inset CommandInset label
LatexCommand label
name "cor:sp-konjugation"

\end_inset

Für jede Gruppe 
\begin_inset Formula $G\subseteq\mathrm{Sym}_{U}$
\end_inset

 und jede Permutation 
\begin_inset Formula $\pi\in\mathrm{Sym}_{U}$
\end_inset

 ist 
\begin_inset Formula $\pi\mathrm{SP}\left(G\right)=\mathrm{SP}\left(\pi G\pi^{-1}\right)$
\end_inset

.
\end_layout

\begin_layout Proof
Nach Lemma 
\begin_inset CommandInset ref
LatexCommand ref
reference "prop:konjugation"

\end_inset

 ist 
\begin_inset Formula $\pi\mathrm{SP}\left(G\right)$
\end_inset

 eine Trägerpartition von 
\begin_inset Formula $\pi G\pi^{-1}$
\end_inset

, und daher gilt 
\begin_inset Formula $\pi\mathrm{SP}\left(G\right)\preceq\mathrm{SP}\left(\pi G\pi^{-1}\right)$
\end_inset

.
\end_layout

\begin_layout Proof
Umgekehrt ist auch 
\begin_inset Formula $\pi^{-1}\mathrm{SP}\left(\pi G\pi^{-1}\right)$
\end_inset

 eine Trägerpartition von 
\begin_inset Formula $\pi^{-1}\pi G\pi\pi^{-1}=G$
\end_inset

.
 Es folgt 
\begin_inset Formula $\pi^{-1}\mathrm{SP}\left(\pi G\pi^{-1}\right)\preceq\mathrm{SP}\left(G\right)$
\end_inset

 und daher 
\begin_inset Formula $\mathrm{SP}\left(\pi G\pi^{-1}\right)\preceq\pi\mathrm{SP}\left(G\right)$
\end_inset

.
\end_layout

\begin_layout Proposition
Jede Gruppe 
\begin_inset Formula $G$
\end_inset

 ist Obermenge des Punkt- und Teilmenge des Mengenstabilisators von 
\begin_inset Formula $\mathrm{SP}\left(G\right)$
\end_inset

:
\begin_inset Formula 
\[
\mathrm{Stab}_{U}\left(\mathrm{SP}\left(G\right)\right)\subseteq G\subseteq\mathrm{Stab}_{U}\left\{ \mathrm{SP}\left(G\right)\right\} 
\]

\end_inset


\end_layout

\begin_layout Proof
Per Definition 
\begin_inset CommandInset ref
LatexCommand ref
reference "def:traeger"

\end_inset

 gilt bereits 
\begin_inset Formula $\mathrm{Stab}_{U}\left(\mathrm{SP}\left(G\right)\right)\subseteq G$
\end_inset

.
\end_layout

\begin_layout Proof
Sei nun 
\begin_inset Formula $\pi\in G$
\end_inset

 beliebig.
 Weil 
\begin_inset Formula $\pi G\pi^{-1}=G$
\end_inset

, folgt nach Korollar 
\begin_inset CommandInset ref
LatexCommand ref
reference "cor:sp-konjugation"

\end_inset

: 
\begin_inset Formula 
\[
\pi\mathrm{SP}\left(G\right)=\mathrm{SP}\left(\pi G\pi^{-1}\right)=\mathrm{SP}\left(G\right)
\]

\end_inset


\end_layout

\begin_layout Proof
Weil 
\begin_inset Formula $\pi$
\end_inset

 die Partition 
\begin_inset Formula $\mathrm{SP}\left(G\right)$
\end_inset

 auf sich selbst abbildet, gilt per Definition 
\begin_inset Formula $\pi\in\mathrm{Stab}_{U}\left\{ \mathrm{SP}\left(G\right)\right\} $
\end_inset

.
\end_layout

\begin_layout Subsection
Trägermengen im Schaltkreis
\end_layout

\begin_layout Standard
Wir erweitern die Begriffe 
\begin_inset Quotes gld
\end_inset

Stabilisator
\begin_inset Quotes grd
\end_inset

 und 
\begin_inset Quotes gld
\end_inset

Träger
\begin_inset Quotes grd
\end_inset

 auf die Gates eines rigiden (Definition 
\begin_inset CommandInset ref
LatexCommand ref
reference "def:rigid"

\end_inset

), symmetrischen Schaltkreises.
 
\begin_inset Formula $\mathcal{C}=\left(G,W,\Sigma,\Omega,U\right)$
\end_inset

.
\end_layout

\begin_layout Definition
Für jedes Gate 
\begin_inset Formula $g\in G$
\end_inset

 sei der Stabilisator von 
\begin_inset Formula $g$
\end_inset

 wie folgt definiert:
\begin_inset Formula 
\[
\mathrm{Stab}_{\mathcal{C}}\left(g\right)\coloneqq\left\{ \pi\in\mathrm{Sym}_{U}\mid\hat{\pi}g=g\right\} 
\]

\end_inset


\end_layout

\begin_layout Definition
Eine Menge 
\begin_inset Formula $X\subseteq U$
\end_inset

 sei eine Trägermenge von 
\begin_inset Formula $g$
\end_inset

, wenn jede Permutation, die die Elemente von 
\begin_inset Formula $X$
\end_inset

 fixiert, einen Automorphismus in 
\begin_inset Formula $\mathcal{C}$
\end_inset

 induziert, der 
\begin_inset Formula $g$
\end_inset

 fixiert: 
\begin_inset Formula 
\[
\mathrm{Stab}_{U}\left(X\right)\subseteq\mathrm{Stab}_{\mathcal{C}}\left(g\right)
\]

\end_inset


\end_layout

\begin_layout Standard
Da für 
\begin_inset Formula $X\subseteq X'$
\end_inset

 offensichtlich 
\begin_inset Formula $\mathrm{Stab}_{U}\left(X'\right)\subseteq\mathrm{Stab}_{U}\left(X\right)$
\end_inset

 gilt (je mehr Elemente fixiert werden, um so weniger Permutationen lassen
 wir zu), ist hier vor allem die kleinste Trägermenge des Gates interessant.
\end_layout

\begin_layout Proposition
Wenn 
\begin_inset Formula $X,X'\subseteq U$
\end_inset

 zwei Trägermengen von 
\begin_inset Formula $g\in G$
\end_inset

 sind, dann ist 
\begin_inset Formula $X\cap X'$
\end_inset

 ebenfalls eine Trägermenge von 
\begin_inset Formula $g$
\end_inset

.
\end_layout

\begin_layout Proof
Sei 
\begin_inset Formula $\mathcal{P}\coloneqq\left\{ \left\{ x\right\} \mid x\in X\right\} \cup\left\{ U\backslash X\right\} $
\end_inset

 und 
\begin_inset Formula $\mathcal{P}'\coloneqq\left\{ \left\{ x\right\} \mid x\in X'\right\} \cup\left\{ U\backslash X'\right\} $
\end_inset

.
 Offensichtlich gilt 
\begin_inset Formula $\mathrm{Stab}_{U}\left(\mathcal{P}\right)=\mathrm{Stab}_{U}\left(X\right)\subseteq\mathrm{Stab}_{\mathcal{C}}\left(g\right)$
\end_inset

 und 
\begin_inset Formula $\mathrm{Stab}_{U}\left(\mathcal{P}'\right)=\mathrm{Stab}_{U}\left(X'\right)\subseteq\mathrm{Stab}_{\mathcal{C}}\left(g\right)$
\end_inset

.
\end_layout

\begin_layout Proof
Daher sind 
\begin_inset Formula $\mathcal{P}$
\end_inset

 und 
\begin_inset Formula $\mathcal{P}'$
\end_inset

 beide Trägerpartitionen von 
\begin_inset Formula $\mathrm{Stab}_{\mathcal{C}}\left(g\right)$
\end_inset

.
 Per Satz 
\begin_inset CommandInset ref
LatexCommand ref
reference "prop:traeger-abschluss"

\end_inset

 ist auch 
\begin_inset Formula $\mathcal{P}\sqcup\mathcal{P}'=\left\{ \left\{ x\right\} \mid x\in X\cap X'\right\} \cup\left\{ U\backslash\left(X\cap X'\right)\right\} $
\end_inset

 eine Trägerpartition, und per 
\begin_inset Formula $\mathrm{Stab}_{U}\left(\mathcal{P}\sqcup\mathcal{P}'\right)=\mathrm{Stab}_{U}\left(X\cap X'\right)$
\end_inset

 ist auch 
\begin_inset Formula $X\cap X'$
\end_inset

 eine Trägermenge von 
\begin_inset Formula $g$
\end_inset

.
\end_layout

\begin_layout Corollary
Jedes Gate 
\begin_inset Formula $g\in G$
\end_inset

 besitzt eine eindeutige kleinste Trägermenge.
\end_layout

\begin_layout Proposition
Sei 
\begin_inset Formula $\mathcal{P}\coloneqq\mathrm{SP}\left(\mathrm{Stab}_{\mathcal{C}}\left(g\right)\right)$
\end_inset

 die gröbste Trägerpartition des Stabilisators eines Gates 
\begin_inset Formula $g$
\end_inset

, und sei 
\begin_inset Formula $P_{\max}=\max_{\left|\cdot\right|}\mathcal{P}$
\end_inset

.
 Dann ist 
\begin_inset Formula $X\coloneqq U\backslash P_{\max}$
\end_inset

 die kleinste Trägermenge von 
\begin_inset Formula $g$
\end_inset

.
\end_layout

\begin_layout Proof
Sei 
\begin_inset Formula $X'$
\end_inset

 mit 
\begin_inset Formula $\left|X'\right|<\left|X\right|$
\end_inset

 eine kleinere Trägermenge von 
\begin_inset Formula $g$
\end_inset

.
 Per Definition ist 
\begin_inset Formula $\mathcal{P}'\coloneqq\left\{ \left\{ x\right\} \mid x\in X'\right\} \cup\left\{ U\backslash X'\right\} $
\end_inset

 eine Trägerpartition von 
\begin_inset Formula $\mathrm{Stab}_{\mathcal{C}}\left(g\right)$
\end_inset

, denn 
\begin_inset Formula $\mathrm{Stab}_{U}\left(\mathcal{P}'\right)=\mathrm{Stab}_{U}\left(X'\right)\subseteq\mathrm{Stab}_{\mathcal{C}}\left(g\right)$
\end_inset

.
\end_layout

\begin_layout Proof
Per Definition ist 
\begin_inset Formula $U\backslash X=P_{\max}$
\end_inset

 eine größte Menge in 
\begin_inset Formula $\mathrm{SP}\left(\mathrm{Stab}_{\mathcal{C}}\left(g\right)\right)$
\end_inset

.
 Per Annahme ist 
\begin_inset Formula $\left|X'\right|<\left|X\right|$
\end_inset

 und daher 
\begin_inset Formula $\left|U\backslash X'\right|>\left|U\backslash X\right|$
\end_inset

.
 Weil aber 
\begin_inset Formula $\mathcal{P}'\preceq\mathrm{SP}\left(\mathrm{Stab}_{\mathcal{C}}\left(g\right)\right)$
\end_inset

 ist, muss 
\begin_inset Formula $\mathrm{SP}\left(\mathrm{Stab}_{\mathcal{C}}\left(g\right)\right)$
\end_inset

 eine Obermenge von 
\begin_inset Formula $U\backslash X'$
\end_inset

 als Element enthalten, und deren Größe ist mindestens 
\begin_inset Formula $\left|U\backslash X'\right|>\left|U\backslash X\right|$
\end_inset

; es entsteht ein Widerspruch.
\end_layout

\begin_layout Definition
Sei 
\begin_inset Formula $\mathrm{sp}\left(g\right)$
\end_inset

 die kleinste Trägermenge von 
\begin_inset Formula $g$
\end_inset

, und sei 
\begin_inset Formula $\mathrm{sp}\left(\mathcal{C}\right)=\max_{g\in G}\left|\mathrm{sp}\left(g\right)\right|$
\end_inset

 die maximale Größe aller kleinsten Trägermengen.
\end_layout

\begin_layout Section
Obere Schranken für die Größe von Trägern
\end_layout

\begin_layout Standard
Das Ergebnis von Anderson und Dawar beruht auf einem Theorem, das eine konstante
 obere Schranke 
\begin_inset Formula $\mathrm{S}\left(\mathcal{C}_{n}\right)\in\mathcal{O}\left(1\right)$
\end_inset

 für jede symmetrischen Schaltkreisfamilie 
\begin_inset Formula $\left(\mathcal{C}_{n}\right)_{n\in\mathbb{N}}$
\end_inset

 polynomieller Größe nachweist.
 Diese konstante Größe führt zu einer polynomiell beschränkten Anzahl von
 Permutationen 
\begin_inset Formula $\left|\mathrm{Sym}_{\mathrm{S}\left(g\right)}\right|=\left|\mathrm{S}\left(g\right)\right|!\leqslant n^{\left|S\left(g\right)\right|}$
\end_inset

 jeder Trägermenge eines Gates.
\end_layout

\begin_layout Standard
Wir stellen hierfür das sogenannte Support-Theorem vor:
\end_layout

\begin_layout Theorem

\series bold
\begin_inset CommandInset label
LatexCommand label
name "thm:Support-Theorem"

\end_inset

Support-Theorem
\series default
 (Theorem 21 aus 
\begin_inset CommandInset citation
LatexCommand cite
key "AD2014"

\end_inset

)
\end_layout

\begin_layout Theorem
Für 
\begin_inset Formula $\epsilon\in\mathbb{R}_{\left[\frac{2}{3},1\right]}$
\end_inset

 und einen rigiden symmetrischen Schaltkreis 
\begin_inset Formula $\mathcal{C}=\left(G,W,\Sigma,\Omega,U\right)$
\end_inset

 mit 
\begin_inset Formula $\left|U\right|>2^{\frac{56}{\epsilon^{2}}}$
\end_inset

, gilt: Wenn die maximalen Orbit-Größe mit 
\begin_inset Formula $s\coloneqq\max_{g\in G}\mathrm{Orb}_{\mathcal{C}}\left(g\right)\leqslant2^{n^{1-\epsilon}}$
\end_inset

 subexponentiell ist, dann ist 
\begin_inset Formula $\mathrm{sp}\left(\mathcal{C}\right)\leqslant\frac{33}{\epsilon}\frac{\log s}{\log n}$
\end_inset

.
\end_layout

\begin_layout Corollary
\begin_inset CommandInset label
LatexCommand label
name "cor:korollar-23"

\end_inset

(Korollar 23 aus 
\begin_inset CommandInset citation
LatexCommand cite
key "AD2014"

\end_inset

)
\end_layout

\begin_layout Corollary
Für jede symmetrische, rigide 
\begin_inset Formula $\left(\sigma,\mathbb{B}\right)$
\end_inset

-Schaltkreisfamilie mit 
\begin_inset Formula $\mathrm{poly}\left(n\right)$
\end_inset

-Größe gilt 
\begin_inset Formula $\mathrm{sp}\left(\mathcal{C}_{n}\right)\in\mathcal{O}\left(1\right)$
\end_inset

.
\end_layout

\begin_layout Proof
Die 
\begin_inset Formula $\mathrm{poly}\left(n\right)$
\end_inset

-Größe des Schaltkreises 
\begin_inset Formula $\mathcal{C}_{n}=\left(G,W,\Sigma,\Omega,U\right)$
\end_inset

 impliziert für jedes 
\begin_inset Formula $\epsilon<1$
\end_inset

 und hinreichend große 
\begin_inset Formula $n\in\mathbb{N}$
\end_inset

 offensichtlich: 
\begin_inset Formula 
\[
s\coloneqq\max_{g\in G}\mathrm{Orb}_{\mathcal{C}}\left(g\right)\leqslant\left|\mathcal{C}_{n}\right|\leqslant n^{c}<2^{n^{1-\epsilon}}
\]

\end_inset

Damit ist 
\begin_inset Formula $\mathrm{sp}\left(\mathcal{C}\right)\leqslant\frac{33}{\epsilon}\frac{\log s}{\log n}\leqslant\frac{33}{\epsilon}\frac{k\log n}{\log n}=\frac{33k}{\epsilon}\in\mathcal{O}\left(1\right)$
\end_inset

.
 
\end_layout

\begin_layout Chapter
Von Schaltkreisfamilien zu Formeln
\end_layout

\begin_layout Section
Berechnung von rigiden Schaltkreisen
\end_layout

\begin_layout Standard
Um die Eindeutigkeit der im symmetrischen Schaltkreis induzierten Automorphismen
 zu gewährleisten, wird nun gefordert, dass der Schaltkreis 
\emph on
rigide 
\emph default
gemäß Definition 
\begin_inset CommandInset ref
LatexCommand ref
reference "def:rigid"

\end_inset

 ist.
\end_layout

\begin_layout Standard
Die Rigidität kann nicht in jeder booleschen Basis 
\begin_inset Formula $\mathbb{B}$
\end_inset

 problemlos hergestellt werden, ohne die Tiefe zu verändern - während redundante
 Vorgänger von 
\begin_inset Formula $\mathtt{AND}$
\end_inset

- und 
\begin_inset Formula $\mathtt{OR}$
\end_inset

-Gates ohne Beschränkung der Annahme entfernt werden können, ist dies zum
 Beispiel bei 
\begin_inset Formula $\mathtt{MAJ}$
\end_inset

- und 
\begin_inset Formula $\mathtt{XOR}$
\end_inset

-Gates nicht möglich.
\end_layout

\begin_layout Standard
In 
\begin_inset CommandInset citation
LatexCommand cite
key "AD2014"

\end_inset

 werden redundante Gates 
\begin_inset Formula $H=\left(g_{1},\cdots,g_{k}\right)$
\end_inset

 
\begin_inset Quotes gld
\end_inset

in Reihe
\begin_inset Quotes grd
\end_inset

 geschaltet, so dass jedes Gate 
\begin_inset Formula $g_{i}\in H\backslash\left\{ g_{1}\right\} $
\end_inset

 durch ein 
\begin_inset Formula $\mathtt{AND}$
\end_inset

-Gate mit dem Vorgänger 
\begin_inset Formula $g_{i-1}$
\end_inset

 ersetzt wird.
 Dies vergrößert jedoch die Tiefe des Schaltkreises unbeschränkt.
\end_layout

\begin_layout Standard
Um die Tiefe als Parameter zu erhalten, werden wir stattdessen die Definition
 des Schaltkreises auf Multigraphen erweitern:
\end_layout

\begin_layout Definition

\series bold
Multimenge
\end_layout

\begin_layout Definition
Eine Multimenge 
\begin_inset Formula $\mathcal{W}:W\rightarrow\mathbb{N}$
\end_inset

 sei eine Abbildung einer Menge auf 
\begin_inset Formula $\mathbb{N}$
\end_inset

, wobei 
\begin_inset Formula $\mathcal{W}\left(x\right)$
\end_inset

 die Vielfachheit von 
\begin_inset Formula $x$
\end_inset

 in 
\begin_inset Formula $\mathcal{W}$
\end_inset

 angibt.
\end_layout

\begin_layout Standard
Nach der in Definition 
\begin_inset CommandInset ref
LatexCommand ref
reference "def:relation"

\end_inset

 eingeführten Notation entspricht für eine gewöhnliche Relation 
\begin_inset Formula $W\subseteq G^{2}$
\end_inset

 die Funktion 
\begin_inset Formula $\left[W\right]:G^{2}\rightarrow\left\{ 0,1\right\} $
\end_inset

 gerade der äquivalenten Multimenge.
 Die Größe der Multimenge 
\begin_inset Formula $\left|\mathcal{W}\right|\coloneqq\sum_{w\in\mathcal{W}}\mathcal{W}\left(x\right)$
\end_inset

 sei die Summe der Vielfachheiten aller Elemente.
\end_layout

\begin_layout Definition

\series bold
Multischaltkreis
\end_layout

\begin_layout Definition
Ein 
\begin_inset Formula $\left(\sigma,\mathbb{B}_{\mathrm{std}}\right)$
\end_inset

-Multischaltkreis 
\begin_inset Formula $\mathcal{C}=\left(G,\mathcal{W},\Sigma,\Omega,U\right)$
\end_inset

 ist analog zum 
\begin_inset Formula $\left(\sigma,\mathbb{B}\right)$
\end_inset

-Schaltkreis definiert, aber 
\begin_inset Formula $\left(G,\mathcal{W}\right)$
\end_inset

 bildet einen azyklischen Multigraphen:
\begin_inset Formula 
\[
\mathcal{W}:G\times G\rightarrow\mathbb{N}
\]

\end_inset


\end_layout

\begin_layout Definition
Formal beschreiben wir den Multischaltkreis durch eine 
\begin_inset Formula $\tau_{\sigma,\mathbb{B},k}$
\end_inset

-Struktur 
\begin_inset Formula $\mathcal{C}$
\end_inset

 über einem Universum 
\begin_inset Formula $G\uplus U\uplus\left[0,\left|\mathcal{W}\right|\right]$
\end_inset

 ausgewertet:
\begin_inset Formula 
\begin{eqnarray*}
\tau_{\sigma,\mathbb{B},k}' & \coloneqq & \left\{ W/3,\left(\Sigma_{s}/1\right)_{s\in\mathbb{B}\uplus\left\{ \mathbf{0},\mathbf{1},\mathtt{NOT}\right\} },\left(\Sigma_{R}/1+k\right)_{R/k\in\sigma},\Omega/k+1\right\} \\
\mathrm{ar}\left(W\right) & \coloneqq & 3\\
W^{\mathcal{C}} & = & \left\{ \left(g,g',n\right)\in G^{2}\times\left[0,\left|\mathcal{W}\right|\right]\mid\mathcal{W}\left(g,g'\right)=n\right\} 
\end{eqnarray*}

\end_inset


\end_layout

\begin_layout Definition
Für die Auswertung eines internen Gates gilt analog zu 
\begin_inset CommandInset ref
LatexCommand ref
reference "def:circuit-eval"

\end_inset

:
\begin_inset Formula 
\begin{eqnarray*}
j_{1} & \coloneqq & \sum_{h\in G}\left(\mathcal{C}\left[\mathfrak{A}\right]\left(h\right)\cdot\mathcal{W}\left(h,g\right)\right)\\
j_{0} & \coloneqq & \sum_{h\in G}\mathcal{W}\left(h,g\right)-j_{1}\\
\mathcal{C}\left[\mathfrak{A}\right]\left(g\right) & \coloneqq & \left[\Sigma\left(g\right)\right]\left(j_{0},j_{1}\right)
\end{eqnarray*}

\end_inset


\end_layout

\begin_layout Standard
Die Größe 
\begin_inset Formula $\left|\mathcal{C}\right|$
\end_inset

 eines Multischaltkreises 
\begin_inset Formula $\mathcal{C}$
\end_inset

 sei die Summe seiner Gates und Kanten:
\begin_inset Formula 
\[
\left|\mathcal{C}\right|\coloneqq\left|G\right|+\sum_{g,g'\in G^{2}}\mathcal{W}\left(g,g'\right)
\]

\end_inset


\end_layout

\begin_layout Standard
Die Symmetrie wird auf natürliche Weise angepasst: Der von 
\begin_inset Formula $\pi$
\end_inset

 induzierte Automorphismus 
\begin_inset Formula $\hat{\pi}\in\mathrm{Aut}_{\mathcal{C}}$
\end_inset

 bildet 
\begin_inset Formula $\left(G,\mathcal{W}\right)$
\end_inset

 auf den isomorphen Multigraphen 
\begin_inset Formula $\left(\hat{\pi}G,\hat{\pi}\mathcal{W}\right)$
\end_inset

 mit 
\begin_inset Formula $\mathcal{W}\left(\hat{\pi}g,\hat{\pi}g'\right)=\mathcal{W}\left(g,g'\right)$
\end_inset

 ab.
\end_layout

\begin_layout Standard
Die Rigidität wird ebenfalls angepasst: Ein rigider Schaltkreis enthält
 keine Gates 
\begin_inset Formula $g,g'$
\end_inset

 mit 
\begin_inset Formula $\Sigma\left(g\right)=\Sigma\left(g'\right)$
\end_inset

 und 
\begin_inset Formula $\mathcal{W}\left(h,g\right)=\mathcal{W}\left(h,g'\right)$
\end_inset

 für alle 
\begin_inset Formula $h\in G$
\end_inset

.
\end_layout

\begin_layout Lemma
\begin_inset CommandInset label
LatexCommand label
name "lem:algo-rigid"

\end_inset

(nach Lemma 24 aus 
\begin_inset CommandInset citation
LatexCommand cite
key "AD2014"

\end_inset

)
\end_layout

\begin_layout Lemma
Es existiert ein Algorithmus, der einen beliebigen 
\begin_inset Formula $\left(\sigma,\mathbb{B}\right)$
\end_inset

-Schaltkreis 
\begin_inset Formula $\mathcal{C}$
\end_inset

 in einen rigiden Multischaltkreis 
\begin_inset Formula $\hat{\mathcal{C}}$
\end_inset

 umwandelt, wobei 
\begin_inset Formula $T\left(\hat{\mathcal{C}}\right)=T\left(\mathcal{C}\right)$
\end_inset

 und 
\begin_inset Formula $\left|\hat{\mathcal{C}}\right|\leqslant\left|\mathcal{C}\right|+\left|\mathcal{C}\right|^{2}$
\end_inset

.
 Der Algorithmus ist 
\begin_inset Formula $\mathrm{poly}\left(\left|G\right|+\left|U\right|\right)$
\end_inset

-zeitbeschränkt.
\end_layout

\begin_layout Proof
Sei 
\begin_inset Formula $\mathcal{C}''=\left(G,W,\Sigma,\Omega,U\right)$
\end_inset

 ein beliebiger 
\begin_inset Formula $k$
\end_inset

-stelliger Schaltkreis.
 Wir erzeugen zunächst den äquivalenten Multischaltkreis 
\begin_inset Formula $\mathcal{C}\coloneqq\left(G,\mathcal{W},\Sigma,\Omega,U\right)$
\end_inset

 mit 
\begin_inset Formula $\mathcal{W}\coloneqq\left[W\right]$
\end_inset

, wobei die Tiefe unverändert bleibt und die Größe zu 
\begin_inset Formula $\left|\mathcal{C}\right|=\left|G\right|+\left|W\right|\leqslant\left|\mathcal{C}''\right|+\left|\mathcal{C}''\right|^{2}$
\end_inset

 wird.
\end_layout

\begin_layout Proof
Der Multischaltkreis 
\begin_inset Formula $\mathcal{C}$
\end_inset

 wird nun wiederholt reduziert, bis er rigide ist: Berechne dazu die Äquivalenzr
elation 
\begin_inset Formula $\sim_{\mathcal{C}}\subseteq G\times G$
\end_inset

, so dass 
\begin_inset Formula $g\sim_{\mathcal{C}}g'$
\end_inset

 genau dann wenn
\begin_inset Separator latexpar
\end_inset


\end_layout

\begin_deeper
\begin_layout Enumerate
\begin_inset Formula $\Sigma\left(g\right)=\Sigma\left(g'\right)$
\end_inset

, und
\end_layout

\begin_layout Enumerate
für alle 
\begin_inset Formula $h\in W$
\end_inset

 gilt 
\begin_inset Formula $\mathcal{W}\left(h,g\right)=\mathcal{W}\left(h,g'\right)$
\end_inset

.
\end_layout

\end_deeper
\begin_layout Proof
Wenn keine Gates 
\begin_inset Formula $g,g'\in G$
\end_inset

 mit 
\begin_inset Formula $g\sim_{\mathcal{C}}g'$
\end_inset

 mehr existieren, so ist der Schaltkreis rigide, und der Algorithmus ist
 fertig.
\end_layout

\begin_layout Proof
Ansonsten sei 
\begin_inset Formula $E\subseteq G$
\end_inset

 eine Äquivalenzklasse von 
\begin_inset Formula $\sim_{\mathcal{C}}$
\end_inset

 mit mindestens zwei Gates und minimaler Tiefe 
\begin_inset Formula $T\left(E\right)$
\end_inset

.
 
\end_layout

\begin_layout Proof
Wir berechnen die Funktion 
\begin_inset Formula $c:G\rightarrow\left[0,\left|E\right|\right]$
\end_inset

, die für jedes Gate 
\begin_inset Formula $h\in G$
\end_inset

 die Vorgänger in 
\begin_inset Formula $E$
\end_inset

 zählt:
\begin_inset Formula 
\[
c\left(h\right)\coloneqq\sum_{g'\in E}\mathcal{W}\left(g',h\right)
\]

\end_inset


\end_layout

\begin_layout Proof
Sei 
\begin_inset Formula $g\in E$
\end_inset

 beliebig, und sei 
\begin_inset Formula $f_{g,E}\left(\mathcal{C}\right)\coloneqq\left(G',\mathcal{W}',\Sigma',\Omega',U\right)$
\end_inset

 der folgende Multischaltkreis:
\begin_inset Formula 
\begin{eqnarray*}
G' & \coloneqq & G\backslash\left(E\backslash\left\{ g\right\} \right)\\
\Sigma' & \coloneqq & \Sigma_{\backslash E\backslash\left\{ g\right\} }
\end{eqnarray*}

\end_inset


\begin_inset Separator latexpar
\end_inset


\end_layout

\begin_deeper
\begin_layout Enumerate
Es werden die eingehenden Kanten der Gates 
\begin_inset Formula $E\backslash\left\{ g\right\} $
\end_inset

 entfernt.
 Außerdem werden die von 
\begin_inset Formula $E$
\end_inset

 ausgehenden Kanten entfernt und durch Kanten von 
\begin_inset Formula $g$
\end_inset

 ersetzt:
\begin_inset Formula 
\[
\mathcal{W}'\left(h,i\right)\coloneqq\begin{cases}
c\left(i\right) & \mathrm{falls}\,h=g\\
0 & \mathrm{falls}\,h\in E\backslash\left\{ g\right\} \\
0 & \mathrm{falls}\,i\in E\backslash\left\{ g\right\} \\
\mathcal{W}\left(h,i\right) & \mathrm{sonst}
\end{cases}
\]

\end_inset


\end_layout

\begin_layout Enumerate
Die Output-Funktion wird wie folgt angepasst:
\begin_inset Formula 
\[
\Omega'\left(\bar{t}\right)\coloneqq\begin{cases}
g & \mathrm{falls}\,\Omega\left(t\right)\in E\backslash\left\{ g\right\} \\
\Omega\left(t\right) & \mathrm{sonst}
\end{cases}
\]

\end_inset


\end_layout

\end_deeper
\begin_layout Proof
Der Schaltkreis 
\begin_inset Formula $\mathcal{C}'\coloneqq f_{g,E}\left(\mathcal{C}\right)$
\end_inset

 ist äquivalent zu dem Schaltkreis 
\begin_inset Formula $\mathcal{C}$
\end_inset

 über jeder Struktur 
\begin_inset Formula $\mathfrak{A}\in\mathbf{FIN}^{U}\left(\sigma\right)$
\end_inset

, was induktiv über die Tiefe (ausgehend von 
\begin_inset Formula $g$
\end_inset

) nachgewiesen wird:
\begin_inset Separator latexpar
\end_inset


\end_layout

\begin_deeper
\begin_layout Enumerate
Offensichtlich gilt 
\begin_inset Formula $\mathcal{C}'\left[\mathfrak{A}\right]\left(g\right)=\mathcal{C}\left[\mathfrak{A}\right]\left(g\right)=\mathcal{C}\left[\mathfrak{A}\right]\left(g'\right)$
\end_inset

 für alle 
\begin_inset Formula $g'\in E$
\end_inset

, da die Gates die gleichen Vorgänger und die gleiche Beschriftung 
\begin_inset Formula $\Sigma'\left(g\right)=\Sigma\left(g\right)=\Sigma\left(g'\right)$
\end_inset

 besitzen.
\end_layout

\begin_layout Enumerate
Für jeden direkten Nachfolger 
\begin_inset Formula $h\in G$
\end_inset

 eines Gates 
\begin_inset Formula $g'\in E$
\end_inset

 gilt:
\begin_inset Formula 
\begin{eqnarray*}
j_{1} & \coloneqq & \sum_{i\in G'}\mathcal{W}\left(i,h\right)\cdot\mathcal{C}\left[\mathfrak{A}\right]\\
j_{0} & \coloneqq & \sum_{i\in G'}\mathcal{W}\left(i,h\right)-j_{1}\\
j_{1}' & \coloneqq & \sum_{i\in G'}\mathcal{W}'\left(i,h\right)\cdot\mathcal{C}'\left[\mathfrak{A}\right]\\
j_{0}' & \coloneqq & \sum_{i\in G'}\mathcal{W}'\left(i,h\right)-j_{1}'
\end{eqnarray*}

\end_inset

Aus der Definition von 
\begin_inset Formula $\mathcal{W}'$
\end_inset

 folgt 
\begin_inset Formula $j_{1}=j_{1}'$
\end_inset

 und 
\begin_inset Formula $j_{0}=j_{0}'$
\end_inset

, da die 
\begin_inset Formula $c\left(h\right)-1$
\end_inset

 entfernten Vorgänger 
\begin_inset Formula $g'\in E\backslash\left\{ g\right\} $
\end_inset

 durch 
\begin_inset Formula $c\left(h\right)-1$
\end_inset

 zusätzliche 
\begin_inset Formula $\left(g,h\right)$
\end_inset

-Kanten ersetzt wurden, und 
\begin_inset Formula $\mathcal{C}\left[\mathfrak{A}\right]\left(g\right)=\mathcal{C}\left[\mathfrak{A}\right]\left(g'\right)$
\end_inset

.
 Daher gilt: 
\begin_inset Formula 
\begin{eqnarray*}
\mathcal{C}'\left[\mathfrak{A}\right]\left(g\right) & \coloneqq & \left[\Sigma'\left(g\right)\right]\left(j_{0}',j_{1}'\right)\\
 & = & \left[\Sigma\left(g\right)\right]\left(j_{0},j_{1}\right)\\
 & = & \mathcal{C}\left[\mathfrak{A}\right]
\end{eqnarray*}

\end_inset


\end_layout

\begin_layout Enumerate
Für jedes übrige Gate 
\begin_inset Formula $h\in G$
\end_inset

 folgt die Äquivalenz aus der Induktionsannahme und der Tatsache, dass die
 Vorgänger von 
\begin_inset Formula $h$
\end_inset

 unverändert bleiben.
\end_layout

\begin_layout Standard
Für jedes Tupel 
\begin_inset Formula $\bar{t}\in U^{k}$
\end_inset

 mit 
\begin_inset Formula $\Omega\left(\bar{t}\right)=g'\in E$
\end_inset

 gilt nun:
\begin_inset Formula 
\begin{eqnarray*}
\left\llbracket \mathcal{C}'\right\rrbracket \left(\mathfrak{A},\bar{t}\right) & = & \mathcal{C}'\left[\mathfrak{A}\right]\left(\Omega'\left(\bar{t}\right)\right)\\
 & = & \mathcal{C}'\left[\mathfrak{A}\right]\left(g\right)\\
 & = & \mathcal{C}\left[\mathfrak{A}\right]\left(g\right)\\
 & = & \mathcal{C}\left[\mathfrak{A}\right]\left(g'\right)\\
 & = & \mathcal{C}\left[\mathfrak{A}\right]\left(\Omega\left(\bar{t}\right)\right)=\left\llbracket \mathcal{C}\right\rrbracket \left(\mathfrak{A},\bar{t}\right)
\end{eqnarray*}

\end_inset


\end_layout

\begin_layout Description
Größe: Die Umrechnung von 
\begin_inset Formula $\mathcal{C}$
\end_inset

 zu 
\begin_inset Formula $f_{g,E}\left(\mathcal{C}\right)$
\end_inset

 lässt die Tiefe unverändert, und vergrößert den Schaltkreis nicht: Es werden
 
\begin_inset Formula $\sum_{h\in G}c\left(h\right)$
\end_inset

 Kanten eingefügt und mindestens 
\begin_inset Formula $\sum_{g',h'\in E\times G}$
\end_inset

 Kanten entfernt, wobei gilt:
\begin_inset Formula 
\[
\sum_{h\in G}c\left(h\right)=\sum_{h\in G}\sum_{g'\in E}\mathcal{W}\left(g',h\right)=\sum_{g',h'\in E\times G}
\]

\end_inset


\end_layout

\begin_layout Description
Symmetrie: Wenn alle Äquivalenzklassen 
\begin_inset Formula $\bar{E}=\left(E_{1},\cdots,E_{m}\right)$
\end_inset

 der gleichen Tiefe reduziert werden, dann bewahrt der neue Schaltkreis
 
\begin_inset Formula $f_{g_{1,}E_{1}}\cdots f_{g_{m},E_{m}}\left(\mathcal{C}\right)=\mathcal{C}'$
\end_inset

 die Symmetrie von 
\begin_inset Formula $\mathcal{C}$
\end_inset

:
\begin_inset Separator latexpar
\end_inset


\end_layout

\begin_deeper
\begin_layout Standard
Sei 
\begin_inset Formula $\pi\in\mathrm{Sym}_{U}$
\end_inset

 eine beliebige Permutation, und 
\begin_inset Formula $\hat{\pi}$
\end_inset

 ein induzierter Automorphismus.
 Offensichtlich muss 
\begin_inset Formula $\hat{\pi}$
\end_inset

 die Äquivalenzklassen 
\begin_inset Formula $\bar{E}$
\end_inset

 aufeinander abbilden, da 
\begin_inset Formula $\hat{\pi}g\sim_{\mathcal{C}}\hat{\pi}g'$
\end_inset

 für alle 
\begin_inset Formula $g\sim_{\mathcal{C}}g'$
\end_inset

 gilt.
\end_layout

\begin_layout Standard
Der Automorphismus 
\begin_inset Formula $\hat{\pi}$
\end_inset

 auf 
\begin_inset Formula $\mathcal{C}$
\end_inset

 wird wie folgt zu einem auf 
\begin_inset Formula $\mathcal{C}'$
\end_inset

 angepasst:
\begin_inset Formula 
\[
\hat{\pi}'g\coloneqq\begin{cases}
g_{i} & \mathrm{falls}\,\hat{\pi}g\in E_{i}\\
\hat{\pi}g & \mathrm{sonst}
\end{cases}
\]

\end_inset


\end_layout

\begin_layout Standard
Da 
\begin_inset Formula $\mathcal{W}\left(\hat{\pi}g,\hat{\pi}g'\right)=\mathcal{W}\left(g,g'\right)$
\end_inset

, folgt 
\begin_inset Formula $\mathcal{W}'\left(\hat{\pi}g,\hat{\pi}g'\right)$
\end_inset

.
\end_layout

\end_deeper
\end_deeper
\begin_layout Proof
Die Umrechnung von 
\begin_inset Formula $\mathcal{C}$
\end_inset

 zu 
\begin_inset Formula $\mathcal{C}'$
\end_inset

 verkleinert die Äquivalenzklasse des Gates 
\begin_inset Formula $g$
\end_inset

 zu 
\begin_inset Formula $\left\{ g\right\} $
\end_inset

, da alle äquivalenten Gates entfernt werden, und lässt alle anderen Äquivalenzk
lassen der Tiefe 
\begin_inset Formula $i\leqslant T\left(g\right)$
\end_inset

 unverändert.
\end_layout

\begin_layout Proof
Daher haben nach höchstens 
\begin_inset Formula $\left|G\right|$
\end_inset

 Wiederholungen alle Äquivalenzklassen der Tiefe 
\begin_inset Formula $i\leqslant T\left(g\right)$
\end_inset

 die Größe 
\begin_inset Formula $1$
\end_inset

, und nach höchstens 
\begin_inset Formula $T\left(\mathcal{C}\right)\cdot\left|G\right|$
\end_inset

 Wiederholungen wird ein äquivalenter, rigider Schaltkreis erzeugt.
\end_layout

\begin_layout Proposition
Die beschriebene Konstruktion kann mit 
\begin_inset Formula $\mathcal{O}\left(T\left(\mathcal{C}\right)\log n\right)$
\end_inset

 Speicherplatz berechnet werden, und ist für Schaltkreisfamilien konstanter
 Tiefe daher in 
\begin_inset Formula $\mathrm{LOGSPACE}$
\end_inset

.
\end_layout

\begin_layout Proof
Der Algorithmus 
\begin_inset CommandInset ref
LatexCommand ref
reference "alg:rigid"

\end_inset

 gibt die Kanten und Markierungen des rigiden Multischaltkreises aus, wobei
 eine natürliche Ordnung der Gates 
\begin_inset Formula $G$
\end_inset

 vorausgesetzt wird.
\end_layout

\begin_layout Proof
\begin_inset Float algorithm
wide false
sideways false
status open

\begin_layout LyX-Code
Input: 
\begin_inset Formula $\left(G,W,\Sigma,\Omega,U\right)$
\end_inset

.
\end_layout

\begin_layout LyX-Code
Main:
\begin_inset Separator latexpar
\end_inset


\end_layout

\begin_deeper
\begin_layout LyX-Code
Für jedes Gate 
\begin_inset Formula $g\in G$
\end_inset

:
\begin_inset Separator latexpar
\end_inset


\end_layout

\begin_deeper
\begin_layout LyX-Code
Falls kein Gate 
\begin_inset Formula $g'<g$
\end_inset

 mit Equiv(
\begin_inset Formula $g,g'$
\end_inset

) existiert:
\begin_inset Separator latexpar
\end_inset


\end_layout

\begin_deeper
\begin_layout LyX-Code
Rigid(
\begin_inset Formula $g$
\end_inset

).
\end_layout

\end_deeper
\end_deeper
\end_deeper
\begin_layout LyX-Code
Rigid(
\begin_inset Formula $g$
\end_inset

):
\begin_inset Separator latexpar
\end_inset


\end_layout

\begin_deeper
\begin_layout LyX-Code
Gib 
\begin_inset Formula $g$
\end_inset

 und 
\begin_inset Formula $\Sigma\left(g\right)$
\end_inset

 aus.
\end_layout

\begin_layout LyX-Code
Für alle 
\begin_inset Formula $\bar{t}\in U^{k}$
\end_inset

 mit 
\begin_inset Formula $\Omega\left(\bar{t}\right)=g$
\end_inset

:
\begin_inset Separator latexpar
\end_inset


\end_layout

\begin_deeper
\begin_layout LyX-Code
Gib 
\begin_inset Formula $\Omega\left(\bar{t}\right)=g$
\end_inset

 aus.
\end_layout

\end_deeper
\begin_layout LyX-Code
Für jedes Gate 
\begin_inset Formula $h\in G$
\end_inset

:
\begin_inset Separator latexpar
\end_inset


\end_layout

\begin_deeper
\begin_layout LyX-Code
Falls kein Gate 
\begin_inset Formula $h'<h$
\end_inset

 mit Equiv(
\begin_inset Formula $h,h'$
\end_inset

) existiert:
\begin_inset Separator latexpar
\end_inset


\end_layout

\begin_deeper
\begin_layout LyX-Code
\begin_inset Formula $i\leftarrow0$
\end_inset

.
\end_layout

\begin_layout LyX-Code
Für alle Vorgänger 
\begin_inset Formula $h''$
\end_inset

 von 
\begin_inset Formula $g$
\end_inset

 mit Equiv(
\begin_inset Formula $h,h'')$
\end_inset

.
\begin_inset Separator latexpar
\end_inset


\end_layout

\begin_deeper
\begin_layout LyX-Code
\begin_inset Formula $i\leftarrow i+1$
\end_inset

.
\end_layout

\end_deeper
\begin_layout LyX-Code
Gib 
\begin_inset Formula $\mathcal{W}\left(h,g\right)=i$
\end_inset

 aus.
\end_layout

\end_deeper
\end_deeper
\end_deeper
\begin_layout LyX-Code
Equiv(
\begin_inset Formula $g,g'$
\end_inset

):
\begin_inset Separator latexpar
\end_inset


\end_layout

\begin_deeper
\begin_layout LyX-Code
Falls nicht 
\begin_inset Formula $\Sigma\left(g\right)=\Sigma\left(g'\right)$
\end_inset

: 
\begin_inset Formula $\textsc{False}$
\end_inset


\end_layout

\begin_layout LyX-Code
Für jeden Vorgänger 
\begin_inset Formula $h$
\end_inset

 von 
\begin_inset Formula $g$
\end_inset

:
\begin_inset Separator latexpar
\end_inset


\end_layout

\begin_deeper
\begin_layout LyX-Code
\begin_inset Formula $i\leftarrow0$
\end_inset


\end_layout

\begin_layout LyX-Code
Für jeden Vorgänger 
\begin_inset Formula $h'$
\end_inset

 von 
\begin_inset Formula $g$
\end_inset

 mit Equiv(
\begin_inset Formula $h$
\end_inset

,
\begin_inset Formula $h'$
\end_inset

):
\begin_inset Separator latexpar
\end_inset


\end_layout

\begin_deeper
\begin_layout LyX-Code
\begin_inset Formula $i\leftarrow i+1$
\end_inset

.
\end_layout

\end_deeper
\begin_layout LyX-Code
Für jeden Vorgänger 
\begin_inset Formula $h'$
\end_inset

 von 
\begin_inset Formula $g'$
\end_inset

 mit Equiv(
\begin_inset Formula $h,h'$
\end_inset

):
\begin_inset Separator latexpar
\end_inset


\end_layout

\begin_deeper
\begin_layout LyX-Code
\begin_inset Formula $i\leftarrow i-1$
\end_inset


\end_layout

\end_deeper
\begin_layout LyX-Code
Falls 
\begin_inset Formula $i\neq0$
\end_inset

: 
\begin_inset Formula $\textsc{False}$
\end_inset

.
\end_layout

\end_deeper
\begin_layout LyX-Code
\begin_inset Formula $\textsc{True}$
\end_inset


\end_layout

\end_deeper
\begin_layout LyX-Code

\end_layout

\begin_layout Plain Layout
\begin_inset Caption Standard

\begin_layout Plain Layout
\begin_inset CommandInset label
LatexCommand label
name "alg:rigid"

\end_inset

Berechnung des rigiden Schaltkreises
\end_layout

\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Proof
Sei 
\begin_inset Formula $\sim^{*}$
\end_inset

 eine rekursive Erweiterung von 
\begin_inset Formula $\sim$
\end_inset

, die alle Paare von Gates 
\begin_inset Formula $g,g'$
\end_inset

 enthält, die aus jeder Äquivalenzklasse bezüglich 
\begin_inset Formula $\sim^{*}$
\end_inset

 die gleiche Anzahl Vorgänger besitzen.
 Ferner sei 
\begin_inset Formula $\leqslant$
\end_inset

 eine implizite Ordnung der Gates 
\begin_inset Formula $G$
\end_inset

.
 Ein Gate 
\begin_inset Formula $g\in G$
\end_inset

, für das 
\begin_inset Formula $g\not\sim^{*}g'$
\end_inset

 für alle 
\begin_inset Formula $g'<g$
\end_inset

 gilt, nennen wir den Repräsentanten seiner Äquivalenzklasse.
\end_layout

\begin_layout Proof
Der beschriebene Algorithmus wird 
\begin_inset Formula $\mathtt{Rigid}\left(g\right)$
\end_inset

 für jeden Repräsentanten 
\begin_inset Formula $g\in G$
\end_inset

 aufrufen.
 
\begin_inset Formula $\mathtt{Rigid}\left(g\right)$
\end_inset

 gibt dann 
\begin_inset Formula $g$
\end_inset

 mit seinen Markierungen aus, findet dann jeden Repräsentanten 
\begin_inset Formula $h\in G$
\end_inset

, zählt die zu 
\begin_inset Formula $h$
\end_inset

 äquivalenten Vorgänger von 
\begin_inset Formula $g$
\end_inset

 und gibt die entsprechende Multikante 
\begin_inset Formula $\mathcal{W}\left(h,g\right)\in\mathbb{N}$
\end_inset

 aus.
\end_layout

\begin_layout Proof
Da die Funktionen 
\begin_inset Formula $\mathtt{Rigid}$
\end_inset

 und 
\begin_inset Formula $\mathtt{Equiv}$
\end_inset

 jeweils nur konstant viele lokale Variablen der Größe 
\begin_inset Formula $\mathcal{O}\left(\log n\right)$
\end_inset

 verwenden, ist der Algorithmus platzbeschränkt durch 
\begin_inset Formula $T\cdot\mathcal{O}\left(\log n\right)$
\end_inset

, wobei 
\begin_inset Formula $T$
\end_inset

 die maximale Rekursionstiefe von 
\begin_inset Formula $\mathtt{Equiv}$
\end_inset

 ist.
 Weil jeder Aufruf 
\begin_inset Formula $\mathtt{Equiv}\left(g\right)$
\end_inset

 nur Aufrufe 
\begin_inset Formula $\mathtt{Equiv}\left(h,h'\right)$
\end_inset

 für Vorgänger 
\begin_inset Formula $h,h'$
\end_inset

 von 
\begin_inset Formula $g$
\end_inset

 auslöst, ist 
\begin_inset Formula $T=T\left(\mathcal{C}\right)$
\end_inset

 die Tiefe des Schaltkreises 
\begin_inset Formula $\mathcal{C}$
\end_inset

.
\end_layout

\begin_layout Section
Berechnung der Orbits und Träger
\end_layout

\begin_layout Proposition
\begin_inset CommandInset label
LatexCommand label
name "lem:rigide-eindeutig"

\end_inset

(nach Satz 9 aus 
\begin_inset CommandInset citation
LatexCommand cite
key "AD2014"

\end_inset

)
\end_layout

\begin_layout Proposition
Sei 
\begin_inset Formula $\mathcal{C}$
\end_inset

 ein rigider 
\begin_inset Formula $\left(\sigma,\mathbb{B}\right)$
\end_inset

-Multischaltkreis über 
\begin_inset Formula $U$
\end_inset

.
 Sei 
\begin_inset Formula $\pi\in\mathrm{Sym}_{U}$
\end_inset

 beliebig.
\end_layout

\begin_layout Proposition
Falls 
\begin_inset Formula $\pi$
\end_inset

 einen Automorphismus in 
\begin_inset Formula $\mathcal{C}$
\end_inset

 induziert, dann ist dieser eindeutig.
\end_layout

\begin_layout Proof
Sei 
\begin_inset Formula $\mathcal{C}=\left(G,\mathcal{W},\Sigma,\Omega,U\right)$
\end_inset

 und 
\begin_inset Formula $\pi\in\mathrm{Sym}_{U}$
\end_inset

 beliebig.
 Seien 
\begin_inset Formula $\hat{\pi}_{1},\hat{\pi}_{2}\in\mathrm{Aut}_{\mathcal{C}}$
\end_inset

 zwei von 
\begin_inset Formula $\pi$
\end_inset

 induzierte Automorphismen.
\end_layout

\begin_layout Proof
Durch Induktion über die Tiefe wird bewiesen, dass 
\begin_inset Formula $\hat{\pi}_{1}g=\hat{\pi}_{2}g$
\end_inset

 für jedes Gate 
\begin_inset Formula $g\in G$
\end_inset

 gilt.
\begin_inset Separator latexpar
\end_inset


\end_layout

\begin_deeper
\begin_layout Description
Anfang: Wenn 
\begin_inset Formula $g$
\end_inset

 eine Konstante mit 
\begin_inset Formula $\Sigma\left(g\right)\in\left\{ \mathbf{0},\mathbf{1}\right\} $
\end_inset

 ist, dann ist 
\begin_inset Formula $g$
\end_inset

 das einzige Gate mit der Beschriftung 
\begin_inset Formula $\Sigma\left(g\right)$
\end_inset

:
\begin_inset Formula 
\[
\hat{\pi}_{1}g=g=\hat{\pi}_{2}
\]

\end_inset

Wenn 
\begin_inset Formula $g$
\end_inset

 ein relationales Input mit 
\begin_inset Formula $\Sigma\left(g\right)=R\bar{t}$
\end_inset

, 
\begin_inset Formula $R/k\in\sigma$
\end_inset

 und 
\begin_inset Formula $\bar{t}\in U^{k}$
\end_inset

 ist, dann existiert auf Grund der Rigidität nur ein Gate 
\begin_inset Formula $g'\in G$
\end_inset

 mit 
\begin_inset Formula $\Sigma\left(g'\right)=R\pi\bar{t}$
\end_inset

:
\begin_inset Formula 
\[
\hat{\pi}_{1}g=g'=\hat{\pi}_{2}g
\]

\end_inset


\end_layout

\begin_layout Description
Schritt: Wenn 
\begin_inset Formula $g$
\end_inset

 ein internes Gate mit 
\begin_inset Formula $\Sigma\left(g\right)\in\mathbb{B}$
\end_inset

 ist, dann muss gelten:
\begin_inset Formula 
\begin{eqnarray*}
\Sigma\left(\hat{\pi}_{1}g\right) & = & \Sigma\left(\hat{\pi}_{2}g\right)=\Sigma\left(g\right)\\
\mathcal{W}\left(\hat{\pi}_{1}h,\hat{\pi}_{1}g\right) & = & \mathcal{W}\left(\hat{\pi}_{2}h,\hat{\pi}_{2}g\right)=\mathcal{W}\left(h,g\right)\\
 &  & \mathrm{f.a.}\,\,h\in G
\end{eqnarray*}

\end_inset

Auf Grund der Rigidität von 
\begin_inset Formula $\mathcal{C}$
\end_inset

 muss 
\begin_inset Formula $\hat{\pi}_{1}g=\hat{\pi}_{2}g$
\end_inset

 gelten.
\end_layout

\end_deeper
\begin_layout Lemma
\begin_inset CommandInset label
LatexCommand label
name "lem:algo-auto"

\end_inset

(nach Lemma 25 aus 
\begin_inset CommandInset citation
LatexCommand cite
key "AD2014"

\end_inset

)
\end_layout

\begin_layout Lemma
Es existiert ein deterministischer Algorithmus, der bei Eingabe eines 
\begin_inset Formula $\left(\sigma,\mathbb{B}\right)$
\end_inset

-Multischaltkreises 
\begin_inset Formula $\mathcal{C}=\left(G,\mathcal{W},\Sigma,\Omega,U\right)$
\end_inset

 und einer Permutation 
\begin_inset Formula $\pi\in\mathrm{Sym}_{U}$
\end_inset

 in 
\begin_inset Formula $\mathrm{poly}\left(\left|\mathcal{C}\right|\right)$
\end_inset

-Zeit für jedes Gate 
\begin_inset Formula $g\in G$
\end_inset

 das Gate 
\begin_inset Formula $\hat{\pi}g$
\end_inset

 ausgibt, falls 
\begin_inset Formula $\pi$
\end_inset

 einen eindeutigen Automorphismus 
\begin_inset Formula $\hat{\pi}$
\end_inset

 induziert.
\end_layout

\begin_layout Proof
Analog zu dem Beweis von Lemma 
\begin_inset CommandInset ref
LatexCommand ref
reference "lem:rigide-eindeutig"

\end_inset

 wird gezeigt, dass der eindeutige Automorphismus in Polynomialzeit bestimmt
 wird:
\begin_inset Separator latexpar
\end_inset


\end_layout

\begin_deeper
\begin_layout Enumerate
Zunächst sei für jedes konstante Gate 
\begin_inset Formula $\hat{\pi}g\coloneqq g$
\end_inset

.
 Für jedes relationale Input 
\begin_inset Formula $g\in G$
\end_inset

 mit 
\begin_inset Formula $\Sigma\left(g\right)=R\bar{t}$
\end_inset

 finde das einzige Gate 
\begin_inset Formula $g'\in G$
\end_inset

 mit 
\begin_inset Formula $\Sigma\left(g\right)=R\pi\bar{t}$
\end_inset

 und gib 
\begin_inset Formula $\hat{\pi}g\coloneqq g'$
\end_inset

 aus.
\end_layout

\begin_layout Enumerate
Finde ein beliebiges Gate 
\begin_inset Formula $g\in G$
\end_inset

, für dessen Vorgänger 
\begin_inset Formula $h\in G$
\end_inset

 mit 
\begin_inset Formula $\mathcal{W}\left(h,g\right)>0$
\end_inset

 bereits 
\begin_inset Formula $\hat{\pi}h=h'$
\end_inset

 ausgegeben wurde.
\end_layout

\begin_layout Enumerate
Finde ein Gate 
\begin_inset Formula $g'\in G$
\end_inset

 mit 
\begin_inset Formula $\Sigma\left(g\right)=\Sigma\left(g'\right)$
\end_inset

 und 
\begin_inset Formula $\mathcal{W}\left(\hat{\pi}h,g'\right)=\mathcal{W}\left(h,g\right)$
\end_inset

 für die Vorgänger 
\begin_inset Formula $h\in G$
\end_inset

, so dass 
\begin_inset Formula $g'$
\end_inset

 sonst keine Vorgänger hat.
 (Wegen der Rigidität gibt es höchstens eines.) Gib 
\begin_inset Formula $\hat{\pi}g=g'$
\end_inset

 aus.
\end_layout

\begin_layout Enumerate
Wiederhole die Schritte 2 bis 3 solange bis 
\begin_inset Formula $\hat{\pi}$
\end_inset

 für jedes Gate 
\begin_inset Formula $g\in G$
\end_inset

 berechnet wurde.
 (Wenn zu irgendeinem 
\begin_inset Formula $g$
\end_inset

 kein Gate gefunden wird, ist der Schaltkreis nicht symmetrisch und der
 Algorithmus bricht ab.)
\end_layout

\end_deeper
\begin_layout Proof
Die Schritte 2 bis 3 werden höchstens 
\begin_inset Formula $\left|G\right|$
\end_inset

-mal wiederholt, und jeder Schritt erfordert 
\begin_inset Formula $\left|G\right|^{2}$
\end_inset

-Zeit, so dass der Algorithmus in 
\begin_inset Formula $\left|G\right|^{3}$
\end_inset

-Zeit arbeitet.
\end_layout

\begin_layout Proposition
Die obige Konstruktion ist mit 
\begin_inset Formula $\mathcal{O}\left(T\left(\mathcal{C}\right)\log n\right)$
\end_inset

 Speicherplatz berechenbar, und ist für Schaltkreisfamilien konstanter Tiefe
 daher in 
\begin_inset Formula $\mathrm{LOGSPACE}$
\end_inset

.
\end_layout

\begin_layout Proof
Der Algorithmus 
\begin_inset CommandInset ref
LatexCommand ref
reference "alg:aut"

\end_inset

 berechnet den Automorphismus 
\begin_inset Formula $\hat{\pi}$
\end_inset

, in dem für jedes Paar von Gates 
\begin_inset Formula $g,g'$
\end_inset

 rekursiv geprüft wird, ob 
\begin_inset Formula $\hat{\pi}g=\hat{\pi}g'$
\end_inset

.
\end_layout

\begin_layout Proof
Da jede Funktion nur konstant viele lokale Variablen der Größe 
\begin_inset Formula $\mathcal{O}\left(\log\left|G\right|\right)$
\end_inset

 verwendet, ist der Speicherplatz durch die Funktion 
\begin_inset Formula $T\cdot\mathcal{O}\left(\log n\right)$
\end_inset

 beschränkt, wobei 
\begin_inset Formula $T$
\end_inset

 die Rekursionstiefe ist.
 Weil 
\begin_inset Formula $\mathtt{Aut}\left(g,g'\right)$
\end_inset

 nur 
\begin_inset Formula $\mathtt{Aut}\left(h,h'\right)$
\end_inset

 für Vorgänger 
\begin_inset Formula $h$
\end_inset

 von 
\begin_inset Formula $g$
\end_inset

 und 
\begin_inset Formula $h'$
\end_inset

 von 
\begin_inset Formula $g'$
\end_inset

 aufruft, ist 
\begin_inset Formula $T\leqslant T\left(\mathcal{C}\right)$
\end_inset

.
\end_layout

\begin_layout Proof
\begin_inset Float algorithm
wide false
sideways false
status open

\begin_layout LyX-Code
Input: 
\begin_inset Formula $\left(G,W,\Sigma,\Omega,U\right)$
\end_inset

, 
\begin_inset Formula $k$
\end_inset

, 
\begin_inset Formula $\pi$
\end_inset

.
\end_layout

\begin_layout LyX-Code
Main:
\begin_inset Separator latexpar
\end_inset


\end_layout

\begin_deeper
\begin_layout LyX-Code
Für 
\begin_inset Formula $g\in G$
\end_inset

:
\begin_inset Separator latexpar
\end_inset


\end_layout

\begin_deeper
\begin_layout LyX-Code
Für 
\begin_inset Formula $g'\in G$
\end_inset

:
\begin_inset Separator latexpar
\end_inset


\end_layout

\begin_deeper
\begin_layout LyX-Code
\begin_inset Formula $X\leftarrow\textsc{False}$
\end_inset


\end_layout

\begin_layout LyX-Code
Falls Aut(
\begin_inset Formula $g,g'$
\end_inset

):
\begin_inset Separator latexpar
\end_inset


\end_layout

\begin_deeper
\begin_layout LyX-Code
Falls 
\begin_inset Formula $X=\textsc{True}$
\end_inset

: 
\begin_inset Formula $\hat{\pi}$
\end_inset

 ist nicht eindeutig; Abbruch.
\end_layout

\begin_layout LyX-Code
Gib 
\begin_inset Formula $\hat{\pi}\left(g\right)=g'$
\end_inset

 aus.
\end_layout

\begin_layout LyX-Code
\begin_inset Formula $X\leftarrow\textsc{True}$
\end_inset


\end_layout

\end_deeper
\end_deeper
\end_deeper
\end_deeper
\begin_layout LyX-Code
Aut(
\begin_inset Formula $g,g'$
\end_inset

):
\begin_inset Separator latexpar
\end_inset


\end_layout

\begin_deeper
\begin_layout LyX-Code
Falls 
\begin_inset Formula $\Sigma\left(g\right)\neq\Sigma\left(g'\right)\in\mathbb{B}\uplus\left\{ \mathbf{0},\mathbf{1},\mathtt{NOT}\right\} $
\end_inset

: 
\begin_inset Formula $\textsc{False}$
\end_inset


\end_layout

\begin_layout LyX-Code
Falls 
\begin_inset Formula $\Sigma\left(g\right)=R\bar{t}$
\end_inset

, 
\begin_inset Formula $\Sigma\left(g'\right)\neq R\pi\bar{t}$
\end_inset

: 
\begin_inset Formula $\textsc{False}$
\end_inset


\end_layout

\begin_layout LyX-Code
Für 
\begin_inset Formula $\bar{t}\in U^{k}$
\end_inset

:
\begin_inset Separator latexpar
\end_inset


\end_layout

\begin_deeper
\begin_layout LyX-Code
Falls 
\begin_inset Formula $\Omega\left(\bar{t}\right)=g$
\end_inset

 und 
\begin_inset Formula $\Omega\left(\pi\bar{t}\right)\neq g'$
\end_inset

: 
\begin_inset Formula $\textsc{False}$
\end_inset


\end_layout

\end_deeper
\begin_layout LyX-Code
Für jeden Vorgänger 
\begin_inset Formula $h$
\end_inset

 von 
\begin_inset Formula $g$
\end_inset

:
\begin_inset Separator latexpar
\end_inset


\end_layout

\begin_deeper
\begin_layout LyX-Code
Falls kein Vorgänger 
\begin_inset Formula $h'$
\end_inset

 von 
\begin_inset Formula $g'$
\end_inset

 mit Aut(
\begin_inset Formula $h,h'$
\end_inset

) existiert:
\begin_inset Separator latexpar
\end_inset


\end_layout

\begin_deeper
\begin_layout LyX-Code
\begin_inset Formula $\textsc{False}$
\end_inset


\end_layout

\end_deeper
\end_deeper
\begin_layout LyX-Code
\begin_inset Formula $\textsc{True}$
\end_inset


\end_layout

\end_deeper
\begin_layout Plain Layout
\begin_inset Caption Standard

\begin_layout Plain Layout
\begin_inset CommandInset label
LatexCommand label
name "alg:aut"

\end_inset

Berechnung der Automorphismen
\end_layout

\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Lemma
\begin_inset CommandInset label
LatexCommand label
name "lem:algo-orb"

\end_inset

(nach Lemma 26 aus 
\begin_inset CommandInset citation
LatexCommand cite
key "AD2014"

\end_inset

)
\end_layout

\begin_layout Lemma
Es existiert ein deterministischer Algorithmus, der bei Eingabe eines rigiden
 
\begin_inset Formula $\left(\sigma,\mathbb{B}\right)$
\end_inset

-Multischaltkreises 
\begin_inset Formula $\mathcal{C}=\left(G,\mathcal{W},\Sigma,\Omega,U\right)$
\end_inset

 in 
\begin_inset Formula $\mathrm{poly}\left(\left|\mathcal{C}\right|\right)$
\end_inset

 entscheidet, ob dieser symmetrisch ist, und gegebenenfalls die Orbits 
\begin_inset Formula $\mathrm{Orb}_{\mathcal{C}}\left(g\right)$
\end_inset

 und Trägermenge 
\begin_inset Formula $\mathrm{sp}\left(g\right)$
\end_inset

 jedes Gates 
\begin_inset Formula $g\in G$
\end_inset

 ausgibt.
\end_layout

\begin_layout Proof
Um die Symmetrie nachzuweisen, genügt es, den Algorithmus aus Lemma 
\begin_inset CommandInset ref
LatexCommand ref
reference "lem:algo-auto"

\end_inset

 für jede Transposition 
\begin_inset Formula $\left(uv\right)\in\mathrm{Sym}_{U}$
\end_inset

 durchzuführen.
 Diese Transpositionen erzeugen die gesamte Symmetriegruppe 
\begin_inset Formula $\mathrm{Sym}_{U}$
\end_inset

, und daher ist für jede Permutation 
\begin_inset Formula $\pi=\left(u_{1}v_{1}\right)\cdots\left(u_{k}v_{k}\right)\in\mathrm{Sym}_{U}$
\end_inset

 die Abbildung 
\begin_inset Formula $\hat{\pi}=\hat{\pi}_{\left(u_{1}v_{1}\right)}\cdots\hat{\pi}_{\left(u_{k}v_{k}\right)}$
\end_inset

 ein von 
\begin_inset Formula $\pi$
\end_inset

 induzierter Automorphismus.
\begin_inset Separator latexpar
\end_inset


\end_layout

\begin_deeper
\begin_layout Enumerate
Berechne den von 
\begin_inset Formula $\left(uv\right)\in\mathrm{Sym}_{U}$
\end_inset

 induzierten Automorphismus 
\begin_inset Formula $\hat{\pi}_{\left(uv\right)}$
\end_inset

 für jedes Paar 
\begin_inset Formula $u,v\in U$
\end_inset

 mit 
\begin_inset Formula $u\neq v$
\end_inset

.
 Wenn nicht alle Automorphismen existieren, ist der Schaltkreis nicht symmetrisc
h; es wird abgebrochen.
\end_layout

\begin_layout Enumerate
Für jedes Gate 
\begin_inset Formula $g\in G$
\end_inset

 wird die Trägerpartition 
\begin_inset Formula $\mathrm{SP}\left(\mathrm{Stab}_{\mathcal{C}}\left(g\right)\right)$
\end_inset

 aufgebaut, in dem für jede Transposition 
\begin_inset Formula $\left(uv\right)\in\mathrm{Sym}_{U}$
\end_inset

 geprüft wird, ob 
\begin_inset Formula $\hat{\pi}_{\left(uv\right)}$
\end_inset

 das Gate 
\begin_inset Formula $g$
\end_inset

 fixiert.
 In diesem Fall werden die Elemente 
\begin_inset Formula $u,v$
\end_inset

 in der Partition kombiniert: 
\begin_inset Formula 
\begin{eqnarray*}
\mathcal{P}_{\left(uv\right)} & \coloneqq & \left\{ \left\{ u,v\right\} \right\} \cup\left\{ \left\{ w\right\} \mid w\in U\backslash\left\{ u,v\right\} \right\} \\
\mathcal{P}_{g} & \coloneqq & \bigsqcup_{\begin{subarray}{c}
\left(uv\right)\in\mathrm{Sym}_{U}\\
\hat{\pi}_{\left(uv\right)}g=g
\end{subarray}}\mathcal{P}_{\left(uv\right)}
\end{eqnarray*}

\end_inset


\end_layout

\begin_layout Enumerate
Für jedes Gate 
\begin_inset Formula $g\in G$
\end_inset

 sei 
\begin_inset Formula $S_{0}\coloneqq\left\{ g\right\} $
\end_inset

.
 Iterativ wird der Orbit von 
\begin_inset Formula $g$
\end_inset

 wie folgt aufgebaut, bis mit 
\begin_inset Formula $S_{i+1}=S_{i}$
\end_inset

 ein Fixpunkt erreicht wird (spätestens bei 
\begin_inset Formula $S_{\left|U\right|}$
\end_inset

):
\begin_inset Formula 
\[
S_{i+1}\coloneqq S_{i}\cup\bigcup_{\left(uv\right)\in\mathrm{Sym}_{U}}\hat{\pi}_{\left(uv\right)}S_{i}
\]

\end_inset


\end_layout

\end_deeper
\begin_layout Proof
Nach den Definitionen aus Kapitel 7 ist jede Partition 
\begin_inset Formula $\mathcal{P}_{\left(uv\right)}$
\end_inset

 eine Trägerpartition von 
\begin_inset Formula $\mathrm{Stab}_{\mathcal{C}}\left(g\right)$
\end_inset

, wenn 
\begin_inset Formula $\hat{\pi}_{\left(uv\right)}g=g$
\end_inset

, und daher ist 
\begin_inset Formula $\mathcal{P}_{g}$
\end_inset

 ebenfalls eine Trägerpartition von 
\begin_inset Formula $\mathrm{Stab}_{\mathcal{C}}\left(g\right)$
\end_inset

.
 Wenn es eine gröbere Trägerpartition 
\begin_inset Formula $\mathcal{P}'$
\end_inset

 gäbe, dann müsste diese zwei Elemente 
\begin_inset Formula $u,v\in U$
\end_inset

 kombinieren, die in 
\begin_inset Formula $\mathcal{P}_{g}$
\end_inset

 getrennt sind, und für die 
\begin_inset Formula $\hat{\pi}_{\left(uv\right)}g=g$
\end_inset

 gilt.
 In diesem Fall wäre aber die Partition 
\begin_inset Formula $\mathcal{P}_{\left(uv\right)}$
\end_inset

 mit in 
\begin_inset Formula $\mathcal{P}_{g}$
\end_inset

 aufgenommen worden, und daher ist 
\begin_inset Formula $\mathcal{P}_{g}=\mathrm{SP}\left(\mathrm{Stab}_{\mathcal{C}}\left(g\right)\right)$
\end_inset

.
 Es wird 
\begin_inset Formula $\mathrm{sp}\left(g\right)=U\backslash\max_{\left|\cdot\right|}\mathcal{P}_{g}$
\end_inset

 ausgegeben.
\end_layout

\begin_layout Proof
Für die Mengen 
\begin_inset Formula $\left(S_{i}\right)_{i\in\mathbb{N}}$
\end_inset

 gilt 
\begin_inset Formula $S_{i}\subseteq\mathrm{Orb}_{\mathcal{C}}\left(g\right)$
\end_inset

, denn per Induktion existiert für jedes Gate 
\begin_inset Formula $g'\in S_{i}$
\end_inset

 eine Folge von 
\begin_inset Formula $i$
\end_inset

 Transpositionen 
\begin_inset Formula $\pi_{1}\cdots\pi_{i}$
\end_inset

, so dass 
\begin_inset Formula $\hat{\pi}_{1}\cdots\hat{\pi}_{i}$
\end_inset

 das Gate 
\begin_inset Formula $g$
\end_inset

 auf 
\begin_inset Formula $g'$
\end_inset

 abbildet.
 Ferner besteht jede Permutation 
\begin_inset Formula $\pi$
\end_inset

 aus einer Folge von höchstens 
\begin_inset Formula $\left|U\right|$
\end_inset

 Transpositionen, so dass 
\begin_inset Formula $S_{\left|U\right|}\supseteq\mathrm{Orb}_{\mathcal{C}}\left(g\right)$
\end_inset

 den gesamten Orbit von 
\begin_inset Formula $g$
\end_inset

 enthält.
\end_layout

\begin_layout Proof
Es existieren weniger als 
\begin_inset Formula $\left|U\right|^{2}$
\end_inset

 Transpositionen, so dass der Schritt 1 in 
\begin_inset Formula $\left|G\right|^{3}\left|U\right|^{2}$
\end_inset

-Zeit abgeschlossen wird.
 Ebenso wird Schritt 2 in 
\begin_inset Formula $\left|U\right|^{3}$
\end_inset

-Zeit abgeschlossen.
 Schritt 3 erfordert eine Iteration bis 
\begin_inset Formula $S_{\left|U\right|}$
\end_inset

, wobei jeder Durchlauf 
\begin_inset Formula $\left|U\right|^{2}$
\end_inset

-Zeit benötigt.
 Insgesamt läuft der Algorithmus in 
\begin_inset Formula $\left|G\right|^{3}\left|U\right|^{3}$
\end_inset

-Zeit.
\end_layout

\begin_layout Proposition
Die obige Konstruktion ist mit 
\begin_inset Formula $\mathcal{O}\left(T\left(\mathcal{C}\right)\log n\right)$
\end_inset

 Speicherplatz berechenbar, und daher für Schaltkreisfamilien konstanter
 Tiefe in 
\begin_inset Formula $\mathrm{LOGSPACE}$
\end_inset

.
\end_layout

\begin_layout Proof
Der entscheidende Teil ist die Bestimmung der größten Menge 
\begin_inset Formula $P_{i}\subseteq\mathrm{SP}\left(\mathrm{Stab}_{\mathcal{C}}\left(g\right)\right)$
\end_inset

, denn offensichtlich können wir mit logarithmischem Platz nicht die Partition
 
\begin_inset Formula $\mathrm{SP}\left(\mathrm{Stab}_{\mathcal{C}}\left(g\right)\right)$
\end_inset

 (und noch nicht einmal 
\begin_inset Formula $P_{i}$
\end_inset

) abspeichern.
 Es reicht uns aber, wenn der Algorithmus 
\begin_inset CommandInset ref
LatexCommand ref
reference "alg:orbits"

\end_inset

 für jedes Element 
\begin_inset Formula $u\in U$
\end_inset

 die Elemente 
\begin_inset Formula $u\sim u'$
\end_inset

 zählt, und sich das Element 
\begin_inset Formula $u$
\end_inset

 mit der größten Äquivalenzklasse merkt.
 Dann findet er alle Elemente mit 
\begin_inset Formula $u'\not\sim u$
\end_inset

 (per Korollar 
\begin_inset CommandInset ref
LatexCommand ref
reference "cor:korollar-23"

\end_inset

 gibt es davon nur 
\begin_inset Formula $\mathcal{O}\left(1\right)$
\end_inset

 viele), und bildet daraus die Trägermenge 
\begin_inset Formula $\mathrm{sp}\left(g\right)$
\end_inset

.
\end_layout

\begin_layout Proof
Der Orbit hat die Größe 
\begin_inset Formula $n^{\left|\mathrm{sp}\left(g\right)\right|}$
\end_inset

, aber diesen muss der Algorithmus nicht abspeichern, sondern nur iterativ
 ausgeben.
\end_layout

\begin_layout Standard
\begin_inset Float algorithm
wide false
sideways false
status open

\begin_layout LyX-Code
Input: 
\begin_inset Formula $\left(G,W,\Sigma,\Omega,U\right)$
\end_inset


\end_layout

\begin_layout LyX-Code
Trägermenge(
\begin_inset Formula $g$
\end_inset

):
\begin_inset Separator latexpar
\end_inset


\end_layout

\begin_deeper
\begin_layout LyX-Code
\begin_inset Formula $\bar{s}\leftarrow\left\langle \right\rangle $
\end_inset

, 
\begin_inset Formula $j\leftarrow0$
\end_inset


\end_layout

\begin_layout LyX-Code
Für alle 
\begin_inset Formula $u\in U$
\end_inset

:
\begin_inset Separator latexpar
\end_inset


\end_layout

\begin_deeper
\begin_layout LyX-Code
\begin_inset Formula $i\leftarrow0$
\end_inset


\end_layout

\begin_layout LyX-Code
Für alle 
\begin_inset Formula $v\in U$
\end_inset

:
\begin_inset Separator latexpar
\end_inset


\end_layout

\begin_deeper
\begin_layout LyX-Code
Falls 
\begin_inset Formula $\hat{\pi}_{\left(uv\right)}\left(g\right)=g$
\end_inset

: (mit Algorithmus 
\begin_inset CommandInset ref
LatexCommand ref
reference "alg:aut"

\end_inset

)
\begin_inset Separator latexpar
\end_inset


\end_layout

\begin_deeper
\begin_layout LyX-Code
\begin_inset Formula $i\leftarrow i+1$
\end_inset


\end_layout

\end_deeper
\end_deeper
\begin_layout LyX-Code
Falls 
\begin_inset Formula $i>j$
\end_inset

:
\begin_inset Separator latexpar
\end_inset


\end_layout

\begin_deeper
\begin_layout LyX-Code
\begin_inset Formula $u'\leftarrow u$
\end_inset

, 
\begin_inset Formula $j\leftarrow i$
\end_inset


\end_layout

\end_deeper
\end_deeper
\begin_layout LyX-Code
Für alle 
\begin_inset Formula $v\in U$
\end_inset

:
\begin_inset Separator latexpar
\end_inset


\end_layout

\begin_deeper
\begin_layout LyX-Code
Falls 
\begin_inset Formula $\hat{\pi}_{\left(u'v\right)}\left(g\right)\neq g$
\end_inset

:
\begin_inset Separator latexpar
\end_inset


\end_layout

\begin_deeper
\begin_layout LyX-Code
\begin_inset Formula $\bar{s}\leftarrow\bar{s}v$
\end_inset


\end_layout

\end_deeper
\end_deeper
\begin_layout LyX-Code
Gib 
\begin_inset Formula $\bar{s}$
\end_inset

 zurück.
\end_layout

\end_deeper
\begin_layout LyX-Code
Orbit(
\begin_inset Formula $g$
\end_inset

):
\begin_inset Separator latexpar
\end_inset


\end_layout

\begin_deeper
\begin_layout LyX-Code
\begin_inset Formula $\bar{s}\leftarrow\mathtt{Trägermenge}\left(g\right)$
\end_inset


\begin_inset Separator latexpar
\end_inset


\end_layout

\begin_deeper
\begin_layout LyX-Code
Für 
\begin_inset Formula $\bar{t}\in U^{\mathrm{ar}\left(\bar{s}\right)}$
\end_inset

:
\begin_inset Separator latexpar
\end_inset


\end_layout

\begin_deeper
\begin_layout LyX-Code
Gib 
\begin_inset Formula $\hat{\pi}_{\left(\bar{s}\mapsto\bar{t}\right)}\left(g\right)$
\end_inset

 aus.
\end_layout

\end_deeper
\end_deeper
\end_deeper
\begin_layout Plain Layout
\begin_inset Caption Standard

\begin_layout Plain Layout
\begin_inset CommandInset label
LatexCommand label
name "alg:orbits"

\end_inset

Berechnung der Trägermengen 
\begin_inset Formula $\mathrm{sp}\left(g\right)$
\end_inset

 und Orbits 
\begin_inset Formula $\mathrm{Orb}_{\mathcal{C}}\left(g\right)$
\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Plain Layout

\end_layout

\end_inset


\end_layout

\begin_layout Section
Rekursive Auswertung der Schaltkreise
\end_layout

\begin_layout Standard
Für eine rigide, symmetrische 
\begin_inset Formula $k$
\end_inset

-stellige 
\begin_inset Formula $\left(\sigma,\mathbb{B}\right)$
\end_inset

-Multischaltkreisfamilie 
\begin_inset Formula $\left(\mathcal{C}_{n}\right)_{n\in\mathbb{N}}$
\end_inset

 gilt nach Korollar 
\begin_inset CommandInset ref
LatexCommand ref
reference "cor:korollar-23"

\end_inset

 
\begin_inset Formula $\mathrm{sp}\left(\mathcal{C}_{n}\right)\in\mathcal{O}\left(1\right)$
\end_inset

.
 Seien also 
\begin_inset Formula $n_{0},c\in\mathbb{N}$
\end_inset

 so gewählt, dass 
\begin_inset Formula $\mathrm{sp}\left(\mathcal{C}_{n}\right)\leqslant c$
\end_inset

 für 
\begin_inset Formula $n\geqslant n_{0}$
\end_inset

.
\end_layout

\begin_layout Standard
Zur Erinnerung: 
\begin_inset Formula $\mathrm{sp}\left(\mathcal{C}\right)$
\end_inset

 ist die maximale Größe der Trägermenge 
\begin_inset Formula $\mathrm{sp}\left(g\right)=\left\{ P_{1},\cdots,P_{m}\right\} $
\end_inset

, 
\begin_inset Formula $\left|P_{1}\right|\leqslant\cdots\leqslant\left|P_{m}\right|$
\end_inset

 jedes Gates 
\begin_inset Formula $g$
\end_inset

 von 
\begin_inset Formula $\mathcal{C}$
\end_inset

.
\end_layout

\begin_layout Standard
Wir möchten 
\begin_inset Formula $\mathcal{C}_{n}$
\end_inset

 auf beliebigen Strukturen 
\begin_inset Formula $\mathfrak{A}\in\mathbf{FIN}^{\left(n\right)}\left(\sigma\right)$
\end_inset

 (nicht nur 
\begin_inset Formula $\mathfrak{A}\in\mathbf{FIN}^{\left[1,n\right]}\left(\sigma\right)$
\end_inset

) auswerten, wofür eine beliebige Einbettung 
\begin_inset Formula $\pi:A\rightarrow\left[1,n\right]$
\end_inset

 definiert werden muss.
 Es wird nun gezeigt, dass die Auswertung des Gates 
\begin_inset Formula $g$
\end_inset

 nur von dem Teil der Abbildung 
\begin_inset Formula $\pi$
\end_inset

 abhängt, der Elemente auf 
\begin_inset Formula $\mathrm{sp}\left(g\right)$
\end_inset

 abbildet.
 Die Abbildung auf die übrigen Elemente 
\begin_inset Formula $U\backslash\mathrm{sp}\left(g\right)$
\end_inset

 ist für 
\begin_inset Formula $g$
\end_inset

 unbedeutend.
\end_layout

\begin_layout Standard
Die Folgerung in diesem Abschnitt passt den Abschnitt 4.3 aus 
\begin_inset CommandInset citation
LatexCommand cite
key "AD2014"

\end_inset

 für Multischaltkreise an.
\end_layout

\begin_layout Definition

\series bold
Konsistenz
\end_layout

\begin_layout Definition
Zwei Abbildungen 
\begin_inset Formula $f:A\rightarrow B$
\end_inset

 und 
\begin_inset Formula $f:A'\rightarrow B'$
\end_inset

 seien konsistent in 
\begin_inset Formula $A''\subseteq A\cap A'$
\end_inset

 (kurz 
\begin_inset Formula $f\sim_{A''}f'$
\end_inset

), wenn sie im Teilbereich 
\begin_inset Formula $A''$
\end_inset

 identisch sind.
 
\begin_inset Formula 
\[
f\sim_{A''}f'\Leftrightarrow f_{\mid A''}=f'_{\mid A''}
\]

\end_inset


\end_layout

\begin_layout Proposition
\begin_inset CommandInset label
LatexCommand label
name "prop:konsistenz"

\end_inset

Sei 
\begin_inset Formula $\mathcal{C}=\left(G,\mathcal{W},\Sigma,\Omega,U\right)$
\end_inset

 ein rigider, symmetrischer Multischaltkreis mit 
\begin_inset Formula $n=\left|U\right|$
\end_inset

, und sei 
\begin_inset Formula $g\in G$
\end_inset

 ein beliebiges Gate mit den Vorgängern 
\begin_inset Formula $H\coloneqq\left\{ h\in G\mid\mathcal{W}\left(h,g\right)>0\right\} $
\end_inset

.
 Sei 
\begin_inset Formula $\mathfrak{A}\in\mathbf{FIN}^{\left(n\right)}\left(\sigma\right)$
\end_inset

 eine beliebige Struktur.
 Seien 
\begin_inset Formula $\pi_{1},\pi_{2}\in\mathrm{Bij}\left(U,A\right)$
\end_inset

 beliebig mit 
\begin_inset Formula $\pi_{1}\sim_{\mathrm{sp}\left(g\right)}\pi_{2}$
\end_inset

.
 So gilt:
\begin_inset Formula 
\begin{eqnarray}
\mathcal{C}\left[\pi_{1}^{-1}\mathfrak{A}\right]\left(g\right) & = & \mathcal{C}\left[\pi_{2}^{-1}\mathfrak{A}\right]\left(g\right)\label{eq:cons-1}\\
\sum_{h\in H}\mathcal{W}\left(h,g\right)\cdot\mathcal{C}\left[\pi_{1}^{-1}\mathfrak{A}\right]\left(h\right) & = & \sum_{h\in H}\mathcal{W}\left(h,g\right)\cdot\mathcal{C}\left[\pi_{2}^{-1}\mathfrak{A}\right]\left(h\right)\label{eq:cons-2}
\end{eqnarray}

\end_inset


\end_layout

\begin_layout Proof
Sei 
\begin_inset Formula $\tau\in\mathrm{Sym}_{U}$
\end_inset

 die Permutation 
\begin_inset Formula $\tau\coloneqq\pi_{1}^{-1}\pi_{2}$
\end_inset

, so dass 
\begin_inset Formula $\pi_{1}^{-1}=\tau\pi_{2}^{-1}$
\end_inset

.
\end_layout

\begin_layout Proof
Weil 
\begin_inset Formula $\pi_{1}$
\end_inset

 und 
\begin_inset Formula $\pi_{2}$
\end_inset

 konsistent in 
\begin_inset Formula $\mathrm{sp}\left(g\right)$
\end_inset

 sind, gilt 
\begin_inset Formula $\pi_{1}u=\pi_{2}u$
\end_inset

 für 
\begin_inset Formula $u\in\mathrm{sp}\left(g\right)$
\end_inset

.
\begin_inset Formula 
\begin{eqnarray*}
\tau u & = & \pi_{1}^{-1}\pi_{2}u\\
 & = & \pi_{1}^{-1}\pi_{1}u=u
\end{eqnarray*}

\end_inset


\end_layout

\begin_layout Proof
Wegen der Symmetrie und Rigidität induziert 
\begin_inset Formula $\tau$
\end_inset

 einen eindeutigen Automorphismus 
\begin_inset Formula $\hat{\tau}$
\end_inset

 im Schaltkreis 
\begin_inset Formula $\mathcal{C}$
\end_inset

.
 Weil 
\begin_inset Formula $\tau$
\end_inset

 die Elemente von 
\begin_inset Formula $\mathrm{sp}\left(g\right)$
\end_inset

 fixiert, fixiert 
\begin_inset Formula $\hat{\tau}$
\end_inset

 auch das Gate 
\begin_inset Formula $g$
\end_inset

:
\begin_inset Formula 
\begin{eqnarray*}
\tau & \in & \mathrm{Stab}_{U}\left(\mathrm{sp}\left(g\right)\right)\\
 & \subseteq & \mathrm{Stab}_{\mathcal{C}}\left(g\right)
\end{eqnarray*}

\end_inset

Damit ist Gleichung 
\begin_inset CommandInset ref
LatexCommand ref
reference "eq:cons-1"

\end_inset

 bewiesen:
\begin_inset Formula 
\begin{eqnarray*}
\mathcal{C}\left[\pi_{2}^{-1}\mathfrak{A}\right]\left(g\right) & = & \mathcal{C}\left[\tau\pi_{2}^{-1}\mathfrak{A}\right]\left(\hat{\tau}g\right)\\
 & = & \mathcal{C}\left[\tau\pi_{2}^{-1}\mathfrak{A}\right]\left(g\right)\\
 & = & \mathcal{C}\left[\pi_{1}^{-1}\mathfrak{A}\right]\left(g\right)
\end{eqnarray*}

\end_inset


\end_layout

\begin_layout Proof
Da 
\begin_inset Formula $\hat{\tau}g=g$
\end_inset

, muss auch 
\begin_inset Formula $\hat{\tau}H=H$
\end_inset

 auch für die Vorgänger gelten.
 Außerdem hat 
\begin_inset Formula $\hat{\tau}h$
\end_inset

 für alle 
\begin_inset Formula $h\in H$
\end_inset

 die gleiche Anzahl von Kanten zu 
\begin_inset Formula $g$
\end_inset

 wie 
\begin_inset Formula $h$
\end_inset

:
\begin_inset Formula 
\begin{eqnarray*}
\mathcal{C}\left[\pi_{1}^{-1}\mathfrak{A}\right]\left(h\right) & = & \mathcal{C}\left[\tau\pi_{2}^{-1}\right]\left(\hat{\tau}h\right)\\
\mathcal{W}\left(h,g\right) & = & \mathcal{W}\left(\hat{\tau}h,g\right)\\
 &  & \mathrm{f.a.}\,h\in H
\end{eqnarray*}

\end_inset

Es folgt die Gleichung 
\begin_inset CommandInset ref
LatexCommand ref
reference "eq:cons-2"

\end_inset

 für das Gewicht der mit 
\begin_inset Formula $1$
\end_inset

 belegten Vorgänger von 
\begin_inset Formula $g$
\end_inset

:
\begin_inset Formula 
\[
\sum_{h\in H}\mathcal{W}\left(h,g\right)\cdot\mathcal{C}\left[\pi_{1}^{-1}\mathfrak{A}\right]\left(h\right)=\sum_{h\in H}\mathcal{W}\left(h,g\right)\cdot\mathcal{C}\left[\pi_{2}^{-1}\mathfrak{A}\right]\left(h\right)
\]

\end_inset


\end_layout

\begin_layout Definition
Für jedes Gate 
\begin_inset Formula $g$
\end_inset

 des Schaltkreises 
\begin_inset Formula $\mathcal{C}$
\end_inset

 über dem Universum 
\begin_inset Formula $U$
\end_inset

 beschreiben wir nun die Menge der verschiedenen Bijektionen 
\begin_inset Formula $\pi\in\mathrm{Bij}\left(U,A\right)$
\end_inset

, für die 
\begin_inset Formula $\mathcal{C}\left[\pi^{-1}\mathfrak{A}\right]\left(g\right)=1$
\end_inset

.
 Per Satz 
\begin_inset CommandInset ref
LatexCommand ref
reference "prop:konsistenz"

\end_inset

 müssen nur deren Reduktionen auf 
\begin_inset Formula $\mathrm{sp}\left(g\right)$
\end_inset

 betrachtet werden.
 Sei 
\begin_inset Formula $\mathrm{EV}\left(g\right)$
\end_inset

 die Menge dieser Abbildungen:
\end_layout

\begin_layout Definition
\begin_inset Formula 
\[
\mathrm{EV}\left(g\right)\coloneqq\left\{ \pi{}_{\mid\mathrm{sp}\left(g\right)}\mid\pi\in\mathrm{Bij}\left(U,A\right),\,\mathcal{C}\left[\pi^{-1}\mathfrak{A}\right]\left(g\right)=1\right\} 
\]

\end_inset


\end_layout

\begin_layout Definition
Für jede injektive Funktion 
\begin_inset Formula $\rho:\mathrm{sp}\left(g\right)\rightarrow A$
\end_inset

 sei 
\begin_inset Formula $\mathrm{Ext}\left(\rho\right)$
\end_inset

 die Menge der zu 
\begin_inset Formula $\rho$
\end_inset

 konsistenten Erweiterungen 
\begin_inset Formula $\pi:U\rightarrow A$
\end_inset

 :
\begin_inset Formula 
\[
\mathrm{Ext}\left(\rho\right)\coloneqq\left\{ \pi\in\mathrm{Bij}\left(U,A\right)\mid\pi\sim_{\mathrm{sp}\left(g\right)}\rho\right\} 
\]

\end_inset


\end_layout

\begin_layout Definition
Zusätzlich beschreiben wir für jeden Vorgänger 
\begin_inset Formula $h\in H$
\end_inset

 von 
\begin_inset Formula $g$
\end_inset

 und jede injektive Funktion 
\begin_inset Formula $\rho:\mathrm{sp}\left(g\right)\rightarrow A$
\end_inset

 die Menge 
\begin_inset Formula $\mathrm{Red}\left(\rho,h\right)$
\end_inset

 der unterschiedlichen 
\begin_inset Formula $\mathrm{sp}\left(h\right)$
\end_inset

-Reduktionen von Erweiterungen von 
\begin_inset Formula $\rho$
\end_inset

: 
\begin_inset Formula 
\[
\mathrm{Red}\left(\rho,h\right)\coloneqq\left\{ \pi_{\mid\mathrm{sp}\left(h\right)}\mid\pi\in\mathrm{Ext}\left(\rho\right)\right\} 
\]

\end_inset


\end_layout

\begin_layout Claim
\begin_inset CommandInset label
LatexCommand label
name "claim:claim-28"

\end_inset

(nach Behauptung 28 aus 
\begin_inset CommandInset citation
LatexCommand cite
key "AD2014"

\end_inset

) Sei 
\begin_inset Formula $\pi\in\mathrm{Bij}\left(U,A\right)$
\end_inset

 beliebig, und sei 
\begin_inset Formula $\rho_{\pi}\coloneqq\pi_{\mid\mathrm{sp}\left(g\right)}$
\end_inset

 die Reduktion von 
\begin_inset Formula $\pi$
\end_inset

 auf 
\begin_inset Formula $\mathrm{sp}\left(g\right)$
\end_inset

.
 Dann gilt:
\end_layout

\begin_layout Claim
\begin_inset Formula 
\begin{equation}
r\left(\pi\right)\coloneqq\sum_{h\in H}\mathcal{W}\left(h,g\right)\mathcal{C}\left[\pi^{-1}\mathfrak{A}\right]\left(h\right)=\sum_{h\in H}\mathcal{W}\left(h,g\right)\frac{\left|\mathrm{Red}\left(\rho_{\pi},h\right)\cap\mathrm{EV}\left(h\right)\right|}{\left|\mathrm{Red}\left(\rho_{\pi},h\right)\right|}\label{eq:behauptung-28}
\end{equation}

\end_inset


\end_layout

\begin_layout Proof
Nach Gleichung 
\begin_inset CommandInset ref
LatexCommand ref
reference "eq:cons-2"

\end_inset

 ist 
\begin_inset Formula $r\left(\pi'\right)\coloneqq\sum_{h\in H}\mathcal{W}\left[h,g\right]\mathcal{C}\left[\pi'^{-1}\mathfrak{A}\right]\left(h\right)$
\end_inset

 für alle 
\begin_inset Formula $\pi'\in\mathrm{Ext}\left(\rho_{\pi}\right)$
\end_inset

 gleich, so dass 
\begin_inset Formula $\left|\mathrm{Ext}\left(\rho_{\pi}\right)\right|r\left(\pi\right)=\sum_{\pi'\in\mathrm{Ext}\left(\pi\right)}r\left(\pi'\right)$
\end_inset

 gilt.
\end_layout

\begin_layout Proof
Weiterhin können wir für jeden Vorgänger 
\begin_inset Formula $h\in H$
\end_inset

 die Bijektionen aus 
\begin_inset Formula $\mathrm{Ext}\left(\rho_{\pi}\right)$
\end_inset

 in Äquivalenzklassen bezüglich der 
\begin_inset Formula $\mathrm{sp}\left(h\right)$
\end_inset

-Konsistenz zu einer Belegung 
\begin_inset Formula $\rho'\in\mathrm{Red}\left(\rho_{\pi},h\right)$
\end_inset

 partitionieren: 
\begin_inset Formula 
\begin{eqnarray*}
\left|\mathrm{Ext}\left(\rho_{\pi}\right)\right|r\left(\pi\right) & = & \sum_{h\in H}\mathcal{W}\left(h,g\right)\sum_{\pi'\in\mathrm{Ext}\left(\rho_{\pi}\right)}\mathcal{C}\left[\pi'\mathfrak{^{-1}A}\right]\left(h\right)\\
 & = & \sum_{h\in H}\mathcal{W}\left(h,g\right)\sum_{\rho'\in\mathrm{Red}\left(\rho_{\pi},h\right)}\sum_{\begin{subarray}{c}
\pi'\in\mathrm{Ext}\left(\rho_{\pi}\right)\\
\pi'\sim_{\mathrm{sp}\left(h\right)}\rho'
\end{subarray}}\mathcal{C}\left[\pi'^{-1}\mathfrak{A}\right]\left(h\right)
\end{eqnarray*}

\end_inset


\end_layout

\begin_layout Proof
Nach der Definition der Menge 
\begin_inset Formula $\mathrm{EV}\left(h\right)$
\end_inset

 gilt für alle Belegungen 
\begin_inset Formula $\pi':U\rightarrow A$
\end_inset

, dass 
\begin_inset Formula $\mathcal{C}\left[\pi'^{-1}\mathfrak{A}\right]\left(h\right)=1$
\end_inset

 genau dann wenn 
\begin_inset Formula $\pi'_{\mid\mathrm{sp}\left(h\right)}\in\mathrm{EV}\left(h\right)$
\end_inset

.
 Daher können wir 
\begin_inset Formula $\left[\mathrm{EV}\left(h\right)\right]\left(\rho'\right)\in\left\{ 0,1\right\} $
\end_inset

 einfach mit der Größe von 
\begin_inset Formula $\left\{ \pi'\in\mathrm{Ext}\left(\rho_{\pi}\right)\mid\pi'\sim_{\mathrm{sp}\left(h\right)}\rho'\right\} $
\end_inset

 multiplizieren: 
\begin_inset Formula 
\begin{eqnarray*}
\left|\mathrm{Ext}\left(\rho_{\pi}\right)\right|r\left(\pi\right) & = & \sum_{h\in H}\mathcal{W}\left(h,g\right)\sum_{\rho'\in\mathrm{Red}\left(\rho_{\pi},h\right)}\sum_{\begin{subarray}{c}
\pi'\in\mathrm{Ext}\left(\rho_{\pi}\right)\\
\pi'\sim_{\mathrm{sp}\left(h\right)}\rho'
\end{subarray}}\left[\mathrm{EV}\left(h\right)\right]\left(\rho'\right)\\
 & = & \sum_{h\in H}\mathcal{W}\left(h,g\right)\sum_{\rho'\in\mathrm{Red}\left(\rho_{\pi},h\right)}\left[\mathrm{EV}\left(h\right)\right]\left(\rho'\right)\left|\left\{ \pi'\in\mathrm{Ext}\left(\rho_{\pi}\right),\,\pi'\sim_{\mathrm{sp}\left(h\right)}\rho'\right\} \right|
\end{eqnarray*}

\end_inset


\end_layout

\begin_layout Proof
Weil die Partitionierung 
\begin_inset Formula $\mathrm{Ext}\left(\rho_{\pi}\right)=\biguplus_{\rho'\in\mathrm{Red}\left(\rho_{\pi},h\right)}\left\{ \pi'\in\mathrm{Ext}\left(\rho_{\pi}\right),\,\pi'\sim_{\mathrm{sp}\left(h\right)}\rho'\right\} $
\end_inset

 die Menge 
\begin_inset Formula $\mathrm{Ext}\left(\rho_{\pi}\right)$
\end_inset

 in isomorphe Klassen teilt, gilt 
\begin_inset Formula $\left|\left\{ \pi'\in\mathrm{Ext}\left(\rho_{\pi}\right),\,\pi'\sim_{\mathrm{sp}\left(h\right)}\rho'\right\} \right|=\frac{\left|\mathrm{Ext}\left(\rho_{\pi}\right)\right|}{\left|\mathrm{Red}\left(\rho_{\pi},h\right)\right|}$
\end_inset

 für 
\begin_inset Formula $\rho'\in\mathrm{Red}\left(\rho_{\pi},h\right)$
\end_inset

.
\end_layout

\begin_layout Proof
\begin_inset Formula 
\begin{eqnarray*}
\left|\mathrm{Ext}\left(\rho_{\pi}\right)\right|r\left(\pi\right) & = & \sum_{h\in H}\mathcal{W}\left(h,g\right)\sum_{\rho'\in\mathrm{Red}\left(\rho_{\pi},h\right)}\left[\mathrm{EV}\left(h\right)\right]\left(\rho'\right)\frac{\left|\mathrm{Ext}\left(\rho_{\pi}\right)\right|}{\left|\mathrm{Red}\left(\rho_{\pi},h\right)\right|}\\
 & = & \sum_{h\in H}\mathcal{W}\left(h,g\right)\sum_{\rho'\in\mathrm{Red}\left(\rho_{\pi},h\right)\cap\mathrm{EV}\left(h\right)}\frac{\left|\mathrm{Ext}\left(\rho_{\pi}\right)\right|}{\left|\mathrm{Red}\left(\rho_{\pi},h\right)\right|}\\
 & = & \sum_{h\in H}\mathcal{W}\left(h,g\right)\frac{\left|\mathrm{Red}\left(\rho_{\pi},h\right)\cap\mathrm{EV}\left(h\right)\right|\left|\mathrm{Ext}\left(\rho_{\pi}\right)\right|}{\left|\mathrm{Red}\left(\rho_{\pi},h\right)\right|}\\
r\left(\pi\right) & = & \sum_{h\in H}\mathcal{W}\left(h,g\right)\frac{\left|\mathrm{Red}\left(\rho_{\pi},h\right)\cap\mathrm{EV}\left(h\right)\right|}{\left|\mathrm{Red}\left(\rho_{\pi},h\right)\right|}
\end{eqnarray*}

\end_inset


\end_layout

\begin_layout Standard
Wir verwenden nun die Ordnung von 
\begin_inset Formula $U=\left[1,n\right]$
\end_inset

 und legen fest: Sei 
\begin_inset Formula $\bar{U}\coloneqq\left(1,\cdots,n\right)$
\end_inset

, und 
\begin_inset Formula $\bar{\mathrm{sp}}\left(g\right)$
\end_inset

 das geordnete Tupel der Elemente von 
\begin_inset Formula $\mathrm{sp}\left(g\right)$
\end_inset

.
 Für 
\begin_inset Formula $\bar{a}\in A^{\left|\mathrm{sp}\left(g\right)\right|}$
\end_inset

 definieren wir die Abbildung 
\begin_inset Formula $\rho_{\bar{a}}\coloneqq\left(\bar{\mathrm{sp}\left(g\right)}\rightarrow\bar{a}\right)$
\end_inset

.
 Sei 
\begin_inset Formula $\bar{\mathrm{Ext}}\left(\bar{a}\right)\subseteq A^{n}$
\end_inset

 die Relation der 
\begin_inset Formula $n$
\end_inset

-Tupel 
\begin_inset Formula $\pi\bar{U}$
\end_inset

 für 
\begin_inset Formula $\pi\in\mathrm{Ext}\left(\rho_{\bar{a}}\right)$
\end_inset

, sei 
\begin_inset Formula $\bar{\mathrm{Red}}\left(\bar{a},h\right)\subseteq A^{\left|\mathrm{sp}\left(h\right)\right|}$
\end_inset

 die Relation der Tupel 
\begin_inset Formula $\rho'\bar{\mathrm{sp}}\left(h\right)$
\end_inset

 für 
\begin_inset Formula $\rho'\in\mathrm{Red}\left(\rho_{\bar{a}},h\right)$
\end_inset

, und sei 
\begin_inset Formula $\bar{\mathrm{EV}}\left(g\right)\subseteq A^{\left|\mathrm{sp}\left(g\right)\right|}$
\end_inset

 die Relation der Tupel 
\begin_inset Formula $\rho\bar{\mathrm{sp}}\left(g\right)$
\end_inset

 für 
\begin_inset Formula $\rho\in\mathrm{EV}\left(g\right)$
\end_inset

.
 
\begin_inset Formula 
\begin{eqnarray*}
\bar{\mathrm{Ext}}\left(\bar{a}\right) & \coloneqq & \left\{ \pi\bar{U}\mid\pi\in\mathrm{Ext}\left(\bar{\mathrm{sp}}\left(g\right)\mapsto\bar{a}\right)\right\} \\
\bar{\mathrm{EV}}\left(g\right) & \coloneqq & \left\{ \rho\bar{\mathrm{sp}}\left(g\right)\mid\rho\in\mathrm{EV}\left(g\right)\right\} 
\end{eqnarray*}

\end_inset


\end_layout

\begin_layout Standard
Wir werden nun für jedes Gate 
\begin_inset Formula $g\in G$
\end_inset

 mit den Vorgängern 
\begin_inset Formula $H\subseteq G$
\end_inset

 die Menge 
\begin_inset Formula $\bar{\mathrm{EV}}\left(g\right)$
\end_inset

 rekursiv durch 
\begin_inset Formula $\left(\bar{\mathrm{EV}}\left(h\right)\right)_{h\in H}$
\end_inset

 und 
\begin_inset Formula $\mathfrak{A}$
\end_inset

 definieren.
\end_layout

\begin_layout Case
Falls 
\begin_inset Formula $g$
\end_inset

 eine Konstante mit 
\begin_inset Formula $\Sigma\left(g\right)\in\left\{ \mathbf{0},\mathbf{1}\right\} $
\end_inset

 ist, dann ist 
\begin_inset Formula $\mathrm{sp}\left(g\right)=\emptyset$
\end_inset

, da 
\begin_inset Formula $g$
\end_inset

 von allen Automorphismen fixiert wird.
 In diesem Fall gilt:
\begin_inset Formula 
\[
\bar{\mathrm{EV}}\left(g\right)=\begin{cases}
\emptyset & \mathrm{falls}\,\,\Sigma\left(g\right)=\mathbf{0}\\
\left\{ \left\langle \right\rangle \right\}  & \mathrm{falls}\,\,\Sigma\left(g\right)=\mathbf{1}
\end{cases}
\]

\end_inset


\end_layout

\begin_layout Case
Falls 
\begin_inset Formula $g$
\end_inset

 ein relationales Input mit 
\begin_inset Formula $\Sigma\left(g\right)=R\bar{t}$
\end_inset

, 
\begin_inset Formula $R/k\in\sigma$
\end_inset

 und 
\begin_inset Formula $\bar{t}\in\mathrm{sp}\left(g\right)^{k}$
\end_inset

 ist, dann gilt:
\begin_inset Formula 
\[
\bar{\mathrm{EV}}\left(g\right)=R^{\mathfrak{A}}\cap\left\{ \rho_{\bar{a}}\bar{t}\mid\bar{a}\in A^{\left|\mathrm{sp}\left(g\right)\right|}\right\} 
\]

\end_inset


\end_layout

\begin_layout Case
Falls 
\begin_inset Formula $\Sigma\left(g\right)=\mathtt{AND}$
\end_inset

 ist, dann gilt für jedes Tupel 
\begin_inset Formula $\bar{a}\in A^{\left|\mathrm{sp}\left(g\right)\right|}$
\end_inset

 , dass 
\begin_inset Formula $\rho_{\bar{a}}\in\mathrm{EV}\left(g\right)$
\end_inset

 genau dann wenn jede zu 
\begin_inset Formula $\rho_{\bar{a}}$
\end_inset

 konsistente Bijektion 
\begin_inset Formula $\pi\in\mathrm{Ext}\left(\rho_{\bar{a}}\right)$
\end_inset

 alle Vorgänger 
\begin_inset Formula $h\in H$
\end_inset

 erfüllt: 
\begin_inset Formula 
\begin{eqnarray*}
\bar{a}\in\bar{\mathrm{EV}}\left(g\right) & \Leftrightarrow & \sum_{h\in H}\mathcal{W}\left(h,g\right)\mathcal{C}\left[\pi^{-1}\mathfrak{A}\right]\left(h\right)=\sum_{h\in H}\mathcal{W}\left(h,g\right)\\
 &  & \mathrm{f.a.\,\pi\in\mathrm{Ext}\left(\rho_{\bar{a}}\right)}
\end{eqnarray*}

\end_inset

Beziehungsweise nach Behauptung 
\begin_inset CommandInset ref
LatexCommand ref
reference "claim:claim-28"

\end_inset

:
\begin_inset Formula 
\[
\bar{a}\in\bar{\mathrm{EV}}\left(g\right)\Leftrightarrow\sum_{h\in H}\mathcal{W}\left(h,g\right)\frac{\left|\bar{\mathrm{Red}}\left(\bar{a},h\right)\cap\mathrm{EV}\left(h\right)\right|}{\left|\bar{\mathrm{Red}}\left(\bar{a},h\right)\right|}=\sum_{h\in H}\mathcal{W}\left(h,g\right)
\]

\end_inset

Dies ist gleichbedeutend mit 
\begin_inset Formula $\mathrm{Red}\left(\rho_{\bar{a}},h\right)\subseteq\mathrm{EV}\left(h\right)$
\end_inset

.
 Demnach gilt:
\begin_inset Formula 
\[
\bar{\mathrm{EV}}\left(g\right)=\left\{ \bar{a}\in A^{\left|\mathrm{sp}\left(g\right)\right|}\mid\bar{\mathrm{Red}}\left(\bar{a},h\right)\subseteq\bar{\mathrm{EV}}\left(h\right)\,\mathrm{f.a.}\,h\in H\right\} 
\]

\end_inset


\end_layout

\begin_layout Case
Falls 
\begin_inset Formula $\Sigma\left(g\right)=\mathtt{OR}$
\end_inset

 ist, dann ist 
\begin_inset Formula $\bar{a}\in\bar{\mathrm{EV}}\left(g\right)$
\end_inset

 genau dann wenn mindestens eine Bijektion 
\begin_inset Formula $\pi\in\mathrm{Ext}\left(\rho_{\bar{a}}\right)$
\end_inset

 mindestens einen Vorgänger 
\begin_inset Formula $h\in H$
\end_inset

 erfüllt:
\begin_inset Formula 
\[
\sum_{h\in H}\left|\bar{\mathrm{Red}}\left(\bar{a},h\right)\cap\mathrm{EV}\left(h\right)\right|>0
\]

\end_inset


\begin_inset Formula 
\[
\bar{\mathrm{EV}}\left(g\right)=\left\{ \bar{a}\in A^{\left|\mathrm{sp}\left(g\right)\right|}\mid\emptyset\neq\bigcup_{h\in H}\bar{\mathrm{Red}}\left(\bar{a},h\right)\cap\bar{\mathrm{EV}}\left(h\right)\right\} 
\]

\end_inset


\end_layout

\begin_layout Case
Falls 
\begin_inset Formula $\Sigma\left(g\right)=\mathtt{MAJ}$
\end_inset

 ist, dann ist 
\begin_inset Formula $\bar{a}\in\bar{\mathrm{EV}}\left(g\right)$
\end_inset

 genau dann wenn mindestens die Hälfte der Vorgänger erfüllt sind:
\begin_inset Formula 
\[
\bar{a}\in\bar{\mathrm{EV}}\left(g\right)\Leftrightarrow\sum_{h\in H}\mathcal{W}\left(h,g\right)\frac{\left|\bar{\mathrm{Red}}\left(\bar{a},h\right)\cap\bar{\mathrm{EV}}\left(h\right)\right|}{\left|\mathrm{Red}\left(\bar{a},h\right)\right|}\geqslant\frac{1}{2}\sum_{h\in H}\mathcal{W}\left(h,g\right)
\]

\end_inset


\end_layout

\begin_layout Case
Falls 
\begin_inset Formula $\Sigma\left(g\right)=\mathtt{NOT}$
\end_inset

, dann hat 
\begin_inset Formula $g$
\end_inset

 per Definition des Schaltkreises genau einen Vorgänger 
\begin_inset Formula $h$
\end_inset

, es gilt 
\begin_inset Formula $\mathrm{sp}\left(g\right)=\mathrm{sp}\left(h\right)$
\end_inset

 und 
\begin_inset Formula $\mathcal{C}\left[\pi^{-1}\mathfrak{A}\right]\left(g\right)=1-\mathcal{C}\left[\pi^{-1}\mathfrak{A}\right]\left(h\right)$
\end_inset

.
 Also:
\begin_inset Formula 
\[
\bar{\mathrm{EV}}\left(g\right)=A^{\left|\mathrm{sp}\left(g\right)\right|}\backslash\bar{\mathrm{EV}}\left(h\right)
\]

\end_inset


\end_layout

\begin_layout Standard
Die vom Schaltkreis 
\begin_inset Formula $\mathcal{C}$
\end_inset

 berechnete Anfrage 
\begin_inset Formula $q_{\mathcal{C}}$
\end_inset

 ist äquivalent zu der folgenden Relation:
\begin_inset Formula 
\[
q_{\mathcal{C}}\left(\mathfrak{A}\right)\coloneqq\left\{ \bar{a}\in A^{k}\mid\mathrm{ex.}\,\bar{t}\in U^{k}\,\mathrm{mit}\,\bar{a}\in\bar{\mathrm{EV}}\left(\Omega\left(\bar{t}\right)\right)\right\} 
\]

\end_inset


\end_layout

\begin_layout Standard
\begin_inset Newpage pagebreak
\end_inset


\end_layout

\begin_layout Section
Kodierung durch Fixpunktlogik
\end_layout

\begin_layout Standard
Die beschriebenen Relationen 
\begin_inset Formula $\bar{\mathrm{EV}}$
\end_inset

 werden nun verwendet, um die Auswertung jedes Schaltkreises durch eine
 Formel der Fixpunktlogik zu definieren.
\end_layout

\begin_layout Lemma
Sei 
\begin_inset Formula $\left(\mathcal{C}_{n}\right)_{n\in\mathbb{N}}$
\end_inset

 eine 
\begin_inset Formula $k$
\end_inset

-stellige, symmetrische, 
\begin_inset Formula $P$
\end_inset

-uniforme 
\begin_inset Formula $\left(\sigma,\mathbb{B}\right)$
\end_inset

-Schaltkreisfamilie.
 Für 
\begin_inset Formula $\mathbb{B}=\mathbb{B}_{\mathrm{std}}$
\end_inset

 existiert eine 
\begin_inset Formula $\left(\mathrm{LFP}+\mathbf{ORD}\right)\left[\sigma\right]$
\end_inset

-Formel 
\begin_inset Formula $\varphi$
\end_inset

 (beziehungsweise für 
\begin_inset Formula $\mathbb{B}=\mathbb{B}_{\mathrm{maj}}$
\end_inset

 eine 
\begin_inset Formula $\left(\mathrm{LFP}+\mathbf{ORD}+C\right)\left[\sigma\right]$
\end_inset

-Formel 
\begin_inset Formula $\varphi$
\end_inset

, so dass für 
\begin_inset Formula $n\in\mathbb{N}$
\end_inset

 und 
\begin_inset Formula $\mathfrak{A}\in\mathbf{FIN}^{\left(n\right)}\left(\sigma\right)$
\end_inset

 die Formel 
\begin_inset Formula $\varphi\left(\bar{x}\right)$
\end_inset

 die gleiche Anfrage definiert wie 
\begin_inset Formula $\mathcal{C}_{n}$
\end_inset

:
\end_layout

\begin_layout Lemma
\begin_inset Formula 
\[
q_{\mathcal{C}_{n}}\left(\mathfrak{A}\right)=q_{\varphi}\left(\mathfrak{A}\right)
\]

\end_inset


\end_layout

\begin_layout Standard
In diesem Abschnitt wird hauptsächlich die Folgerung aus Abschnitt 4.4 von
 
\begin_inset CommandInset citation
LatexCommand cite
key "AD2014"

\end_inset

 übernommen.
\end_layout

\begin_layout Subsection
\begin_inset CommandInset label
LatexCommand label
name "subsec:circuit-def"

\end_inset

Definition des Schaltkreises
\end_layout

\begin_layout Standard
Wenn die Schaltkreisfamilie (inklusive der rigiden Umformung) von einer
 
\begin_inset Formula $P$
\end_inset

-Turingmaschine berechnet wird, existiert nach dem Immerman-Vardi-Theorem
\begin_inset CommandInset citation
LatexCommand cite
key "Vardi:1982:CRQ:800070.802186,IMMERMAN198686"

\end_inset

 und Lemma 
\begin_inset CommandInset ref
LatexCommand ref
reference "lem:algo-rigid"

\end_inset

 eine Sammlung von 
\begin_inset Formula $\left(\mathrm{LFP}+\mathbf{ORD}\right)\left[\sigma\right]$
\end_inset

-Formeln 
\begin_inset Formula $\Phi$
\end_inset

, die auf einer Struktur 
\begin_inset Formula $\mathfrak{A}\in\mathbf{FIN}^{\left(n\right)}\left(\sigma\right)$
\end_inset

 ausgewertet den Schaltkreis 
\begin_inset Formula $\mathcal{C}_{n}$
\end_inset

 beschreiben.
\end_layout

\begin_layout Standard
\begin_inset Formula 
\[
\Phi\coloneqq\left(\varphi_{G},\varphi_{\mathcal{W}},\varphi_{\Omega},\left(\varphi_{\phi}\right)_{\phi\in\mathbb{B}\uplus\left\{ \mathbf{0},\mathbf{1},\mathtt{NOT}\right\} },\left(\varphi_{R}\right)_{R\in\sigma}\right)
\]

\end_inset

Für 
\begin_inset Formula $n<n_{0}$
\end_inset

 gibt es nur eine endliche Anzahl von festen Schaltkreisen 
\begin_inset Formula $\mathcal{C}_{n}$
\end_inset

 endlicher Größe, mit einer endlichen Anzahl von Isomorphietypen von Strukturen
 aus 
\begin_inset Formula $\mathbf{FIN}^{\left(n\right)}\left(\sigma\right)$
\end_inset

.
 Daher kann die Anfrage auf diesen Strukturen durch eine einzige 
\begin_inset Formula $\mathrm{FO}\left[\sigma\right]$
\end_inset

-Formel definiert werden.
 Wir befassen uns nur mit den Schaltkreisen 
\begin_inset Formula $\left(\mathcal{C}_{n}\right)_{n\geqslant n_{0}}$
\end_inset

, so dass 
\begin_inset Formula $\left|\mathcal{C}_{n}\right|\leqslant n^{c}$
\end_inset

.
\end_layout

\begin_layout Standard
Sei 
\begin_inset Formula $f_{G}:G\rightarrow\left[1,n\right]^{c}$
\end_inset

 eine geeignete Kodierung der höchstens 
\begin_inset Formula $n^{c}$
\end_inset

 Gates von 
\begin_inset Formula $\mathcal{C}_{n}$
\end_inset

, und 
\begin_inset Formula $f_{W}:\left[0,n^{c}\right]\rightarrow\left[0,n\right]^{c}$
\end_inset

 eine Kodierung von Zahlen, so dass für 
\begin_inset Formula $\bar{g},\bar{h},\bar{w}\in\left[0,n\right]^{c}$
\end_inset

 gilt:
\begin_inset Formula 
\begin{eqnarray*}
\mathfrak{A}\models\varphi_{G}\left[\bar{g}\right] & \Leftrightarrow & f_{G}^{-1}\bar{g}\in G\\
\mathfrak{A}\models\varphi_{W}\left[\bar{h}\bar{g}\bar{w}\right] & \Leftrightarrow & \mathcal{W}\left(f_{G}^{-1}\bar{h},f_{G}^{-1}\bar{g}\right)=f_{W}^{-1}\bar{w}\\
\mathfrak{A}\models\varphi_{\Omega}\left[\bar{t}\bar{g}\right] & \Leftrightarrow & \Omega\bar{t}=f_{G}^{-1}\bar{g}\\
 &  & \mathrm{für}\,\bar{t}\in\left[1,n\right]^{k}\\
\mathfrak{A}\models\varphi_{\phi}\left[\bar{g}\right] & \Leftrightarrow & \Sigma\left(f_{G}^{-1}\bar{g}\right)=\phi\\
 &  & \mathrm{für}\,\phi\in\mathbb{B}\uplus\left\{ \mathbf{0},\mathbf{1},\mathtt{NOT}\right\} \\
\mathfrak{A}\models\varphi_{R}\left[\bar{g}\bar{x}\right] & \Leftrightarrow & \Sigma\left(f_{G}^{-1}\bar{g}\right)=R\bar{x}\\
 &  & \mathrm{für}\,R/m\in\sigma,\,\bar{x}\in\left[1,n\right]^{m}
\end{eqnarray*}

\end_inset

Nur für ein 
\begin_inset Formula $\mathtt{MAJ}$
\end_inset

-Gate 
\begin_inset Formula $g$
\end_inset

 benötigen wir die genaue Vielfachheit der Kante 
\begin_inset Formula $\left(h,g\right)$
\end_inset

.
 Der Einfachheit halber definieren wir daher die Formel 
\begin_inset Formula $\varphi_{W}'$
\end_inset

, die nur prüft, ob 
\begin_inset Formula $\mathcal{W}\left(h,g\right)>0$
\end_inset

.
 
\begin_inset Formula 
\[
\varphi_{W}'\left(\bar{h}\bar{g}\right)\coloneqq\exists\bar{n}\left(\varphi_{W}\left(\bar{h}\bar{g}\bar{n}\right)\wedge\exists x\bigvee_{i=1}^{c}\neg n_{i}\leqslant x\right)
\]

\end_inset


\end_layout

\begin_layout Standard
Nach Lemma 
\begin_inset CommandInset ref
LatexCommand ref
reference "lem:algo-orb"

\end_inset

 ist die Bestimmung der Trägermengen 
\begin_inset Formula $\mathrm{sp}\left(g\right)$
\end_inset

 und Orbits in 
\begin_inset Formula $P$
\end_inset

.
 Daher existiert auch eine 
\begin_inset Formula $\mathrm{LFP}+\mathbf{ORD}\left[\sigma\right]$
\end_inset

-Formel 
\begin_inset Formula $\varphi_{\mathrm{sp}}$
\end_inset

, so dass gilt:
\begin_inset Formula 
\begin{eqnarray*}
\mathfrak{A}\models\varphi_{\mathrm{sp}}\left[\bar{g}u\right] & \Leftrightarrow & \mathfrak{A}\models\varphi_{G}\left[\bar{g}\right]\,\mathrm{und}\,u\in\mathrm{sp}\left(g\right)\\
 &  & \mathrm{f.a.}\,\bar{g}u\in\left[1,n\right]^{c+1}
\end{eqnarray*}

\end_inset

Ferner existieren für 
\begin_inset Formula $i\in\left[0,d\right]$
\end_inset

 die Formeln 
\begin_inset Formula $\varphi_{\mathrm{size},i}$
\end_inset

, die Größe von 
\begin_inset Formula $\mathrm{sp}\left(g\right)$
\end_inset

 mit 
\begin_inset Formula $i$
\end_inset

 vergleichen:
\begin_inset Formula 
\[
\mathfrak{A}\models\varphi_{\mathrm{size},i}\left[\bar{g}\right]\Leftrightarrow\left|\mathrm{sp}\left(g\right)\right|=i
\]

\end_inset


\end_layout

\begin_layout Standard
Schließlich definieren wir die Ordnung der Elemente 
\begin_inset Formula $\bar{\mathrm{sp}}\left(g\right)$
\end_inset

 mit den folgenden Formeln (hier sind 
\begin_inset Formula $\bar{g},u,v,w\in\mathbf{var}$
\end_inset

 Variablen):
\begin_inset Formula 
\begin{eqnarray*}
\varphi_{\mathrm{sp},1}\left(\bar{g}u\right) & \coloneqq & \varphi_{\mathrm{sp}}\left(\bar{g}u\right)\wedge\forall v\left(\varphi_{\mathrm{sp}}\left(\bar{g}u\right)\rightarrow u\leqslant v\right)\\
\varphi_{\mathrm{sp},i+1}\left(\bar{g}u\right) & \coloneqq & \varphi_{\mathrm{sp}}\left(\bar{g}u\right)\wedge\exists v\left(\neg\left(\varphi_{\mathrm{sp},i}\left(\bar{g}v\right)\rightarrow u\leqslant v\right)\wedge\forall w\left(\varphi_{\mathrm{sp}}\left(\bar{g}w\right)\rightarrow\left(w\leqslant v\vee u\leqslant w\right)\right)\right)
\end{eqnarray*}

\end_inset


\end_layout

\begin_layout Subsection
\begin_inset CommandInset label
LatexCommand label
name "subsec:circuit-eval"

\end_inset

Auswertung des Schaltkreises
\end_layout

\begin_layout Standard
Per Korollar 
\begin_inset CommandInset ref
LatexCommand ref
reference "cor:korollar-23"

\end_inset

 ist 
\begin_inset Formula $\left|\mathrm{sp}\left(g\right)\right|\leqslant\mathrm{sp}\left(\mathcal{C}_{n}\right)=d$
\end_inset

.
 Wir füllen alle Relationen 
\begin_inset Formula $\bar{\mathrm{EV}}\left(g\right)$
\end_inset

 mit 
\begin_inset Quotes gld
\end_inset


\begin_inset Formula $0$
\end_inset


\begin_inset Quotes grd
\end_inset

 auf eine einheitliche Länge 
\begin_inset Formula $d$
\end_inset

 auf.
 (Unsere Definition der 
\begin_inset Formula $\mathrm{LFP}+\mathbf{ORD}$
\end_inset

-Logik verwendet im Gegensatz zu 
\begin_inset CommandInset citation
LatexCommand cite
key "AD2014"

\end_inset

 nur einen Variablentyp, so dass jede Variable 
\begin_inset Formula $x\in\mathbf{var}$
\end_inset

 mit einem Wert 
\begin_inset Formula $\beta\left(x\right)\in A\uplus\left[0,n\right]$
\end_inset

 belegt werden kann.) 
\begin_inset Formula 
\[
\overline{\mathrm{EV}}\left(g\right)\coloneqq\left\{ \bar{a}'\mid\bar{a}'\in\bar{\mathrm{EV}}\left(g\right)\times\left\{ 0\right\} ^{d-\left|\mathrm{sp}\left(g\right)\right|}\right\} 
\]

\end_inset


\end_layout

\begin_layout Standard
Wir definieren die Relation 
\begin_inset Formula $\mathrm{EVAL}\subseteq\left[0,n\right]^{c}\times\left(A\uplus\left\{ 0\right\} \right)^{d}$
\end_inset

 definieren, so dass 
\begin_inset Formula $\bar{g}\bar{a}\in\mathrm{EVAL}$
\end_inset

 genau dann 
\begin_inset Formula $\bar{g}=f_{G}g$
\end_inset

 und 
\begin_inset Formula $\bar{a}\in\overline{\mathrm{EV}}\left(g\right)$
\end_inset

, beziehungsweise 
\begin_inset Formula $\left(a_{1},\cdots,a_{\left|\mathrm{sp}\left(g\right)\right|}\right)\in\bar{\mathrm{EV}}\left(g\right)$
\end_inset

.
\begin_inset Formula 
\[
\mathrm{EVAL}\coloneqq\left\{ \left(f_{G}g\right)\bar{a}\mid g\in G,\,\bar{a}\in\overline{\mathrm{EV}}\left(g\right)\right\} 
\]

\end_inset

Als erstes müssen wir für ein Tupel 
\begin_inset Formula $\bar{a}\in\left(A\uplus\left[0,n\right]\right)^{d}$
\end_inset

 und ein Gate 
\begin_inset Formula $g$
\end_inset

 prüfen, ob es eine gültige Abbildung von 
\begin_inset Formula $\pi:\mathrm{sp}\left(g\right)\rightarrow A$
\end_inset

 repräsentiert.
 Dafür müssen wir die Größe von 
\begin_inset Formula $\left|\mathrm{sp}\left(g\right)\right|$
\end_inset

 bestimmen, die Injektivität des Tupels 
\begin_inset Formula $\left(a_{1},\cdots,a_{\left|\mathrm{sp}\left(g\right)\right|}\right)\in A^{\left|\mathrm{sp}\left(g\right)\right|}$
\end_inset

 prüfen, und für den Rest des Tupels 
\begin_inset Formula $\left(a_{\left|\mathrm{sp}\left(g\right)\right|+1},\cdots,a_{d}\right)=\bar{0}$
\end_inset

 sicherstellen.
 
\begin_inset Formula 
\begin{eqnarray*}
\varphi_{A}\left(x\right) & \coloneqq & \neg\exists y\,x\leqslant y\\
\varphi_{0}\left(x\right) & \coloneqq & \forall y\,\left(\neg\varphi_{A}\left(y\right)\rightarrow x\leqslant y\right)\\
\varphi_{\mathrm{valid},k}\left(\bar{x}\right) & \coloneqq & \bigwedge_{1\leqslant i<j\leqslant k}\left(\varphi_{A}\left(x_{i}\right)\wedge\neg x_{i}=x_{j}\right)\bigwedge_{i\in\left[k+1,d\right]}\varphi_{0}\left(x_{i}\right)\\
\varphi_{\mathrm{valid}}\left(\bar{g}\bar{x}\right) & \coloneqq & \bigwedge_{i\in\left[0,d\right]}\left(\varphi_{\mathrm{size},i}\left(\bar{g}\right)\rightarrow\varphi_{\mathrm{valid},i}\left(\bar{x}\right)\right)
\end{eqnarray*}

\end_inset


\end_layout

\begin_layout Standard
Nun definieren wir die folgende 
\begin_inset Formula $\mathrm{LFP}+\mathbf{ORD}$
\end_inset

-Formel 
\begin_inset Formula $\varphi_{\sim}\left(\bar{u}\bar{v}\bar{x}\bar{y}\right)$
\end_inset

, die für eine Belegung 
\begin_inset Formula $\beta$
\end_inset

 entscheidet, ob für die Gates 
\begin_inset Formula $g=f_{G}^{-1}\beta\bar{u}$
\end_inset

 und 
\begin_inset Formula $h=f_{G}^{-1}\beta\bar{v}$
\end_inset

 die Abbildungen 
\begin_inset Formula $\pi_{1}\coloneqq\left(\bar{\mathrm{sp}}\left(g\right)\mapsto\beta\bar{x}\right)$
\end_inset

 und 
\begin_inset Formula $\pi_{2}\coloneqq\left(\bar{\mathrm{sp}}\left(h\right)\mapsto\beta\bar{y}\right)$
\end_inset

 gültig und mit 
\begin_inset Formula $\pi_{1}\sim_{\mathrm{sp}\left(g\right)\cap\mathrm{sp}\left(h\right)}\pi_{2}$
\end_inset

 zwischen den Gates 
\begin_inset Formula $g$
\end_inset

 und 
\begin_inset Formula $h$
\end_inset

 konsistent sind.
 
\begin_inset Formula 
\begin{eqnarray*}
\varphi_{\sim}\left(\bar{u}\bar{v}\bar{x}\bar{y}\right) & \coloneqq & \varphi_{\mathrm{valid}}\left(\bar{u}\bar{x}\right)\wedge\varphi_{\mathrm{valid}}\left(\bar{v}\bar{y}\right)\\
 &  & \wedge\bigwedge_{i,j\in\left[1,k\right]}\forall w\left(\left(\varphi_{\mathrm{sp},i}\left(\bar{u}w\right)\wedge\varphi_{\mathrm{sp},j}\left(\bar{v}w\right)\right)\rightarrow x_{i}=y_{j}\right)\\
 &  & \wedge\bigwedge_{i,j\in\left[1,k\right]}\forall w_{1}\forall w_{2}\left(\left(\varphi_{\mathrm{sp},i}\left(\bar{u}w_{1}\right)\wedge\varphi_{\mathrm{sp},j}\left(\bar{v}w_{2}\right)\wedge x_{i}=y_{j}\right)\rightarrow w_{1}=w_{2}\right)
\end{eqnarray*}

\end_inset


\end_layout

\begin_layout Standard
Zuletzt konstruieren wir die 
\begin_inset Formula $\mathrm{LFP}+\mathbf{ORD}\left[\sigma\right]$
\end_inset

-Formeln 
\begin_inset Formula $\psi_{s}\left(\bar{u}\bar{x}\right)$
\end_inset

, die für eine Belegung 
\begin_inset Formula $\beta$
\end_inset

 mit 
\begin_inset Formula $f_{G}^{-1}\beta\left(\bar{g}\right)=g$
\end_inset

 und 
\begin_inset Formula $\Sigma\left(g\right)=s$
\end_inset

 beziehungsweise 
\begin_inset Formula $s=R$
\end_inset

 und 
\begin_inset Formula $\Sigma\left(g\right)=R\bar{t}$
\end_inset

 entscheiden, ob 
\begin_inset Formula $\beta\left(\bar{u}\bar{v}\right)\subseteq\mathrm{EVAL}$
\end_inset

.
 Die Formeln für 
\begin_inset Formula $\mathbf{0}$
\end_inset

 und 
\begin_inset Formula $\mathbf{1}$
\end_inset

 sind trivial: 
\begin_inset Formula 
\begin{eqnarray*}
\psi_{\mathbf{0}}\left(\bar{u}\bar{x}\right) & \coloneqq & \neg x_{1}=x_{1}\\
\psi_{\mathbf{1}}\left(\bar{u}\bar{x}\right) & \coloneqq & x_{1}=x_{1}
\end{eqnarray*}

\end_inset

Für relationale Inputs mit 
\begin_inset Formula $\Sigma\left(g\right)=R\bar{t}$
\end_inset

 müssen wir mit der Formel 
\begin_inset Formula $\varphi_{R}\left(\bar{u}\bar{x}\right)$
\end_inset

 die Beschriftung 
\begin_inset Formula $\bar{t}\in U^{\mathrm{ar}\left(R\right)}$
\end_inset

 bestimmen, das Tupel 
\begin_inset Formula $\pi\bar{t}=\bar{a}\in A^{\mathrm{ar}\left(R\right)}$
\end_inset

 finden, dass auf die gegebene Abbildung 
\begin_inset Formula $\pi\coloneqq\left(\bar{\mathrm{sp}}\left(g\right)\mapsto\beta\bar{x}\right)$
\end_inset

 passt, und dann prüfen ob 
\begin_inset Formula $\bar{a}\in R^{\mathfrak{A}}$
\end_inset

 ist.
 
\begin_inset Formula 
\begin{eqnarray*}
\psi_{R}\left(\bar{u}\bar{x}\bar{y}\right) & \coloneqq & \exists\bar{y}\exists\bar{z}\left(\varphi_{R}\left(\bar{u}\bar{y}\right)\wedge R\bar{z}\wedge\bigwedge_{\substack{i\in\left[1,k\right]\\
j\in\left[1,d\right]
}
}\varphi_{\mathrm{sp},j}\left(\bar{u}y_{i}\right)\rightarrow z_{i}=x_{j}\right)\\
 &  & \mathrm{für}\,R/k\in\sigma
\end{eqnarray*}

\end_inset


\end_layout

\begin_layout Standard
Für 
\begin_inset Formula $\Sigma\left(g\right)\in\left\{ \mathtt{AND},\mathtt{OR},\mathtt{NOT}\right\} $
\end_inset

 müssen wir über alle Vorgänger 
\begin_inset Formula $h$
\end_inset

 von 
\begin_inset Formula $g$
\end_inset

 und alle zu der gegebenen Abbildung 
\begin_inset Formula $\pi:=\left(\bar{\mathrm{sp}}\left(g\right)\mapsto\bar{a}\right)$
\end_inset

 passenden Abbildungen 
\begin_inset Formula $\pi'\in\bar{\mathrm{Red}}\left(\pi,h\right)$
\end_inset

 quantifizieren, und diese mit dem entsprechenden Operator aggregieren:
 
\begin_inset Formula 
\begin{eqnarray*}
\psi_{\mathtt{OR}}\left(\bar{u}\bar{x}\right) & \coloneqq & \exists\bar{v}\exists\bar{y}\left(\varphi_{W}'\left(\bar{v}\bar{u}\right)\wedge\varphi_{\sim}\left(\bar{u}\bar{v}\bar{x}\bar{y}\right)\wedge\mathrm{EVAL}\left(\bar{v}\bar{y}\right)\right)\\
\psi_{\mathtt{AND}}\left(\bar{u}\bar{x}\right) & \coloneqq & \forall\bar{v}\forall\bar{y}\left(\left(\varphi_{W}'\left(\bar{v}\bar{u}\right)\wedge\varphi_{\sim}\left(\bar{u}\bar{v}\bar{x}\bar{y}\right)\right)\rightarrow\mathrm{EVAL}\left(\bar{v}\bar{y}\right)\right)\\
\psi_{\mathtt{NOT}}\left(\bar{u}\bar{x}\right) & \coloneqq & \forall\bar{v}\forall\bar{y}\left(\left(\varphi_{W}'\left(\bar{v}\bar{u}\right)\wedge\varphi_{\sim}\left(\bar{u}\bar{v}\bar{x}\bar{y}\right)\right)\rightarrow\neg\mathrm{EVAL}\left(\bar{v}\bar{y}\right)\right)
\end{eqnarray*}

\end_inset

(Ein 
\begin_inset Formula $\mathtt{NOT}$
\end_inset

-Gate behandeln wir hier wie ein 
\begin_inset Formula $\mathtt{NOR}$
\end_inset

-Gate - da wir bei der Definition des Schaltkreises gefordert haben, dass
 es nur einen Vorgänger hat, macht das keinen Unterschied.)
\end_layout

\begin_layout Standard
Für die 
\begin_inset Formula $\mathtt{MAJ}$
\end_inset

-Gates verwenden wir die Tatsache, dass die 
\begin_inset Formula $\mathrm{LFP}+\mathbf{ORD}$
\end_inset

-Logik Arithmetik unterstützt:
\begin_inset Formula 
\begin{eqnarray*}
\psi_{\mathrm{succ}}\left(x,y\right) & \coloneqq & \neg y\leqslant x\wedge\forall z\left(z\leqslant x\vee y\leqslant z\right)\\
\varphi_{\mathrm{succ}}\left(\bar{x}\bar{y}\right) & \coloneqq & \bigvee_{i=1}^{k}\bigwedge_{j=1}^{i-1}x_{i}=y_{i}\wedge\psi_{\mathrm{succ}}\left(x_{i},y_{i}\right)\wedge\bigwedge_{j=i+1}^{k}\left(x_{j}=\mathbf{n}\wedge y_{j}=\mathbf{0}\right)\\
\varphi_{+}\left(\bar{x}\bar{y}\bar{z}\right) & \coloneqq & \left[\mathrm{lfp}_{X\bar{u}\bar{v}}\left(\bar{u}=\bar{\mathbf{0}}\wedge\bar{v}=\bar{x}\right)\vee\left(X\bar{u}'\bar{v}'\wedge\varphi_{\mathrm{succ}}\left(\bar{u}'\bar{u}\right)\wedge\varphi_{\mathrm{succ}}\left(\bar{v}'\bar{v}\right)\right)\right]\left(\bar{y}\bar{z}\right)\\
\varphi_{\times}\left(\bar{x}\bar{y}\bar{z}\right) & \coloneqq & \left[\mathrm{lfp}_{X\bar{u}\bar{v}}\left(\bar{u}\bar{v}=\bar{\mathbf{0}}\right)\vee\left(X\bar{u}'\bar{v}'\wedge\varphi_{\mathrm{succ}}\left(\bar{u}'\bar{u}\right)\wedge\varphi_{+}\left(\bar{v}'\bar{x}\bar{v}\right)\right)\right]\left(\bar{y}\bar{z}\right)\\
\varphi_{\exp}\left(\bar{x}\bar{y}\bar{z}\right) & \coloneqq & \left[\mathrm{lfp}_{X\bar{u}\bar{v}}\left(\bar{u}\bar{v}=\bar{\mathbf{1}}\right)\vee\left(X\bar{u}'\bar{v}'\wedge\varphi_{\mathrm{succ}}\left(\bar{u}'\bar{u}\right)\wedge\varphi_{\times}\left(\bar{v}'\bar{x}\bar{v}\right)\right)\right]\left(\bar{y}\bar{z}\right)
\end{eqnarray*}

\end_inset


\end_layout

\begin_layout Standard
Für eine Formel 
\begin_inset Formula $\psi\left(\bar{x}\bar{u}\bar{y}\right)$
\end_inset

, die mit einem Parameter 
\begin_inset Formula $\bar{x}$
\end_inset

 eine Funktion 
\begin_inset Formula $q:\left[0,n^{c}\right]\rightarrow\left[0,n^{c}\right]$
\end_inset

 mit 
\begin_inset Formula $\mathfrak{A}\models\psi\left[\bar{a},f_{W}\left(i\right)f_{W}\left(q_{i}\right)\right]$
\end_inset

 berechnet, können wir die Summe 
\begin_inset Formula $\sum_{i=0}^{n^{c}}q_{i}$
\end_inset

 berechnen:
\end_layout

\begin_layout Standard
\begin_inset Formula 
\[
\varphi_{\mathrm{sum}}^{\psi\left(\bar{x}\right)}\left(\bar{z}\right)\coloneqq\left[\mathrm{lfp}_{X\bar{u}\bar{v}}\left(\bar{u}\bar{v}=\bar{\mathbf{0}}\right)\vee\left(\begin{array}{c}
X\bar{u}'\bar{v}'\wedge\varphi_{\mathrm{succ}}\left(\bar{u}'\bar{u}\right)\\
\wedge\psi\left(\bar{x}\bar{u}\bar{y}\right)\wedge\varphi_{+}\left(\bar{v}'\bar{y}\bar{v}\right)
\end{array}\right)\right]\left(\bar{\mathbf{n}}\bar{z}\right)
\]

\end_inset


\end_layout

\begin_layout Standard
Wir möchten gerne die erfüllenden Belegungen für 
\begin_inset Formula $\left(\mathrm{EVAL}\left(\bar{v}\bar{y}\right)\wedge\varphi_{\sim}\left(\bar{u}\bar{v}\bar{x}\dot{y}\right)\right)$
\end_inset

 zählen.
 Leider benötigen wir dafür einen 
\begin_inset Formula $k$
\end_inset

-stelligen Zählquantor 
\begin_inset Formula $\exists^{=\bar{m}}\bar{y}$
\end_inset

, den die Definition der Zählerweiterung 
\begin_inset Formula $\mathcal{L}+\Upsilon+C$
\end_inset

 nicht zulässt.
 Speziell in der Fixpunktlogik (selbst mit disjunkter numerischer Erweiterung)
 gibt es aber eine Reduktion auf den einstelligen Zählquantor:
\end_layout

\begin_layout Proposition

\series bold
\begin_inset CommandInset label
LatexCommand label
name "prop:kary-counting"

\end_inset

Grädel und Otto (1993)
\begin_inset CommandInset citation
LatexCommand cite
key "Gradel:1992:IDC:647842.736402"

\end_inset


\end_layout

\begin_layout Proposition
Jede Formel der 
\begin_inset Formula $\mathrm{LFP}+C^{k}$
\end_inset

 mit 
\begin_inset Formula $k$
\end_inset

-stelligen Zählquantoren ist auch in 
\begin_inset Formula $\mathrm{LFP}+C$
\end_inset

 ausdrückbar.
 
\end_layout

\begin_layout Standard
Die Formel 
\begin_inset Formula $\psi_{\mathrm{eval}}$
\end_inset

 wird daher bedenkenlos mit dem Quantor 
\begin_inset Formula $\exists^{=\bar{m}}\bar{y}$
\end_inset

 geschrieben:
\end_layout

\begin_layout Standard
\begin_inset Formula 
\[
\psi_{\mathrm{eval}}\left(\bar{u}\bar{x}\bar{v}\bar{m}\right)\coloneqq\exists^{=\bar{m}}\bar{y}\left(\mathrm{EVAL}\left(\bar{v}\bar{y}\right)\wedge\varphi_{\sim}\left(\bar{u}\bar{v}\bar{x}\bar{y}\right)\right)
\]

\end_inset


\end_layout

\begin_layout Standard
Nun definieren wir die Operation des 
\begin_inset Formula $\mathtt{MAJ}$
\end_inset

-Gates wie folgt.
 Hierbei zählt 
\begin_inset Formula $\psi_{\mathrm{eval}}$
\end_inset

 die passenden, erfüllenden Belegungen eines Vorgängers; 
\begin_inset Formula $\psi_{\mathrm{weight}}$
\end_inset

 multipliziert diese mit dem Kantengewicht 
\begin_inset Formula $\mathcal{W}\left(h,g\right)$
\end_inset

.
 
\begin_inset Formula $\psi_{\mathrm{count}}$
\end_inset

 und 
\begin_inset Formula $\psi_{\mathrm{total}}$
\end_inset

 arbeiten analog mit allen passenden Belegungen.
 Schließlich prüft 
\begin_inset Formula $\psi_{\mathtt{MAJ}}$
\end_inset

, ob die gewichtete Summe aller erfüllenden Belegungen mindestens die Hälfte
 der gewichteten Summe aller passenden Belegungen erreicht.
 
\begin_inset Formula 
\begin{eqnarray*}
\psi_{\mathrm{weight}}\left(\bar{u}\bar{x}\bar{v}\bar{n}\right) & \coloneqq & \exists\bar{m}\exists\bar{w}\left(\varphi_{W}\left(\bar{v}\bar{u}\bar{w}\right)\wedge\psi_{\mathrm{eval}}\left(\bar{u}\bar{v}\bar{x}\bar{m}\right)\wedge\varphi_{\times}\left(\bar{m}\bar{w}\bar{n}\right)\right)\\
\psi_{\mathrm{count}}\left(\bar{u}\bar{x}\bar{v}\bar{m}\right) & \coloneqq & \bar{m}=\#\bar{y}\,\varphi_{\sim}\left(\bar{u}\bar{v}\bar{x}\bar{y}\right)\\
\psi_{\mathrm{total}}\left(\bar{u}\bar{x}\bar{v}\bar{n}\right) & \coloneqq & \exists\bar{m}\exists\bar{w}\left(\varphi_{W}\left(\bar{v}\bar{u}\bar{w}\right)\wedge\psi_{\mathrm{total}}\left(\bar{u}\bar{v}\bar{x}\bar{m}\right)\wedge\varphi_{\times}\left(\bar{m}\bar{w}\bar{n}\right)\right)\\
\psi_{\mathtt{MAJ}}\left(\bar{u}\bar{x}\right) & \coloneqq & \exists\bar{w}\exists\bar{y}\exists\bar{z}\left(\varphi_{\mathrm{sum}}^{\psi_{\mathrm{weight}}\left(\bar{u}\bar{x}\right)}\left(\bar{w}\right)\wedge\varphi_{+}\left(\bar{w}\bar{w}\bar{y}\right)\wedge\psi_{\mathrm{sum}}^{\varphi_{\mathrm{total}}\left(\bar{u}\bar{x}\right)}\left(\bar{z}\right)\wedge\bar{y}\leqslant\bar{z}\right)
\end{eqnarray*}

\end_inset

Dies entspricht der Definition von 
\begin_inset Formula $\mathrm{EV}\left(g\right)$
\end_inset

 für 
\begin_inset Formula $\mathtt{MAJ}$
\end_inset

-Gates aus dem vorhergehenden Abschnitt:
\end_layout

\begin_layout Standard
\begin_inset Formula 
\begin{eqnarray*}
\mathfrak{A}\models\psi_{\mathtt{MAJ}}\left[\bar{g}\bar{a}\right] & \Leftrightarrow & 2\sum_{h\in H}\mathcal{W}\left(h,f_{G}^{-1}\bar{g}\right)\left|\bar{\mathrm{Red}}\left(\bar{a},h\right)\cap\bar{\mathrm{EV}}\left(h\right)\right|\geqslant\sum_{h\in H}\mathcal{W}\left(h,f_{G}^{-1}\bar{g}\right)\left|\bar{\mathrm{Red}}\left(\bar{a},h\right)\right|
\end{eqnarray*}

\end_inset


\end_layout

\begin_layout Standard
Die verschiedenen Auswertungs-Formeln werden zusammengefügt:
\begin_inset Formula 
\begin{eqnarray*}
\varphi_{\mathrm{EVAL}}\left(\bar{u}\bar{x}\right) & \coloneqq & \varphi_{\mathrm{valid}}\left(\bar{u}\bar{x}\right)\wedge\\
 &  & \bigwedge_{s\in\mathbb{B}\uplus\left\{ \mathbf{0},\mathbf{1},\mathtt{NOT}\right\} }\left(\varphi_{s}\left(\bar{u}\right)\rightarrow\psi_{s}\left(\bar{u}\bar{x}\right)\right)\\
 &  & \bigwedge_{R/k\in\sigma}\left(\exists\bar{t}\varphi_{R}\left(\bar{u}\bar{t}\right)\rightarrow\psi_{R}\left(\bar{u}\bar{x}\right)\right)
\end{eqnarray*}

\end_inset

Zum Schluss formulieren wir eine Formel, die für ein gegebenes Anfragetupel
 
\begin_inset Formula $\beta\bar{x}\in A^{k}$
\end_inset

 wie folgt vorgeht: Finde ein Tupel 
\begin_inset Formula $\bar{t}\in U^{k}$
\end_inset

, das Gate 
\begin_inset Formula $g=\Omega\left(\bar{t}\right)$
\end_inset

 und eine gültige Abbildung 
\begin_inset Formula $\pi\coloneqq\left(\bar{\mathrm{sp}}\left(g\right)\mapsto\bar{b}\right)$
\end_inset

, so dass 
\begin_inset Formula $\beta x_{j}=b_{i}$
\end_inset

 genau dann wenn 
\begin_inset Formula $\bar{\mathrm{sp}}\left(g\right)_{j}=t_{i}$
\end_inset

, und prüfe, ob 
\begin_inset Formula $\bar{b}\in\bar{\mathrm{EV}}\left(g\right)$
\end_inset

 gilt.
 
\begin_inset Formula 
\begin{eqnarray*}
\varphi\left(\bar{x}\right) & \coloneqq\exists\bar{t}\exists\bar{u}\exists\bar{z}\,(\\
 &  & \varphi_{\Omega}\left(\bar{u}\bar{t}\right)\wedge\psi_{\mathrm{valid}}\left(\bar{u}\bar{z}\right)\\
 &  & \wedge\bigwedge_{\substack{i\in\left[1,k\right]\\
j\in\left[1,d\right]
}
}\left(\psi_{\mathrm{sp},j}\left(\bar{u}t_{i}\right)\rightarrow z_{i}=x_{i}\right)\\
 &  & \wedge\left[\mathrm{lfp}_{\mathrm{EVAL},\bar{u}\bar{x}}\psi_{\mathrm{EVAL}}\right]\left(\bar{u}\bar{z}\right)\\
 & )
\end{eqnarray*}

\end_inset


\end_layout

\begin_layout Subsection
\begin_inset CommandInset label
LatexCommand label
name "subsec:p-poly-sbc"

\end_inset


\begin_inset Formula $P/\mathrm{poly}$
\end_inset

-uniforme Schaltkreise
\end_layout

\begin_layout Standard
Für eine 
\begin_inset Formula $P/\mathrm{poly}$
\end_inset

-uniforme Schaltkreisfamilie ersetzen wir die Formeln 
\begin_inset Formula $\Phi$
\end_inset

 (siehe Abschnitt 
\begin_inset CommandInset ref
LatexCommand ref
reference "subsec:circuit-def"

\end_inset

) durch 
\begin_inset Formula $\mathbf{ARB}$
\end_inset

-Prädikate, die den Schaltkreis festlegen.
 Der Abschnitt 
\begin_inset CommandInset ref
LatexCommand ref
reference "subsec:circuit-eval"

\end_inset

 bleibt davon unberührt, und wir beweisen:
\end_layout

\begin_layout Lemma
Sei 
\begin_inset Formula $\left(\mathcal{C}_{n}\right)_{n\in\mathbb{N}}$
\end_inset

 eine 
\begin_inset Formula $k$
\end_inset

-stellige, rigide, symmetrische, 
\begin_inset Formula $P/\mathrm{poly}$
\end_inset

-uniforme 
\begin_inset Formula $\left(\sigma,\mathbb{B}\right)$
\end_inset

-Multischaltkreisfamilie.
 Für 
\begin_inset Formula $\mathbb{B}=\mathbb{B}_{\mathrm{std}}$
\end_inset

 existiert eine 
\begin_inset Formula $\left(\mathrm{LFP}+\mathbf{ARB}\right)\left[\sigma\right]$
\end_inset

-Formel 
\begin_inset Formula $\varphi$
\end_inset

 (beziehungsweise für 
\begin_inset Formula $\mathbb{B}=\mathbb{B}_{\mathrm{maj}}$
\end_inset

 eine 
\begin_inset Formula $\left(\mathrm{LFP}+\mathbf{ARB}+C\right)\left[\sigma\right]$
\end_inset

-Formel 
\begin_inset Formula $\varphi$
\end_inset

, so dass für 
\begin_inset Formula $n\in\mathbb{N}$
\end_inset

 und 
\begin_inset Formula $\mathfrak{A}\in\mathbf{FIN}^{\left(n\right)}\left(\sigma\right)$
\end_inset

 die Formel 
\begin_inset Formula $\varphi\left(\bar{x}\right)$
\end_inset

 die gleiche Anfrage definiert wie 
\begin_inset Formula $\mathcal{C}_{n}$
\end_inset

.
\end_layout

\begin_layout Section
Schaltkreise konstanter Tiefe
\end_layout

\begin_layout Lemma
\begin_inset CommandInset label
LatexCommand label
name "lem:ac0-fo"

\end_inset

Sei 
\begin_inset Formula $\left(\mathcal{C}_{n}\right)_{n\in\mathbb{N}}$
\end_inset

 eine symmetrische, 
\begin_inset Formula $\left(\sigma,\mathbb{B}\right)$
\end_inset

-Schaltkreisfamilie mit konstanter 
\begin_inset Formula $c$
\end_inset

-Tiefe und 
\begin_inset Formula $n^{c}$
\end_inset

-Größe.
 Es existiert eine 
\begin_inset Formula $\left(\mathrm{FO}+\Upsilon\right)\left[\sigma\right]$
\end_inset

-Formel 
\begin_inset Formula $\varphi$
\end_inset

, so dass für 
\begin_inset Formula $n\in\mathbb{N}$
\end_inset

 und 
\begin_inset Formula $\mathfrak{A}\in\mathbf{FIN}^{\left(n\right)}\left(\sigma\right)$
\end_inset

 die Formel 
\begin_inset Formula $\varphi\left(\bar{x}\right)$
\end_inset

 die gleiche Anfrage definiert wie 
\begin_inset Formula $\mathcal{C}_{n}$
\end_inset

.
\end_layout

\begin_layout Lemma
Wenn 
\begin_inset Formula $\left(\mathcal{C}_{n}\right)_{n\in\mathbb{N}}$
\end_inset

 
\begin_inset Formula $\mathrm{LOGSPACE}$
\end_inset

-uniform ist, so ist 
\begin_inset Formula $\Upsilon=\mathbf{BIT}$
\end_inset

, ansonsten ist 
\begin_inset Formula $\Upsilon=\mathbf{ARB}$
\end_inset

.
\end_layout

\begin_layout Standard
Hierfür stellen wir zunächst eine alternierende Normalform für den Schaltkreis
 
\begin_inset Formula $\mathcal{C}_{n}$
\end_inset

 her:
\end_layout

\begin_layout Enumerate
Jedes Gate hat nur einen Nachfolger.
\end_layout

\begin_layout Enumerate
Jedes 
\begin_inset Formula $\mathtt{AND}$
\end_inset

-Gate ist Vorgänger eines 
\begin_inset Formula $\mathtt{OR}$
\end_inset

-Gates, und umgekehrt.
\end_layout

\begin_layout Enumerate
Jedes Input ist Vorgänger eines 
\begin_inset Formula $\mathtt{OR}$
\end_inset

-Gates oder eines 
\begin_inset Formula $\mathtt{NOT}$
\end_inset

-Gates.
\end_layout

\begin_layout Enumerate
Jedes Output ist mit 
\begin_inset Formula $\mathtt{AND}$
\end_inset

 markiert.
\end_layout

\begin_layout Enumerate
Alle Wege von einem negierten Input zu einem Output haben die Länge 
\begin_inset Formula $4c+1$
\end_inset

.
\end_layout

\begin_layout Enumerate
Alle Wege von einem nicht-negierten Input zu einem Output haben die Länge
 
\begin_inset Formula $4c$
\end_inset

.
\end_layout

\begin_layout Standard
Die Normalform wird durch den Algorithmus 
\begin_inset CommandInset ref
LatexCommand ref
reference "alg:ac0-normal-form"

\end_inset

 berechnet.
 Der Algorithmus benötigt 
\begin_inset Formula $T\cdot\log\left(\left|G\right|\right)\leqslant4c^{2}\cdot\log n$
\end_inset

 Speicherplatz, weil die Rekursionstiefe mit 
\begin_inset Formula $T\leqslant4c$
\end_inset

 konstant beschränkt ist.
 Damit läuft der Algorithmus in 
\begin_inset Formula $\mathrm{LOGSPACE}$
\end_inset

.
\end_layout

\begin_layout Standard
\begin_inset Float algorithm
wide false
sideways false
status open

\begin_layout LyX-Code
NF(
\begin_inset Formula $i,g,g',\mathrm{state}$
\end_inset

):
\begin_inset Separator latexpar
\end_inset


\end_layout

\begin_deeper
\begin_layout LyX-Code
Falls 
\begin_inset Formula $\Sigma\left(g\right)=\mathtt{NOT}$
\end_inset

:
\begin_inset Separator latexpar
\end_inset


\end_layout

\begin_deeper
\begin_layout LyX-Code
Finde den Vorgänger 
\begin_inset Formula $h$
\end_inset

 von 
\begin_inset Formula $g$
\end_inset

.
\end_layout

\begin_layout LyX-Code
Fahre fort mit NF
\begin_inset Formula $\left(i,h,g,\neg\mathrm{state}\right)$
\end_inset

 und brich ab.
\end_layout

\end_deeper
\begin_layout LyX-Code
Gib 
\begin_inset Formula $g$
\end_inset

 als neues Gate aus.
\end_layout

\begin_layout LyX-Code
Falls 
\begin_inset Formula $i$
\end_inset

 gerade ist und 
\begin_inset Formula $\Sigma\left(g\right)=\mathtt{AND}$
\end_inset

:
\begin_inset Separator latexpar
\end_inset


\end_layout

\begin_deeper
\begin_layout LyX-Code
Sei 
\begin_inset Formula $g''$
\end_inset

 ein Gate mit 
\begin_inset Formula $\Sigma\left(g''\right)=\mathtt{OR}$
\end_inset

.
\end_layout

\begin_layout LyX-Code
Gib 
\begin_inset Formula $g''$
\end_inset

 und die Kanten 
\begin_inset Formula $\left(g,g''\right),\left(g'',g'\right)$
\end_inset

 aus.
\end_layout

\end_deeper
\begin_layout LyX-Code
Falls 
\begin_inset Formula $i$
\end_inset

 ungerade ist und 
\begin_inset Formula $\Sigma\left(g\right)=\mathtt{OR}$
\end_inset

:
\begin_inset Separator latexpar
\end_inset


\end_layout

\begin_deeper
\begin_layout LyX-Code
(Analog mit 
\begin_inset Formula $\Sigma\left(g''\right)=\mathtt{AND}$
\end_inset

.)
\end_layout

\end_deeper
\begin_layout LyX-Code
Falls 
\begin_inset Formula $\Sigma\left(g\right)=R\bar{t}$
\end_inset

 oder 
\begin_inset Formula $\Sigma\left(g\right)\in\left\{ \mathbf{0},\mathbf{1}\right\} $
\end_inset

:
\begin_inset Separator latexpar
\end_inset


\end_layout

\begin_deeper
\begin_layout LyX-Code
Falls 
\begin_inset Formula $\mathrm{state}=\textsc{False}$
\end_inset

 und 
\begin_inset Formula $\Sigma\left(g\right)\in\left\{ \mathbf{0},\mathbf{1}\right\} $
\end_inset

:
\begin_inset Separator latexpar
\end_inset


\end_layout

\begin_deeper
\begin_layout LyX-Code
Kehre 
\begin_inset Formula $\Sigma\left(g\right)$
\end_inset

 um und setze 
\begin_inset Formula $\mathrm{\mathrm{state}\leftarrow\textsc{True}}$
\end_inset

.
\end_layout

\end_deeper
\begin_layout LyX-Code
Falls 
\begin_inset Formula $\mathrm{state}=\textsc{True}$
\end_inset

:
\begin_inset Separator latexpar
\end_inset


\end_layout

\begin_deeper
\begin_layout LyX-Code
Erzeuge einen alternierenden Weg der Länge 
\begin_inset Formula $4c-i$
\end_inset

 von 
\begin_inset Formula $g$
\end_inset

 zu 
\begin_inset Formula $g'$
\end_inset

.
\end_layout

\end_deeper
\begin_layout LyX-Code
Sonst:
\begin_inset Separator latexpar
\end_inset


\end_layout

\begin_deeper
\begin_layout LyX-Code
Verbinde 
\begin_inset Formula $g$
\end_inset

 mit einem 
\begin_inset Formula $\mathtt{NOT}$
\end_inset

-Gate 
\begin_inset Formula $g''$
\end_inset

.
\end_layout

\begin_layout LyX-Code
Erzeuge einen alternierenden Weg der Länge 
\begin_inset Formula $4c-i$
\end_inset

 von 
\begin_inset Formula $g''$
\end_inset

 zu 
\begin_inset Formula $g'$
\end_inset

.
\end_layout

\end_deeper
\end_deeper
\begin_layout LyX-Code
Für jeden Vorgänger 
\begin_inset Formula $h$
\end_inset

 von 
\begin_inset Formula $g$
\end_inset

:
\begin_inset Separator latexpar
\end_inset


\end_layout

\begin_deeper
\begin_layout LyX-Code
NF(
\begin_inset Formula $i+1,h,g,\mathrm{state}$
\end_inset

)
\end_layout

\end_deeper
\end_deeper
\begin_layout LyX-Code
Main:
\begin_inset Separator latexpar
\end_inset


\end_layout

\begin_deeper
\begin_layout LyX-Code
Für 
\begin_inset Formula $g\in G$
\end_inset

:
\begin_inset Separator latexpar
\end_inset


\end_layout

\begin_deeper
\begin_layout LyX-Code
Falls 
\begin_inset Formula $g$
\end_inset

 keine Nachfolger hat:
\begin_inset Separator latexpar
\end_inset


\end_layout

\begin_deeper
\begin_layout LyX-Code
Sei 
\begin_inset Formula $g'$
\end_inset

 ein neues 
\begin_inset Formula $\mathtt{AND}$
\end_inset

-Gate.
\end_layout

\begin_layout LyX-Code
Gib 
\begin_inset Formula $g'$
\end_inset

 aus.
\end_layout

\begin_layout LyX-Code
Für 
\begin_inset Formula $\bar{t}\in U^{k}$
\end_inset

:
\begin_inset Separator latexpar
\end_inset


\end_layout

\begin_deeper
\begin_layout LyX-Code
Gib 
\begin_inset Formula $\Omega\left(\bar{t}\right)=g'$
\end_inset

 aus.
\end_layout

\end_deeper
\begin_layout LyX-Code
NF(
\begin_inset Formula $1,g,g'$
\end_inset

).
\end_layout

\end_deeper
\end_deeper
\end_deeper
\begin_layout Plain Layout
\begin_inset Caption Standard

\begin_layout Plain Layout
\begin_inset CommandInset label
LatexCommand label
name "alg:ac0-normal-form"

\end_inset

Normalform für Schaltkreise konstanter Tiefe
\end_layout

\end_inset


\end_layout

\begin_layout Plain Layout

\end_layout

\end_inset


\end_layout

\begin_layout Standard
Die (nicht rigide) alternierende Normalform eines rigiden, symmetrischen
 Schaltkreises hat immer noch einen eindeutigen Automorphismus 
\begin_inset Formula $\hat{\pi}\in\mathrm{Aut}_{\mathcal{C}'}$
\end_inset

 für jede Permutation 
\begin_inset Formula $\pi\in\mathrm{Sym}_{U}$
\end_inset

.
 Per Induktion über die Tiefe sehen wir, dass für jedes Gate 
\begin_inset Formula $g\in G$
\end_inset

, jeden Vorgänger 
\begin_inset Formula $h$
\end_inset

 von 
\begin_inset Formula $G$
\end_inset

 und jede Permutation 
\begin_inset Formula $\pi\in\mathrm{Sym}_{U}$
\end_inset

 gilt: Wenn 
\begin_inset Formula $\hat{\pi}g\in G$
\end_inset

 eindeutig ist, dann ist es auch 
\begin_inset Formula $\hat{\pi}h$
\end_inset

.
\end_layout

\begin_layout Standard
Wenn die Schaltkreisfamilie (inklusive der rigiden Umformung, und deren
 Normalform) von einer 
\begin_inset Formula $\mathrm{LOGSPACE}$
\end_inset

-Turingmaschine berechnet wird, existiert nach Immerman
\begin_inset CommandInset citation
LatexCommand cite
key "immerman2012descriptive"

\end_inset

 eine Sammlung von 
\begin_inset Formula $\mathrm{FO}+\mathbf{BIT}$
\end_inset

-Formeln 
\begin_inset Formula $\Phi$
\end_inset

, die auf 
\begin_inset Formula $\mathfrak{A}\in\mathbf{FIN}^{\left(n\right)}\left(\varphi\right)$
\end_inset

 ausgewertet den Schaltkreis 
\begin_inset Formula $\mathcal{C}_{n}$
\end_inset

 beschreiben:
\end_layout

\begin_layout Standard
\begin_inset Formula 
\[
\Phi\coloneqq\left(\varphi_{G},\varphi_{\mathcal{W}},\varphi_{\Omega},\left(\varphi_{\phi}\right)_{\phi\in\mathbb{B}\uplus\left\{ \mathbf{0},\mathbf{1},\mathtt{NOT}\right\} },\left(\varphi_{R}\right)_{R\in\sigma}\right)
\]

\end_inset

(Wenn die Schaltkreisfamilie nur 
\begin_inset Formula $P/\mathrm{poly}$
\end_inset

-uniform ist, dann ersetzen wir 
\begin_inset Formula $\Phi$
\end_inset

 stattdessen durch entsprechend gewählte 
\begin_inset Formula $\mathbf{ARB}$
\end_inset

-Prädikate.)
\end_layout

\begin_layout Standard
Hierbei sei 
\begin_inset Formula $f_{G}:G\rightarrow\left[1,n\right]^{d}$
\end_inset

 eine geeignete Kodierung der höchstens 
\begin_inset Formula $n^{d}$
\end_inset

 Gates von 
\begin_inset Formula $\mathcal{C}_{n}$
\end_inset

, und 
\begin_inset Formula $f_{W}:\left[1,n^{d}\right]\rightarrow\left[1,n\right]^{d}$
\end_inset

 eine Kodierung von Zahlen, so dass für 
\begin_inset Formula $\bar{g},\bar{h},\bar{w}\in\left[0,n\right]^{d}$
\end_inset

:
\begin_inset Formula 
\begin{eqnarray*}
\mathfrak{A}\models\varphi_{G}\left[\bar{g}\right] & \Leftrightarrow & f_{G}^{-1}\left(\bar{g}\right)\in G\\
\mathfrak{A}\models\varphi_{W}\left[\bar{h}\bar{g}\bar{w}\right] & \Leftrightarrow & \mathcal{W}\left(f_{G}^{-1}\left(\bar{h}\right),f_{G}^{-1}\left(\bar{g}\right)\right)=f_{W}^{-1}\left(\bar{w}\right)\\
\mathfrak{A}\models\varphi_{\Omega}\left[\bar{t}\bar{g}\right] & \Leftrightarrow & \Omega\left(\bar{t}\right)=f_{G}^{-1}\left(\bar{g}\right)\\
 &  & \mathrm{für}\,\bar{t}\in\left[1,n\right]^{k}\\
\mathfrak{A}\models\varphi_{\phi}\left[\bar{g}\right] & \Leftrightarrow & \Sigma\left(f_{G}^{-1}\left(\bar{g}\right)\right)=\phi\\
 &  & \mathrm{für}\,\phi\in\mathbb{B}\uplus\left\{ \mathbf{0},\mathbf{1},\mathtt{NOT}\right\} \\
\mathfrak{A}\models\varphi_{R}\left[\bar{g}\bar{x}\right] & \Leftrightarrow & \Sigma\left(f_{G}^{-1}\left(\bar{g}\right)\right)=R\bar{x}\\
 &  & \mathrm{für}\,R/m\in\sigma,\,\bar{x}\in\left[1,n\right]^{m}
\end{eqnarray*}

\end_inset


\begin_inset Formula 
\[
\varphi_{W}'\left(\bar{h}\bar{g}\right)\coloneqq\exists\bar{n}\left(\varphi_{W}\left(\bar{h}\bar{g}\bar{n}\right)\wedge\exists x\bigvee_{i=1}^{c}\neg n_{i}\leqslant x\right)
\]

\end_inset


\end_layout

\begin_layout Standard
Da auch die Algorithmen 
\begin_inset CommandInset ref
LatexCommand ref
reference "alg:aut"

\end_inset

 und 
\begin_inset CommandInset ref
LatexCommand ref
reference "alg:orbits"

\end_inset

 in 
\begin_inset Formula $\mathrm{LOGSPACE}$
\end_inset

 den Automorphismus und die Träger und Orbits berechnen, existiert eine
 
\begin_inset Formula $\mathrm{FO}+\mathbf{BIT}$
\end_inset

-Formel 
\begin_inset Formula $\varphi_{\mathrm{sp}}\left(\bar{u}x\right)$
\end_inset

, die von 
\begin_inset Formula $\beta$
\end_inset

 auf 
\begin_inset Formula $\mathfrak{A}\in\mathbf{FIN}^{\left(n\right)}\left(\sigma\right)$
\end_inset

 erfüllt wird, falls 
\begin_inset Formula $\beta x\in\mathrm{sp}\left(f_{G}^{-1}\bar{u}\right)$
\end_inset

.
 
\end_layout

\begin_layout Standard
Analog zu Abschnitt 
\begin_inset CommandInset ref
LatexCommand ref
reference "subsec:circuit-def"

\end_inset

 können wir daraus auch die 
\begin_inset Formula $\mathrm{FO}+\mathbf{BIT}$
\end_inset

-Formeln 
\begin_inset Formula $\varphi_{\mathrm{size},i}$
\end_inset

 und 
\begin_inset Formula $\varphi_{\mathrm{sp},i}$
\end_inset

 erzeugen.
 Ebenso sind die Formeln 
\begin_inset Formula $\varphi_{\mathrm{valid}}$
\end_inset

 und 
\begin_inset Formula $\varphi_{\sim}$
\end_inset

 und 
\begin_inset Formula $\varphi_{R}$
\end_inset

 aus Abschnitt 
\begin_inset CommandInset ref
LatexCommand ref
reference "subsec:circuit-eval"

\end_inset

 nun in 
\begin_inset Formula $\mathrm{FO}+\mathbf{BIT}$
\end_inset

 definierbar, da sie ihren Teilformeln selbst keine Fixpunkt-Operatoren
 hinzufügen.
\end_layout

\begin_layout Standard
Die Formel 
\begin_inset Formula $\varphi_{\mathrm{EVAL}}\left(\bar{u}_{1}\bar{z}_{1}\right)$
\end_inset

 quantifiziert nun über jeden Weg von einem Input zu dem Output 
\begin_inset Formula $g_{1}=f_{G}^{-1}\bar{u}_{1}$
\end_inset

, und prüft dann für jeden Schritt, ob eine korrekte Kante 
\begin_inset Formula $\left(g_{i+1},g_{i}\right)\in W$
\end_inset

 mit 
\begin_inset Formula $g_{i}=f_{G}^{-1}\bar{u}_{i}$
\end_inset

 gewählt wurde, und ob die Abbildungen 
\begin_inset Formula $\left(\bar{\mathrm{sp}}\left(g_{i}\right)\mapsto\bar{x}_{i}\right)$
\end_inset

 und 
\begin_inset Formula $\left(\bar{\mathrm{sp}}\left(g_{i+1}\right)\mapsto\bar{x}_{i+1}\right)$
\end_inset

 konsistent sind.
 
\begin_inset Formula 
\begin{eqnarray*}
\varphi_{\mathrm{EVAL}}\left(\bar{u}_{1}\bar{z}_{1}\right) & \coloneqq & \left(\forall\bar{u}_{2i}\forall\bar{x}_{2i}\exists\bar{u}_{2i+1}\exists\bar{x}_{2i+1}\right)_{1\leqslant i\leqslant2c}(\\
 &  & \bigwedge_{i=1}^{4c}\left(\varphi_{W}'\left(\bar{u}_{i+1}\bar{u}_{i}\right)\wedge\varphi_{\sim}\left(\bar{u}_{i}\bar{u}_{i+1}\bar{x}_{i}\bar{x}_{i+1}\right)\right)\wedge\\
 &  & \bigwedge_{R\in\sigma}\left(\exists\bar{t}\varphi_{R}\left(\bar{u}_{4c+1}\bar{t}\right)\rightarrow\psi_{R}\left(\bar{u}_{4c+1}\bar{x}_{4c+1}\right)\right)\wedge\\
 &  & \forall\bar{u}'(\left(\varphi_{W}'\left(\bar{u}'\bar{u}_{4c+1}\right)\wedge\varphi_{\mathtt{NOT}}\left(\bar{u}'\right)\right)\rightarrow\\
 &  & \,\,\,\,\,\,\,\,\bigwedge_{R\in\sigma}\left(\exists\bar{t}\varphi_{R}\left(\bar{u}'\bar{t}\right)\rightarrow\neg\psi_{R}\left(\bar{u}'\bar{x}'\right)\right)\\
 &  & )\wedge\\
 &  & \bigwedge_{s\in\left\{ \mathbf{0},\mathbf{1}\right\} }\left(\varphi_{s}\left(\bar{u}_{4c+1}\right)\rightarrow\psi_{s}\left(\bar{u}_{4c+1}\bar{x}\right)\right)\\
 & )
\end{eqnarray*}

\end_inset

Nun berechnet 
\begin_inset Formula $\varphi_{\mathrm{EVAL}}\left(\bar{u}_{1}\bar{z}_{1}\right)$
\end_inset

 für ein Output-Gate 
\begin_inset Formula $g_{1}=f_{G}^{-1}\bar{u}_{1}$
\end_inset

 die Auswertung mit einer Abbildung 
\begin_inset Formula $\pi\coloneqq\left(\bar{\mathrm{sp}}\left(g\right)\mapsto\bar{z}_{1}\right)$
\end_inset

.
 Analog zum Abschnitt 
\begin_inset CommandInset ref
LatexCommand ref
reference "subsec:circuit-eval"

\end_inset

 wird nun die Formel 
\begin_inset Formula $\varphi\left(\bar{x}\right)$
\end_inset

 definiert, die ein passendes Output-Gate und die richtige Abbildung findet:
 
\begin_inset Formula 
\begin{eqnarray*}
\varphi\left(\bar{x}\right) & \coloneqq\exists\bar{t}\exists\bar{u}\exists\bar{z}\,(\\
 &  & \varphi_{\Omega}\left(\bar{u}\bar{t}\right)\wedge\psi_{\mathrm{valid}}\left(\bar{u}\bar{z}\right)\\
 &  & \wedge\bigwedge_{\substack{i\in\left[1,k\right]\\
j\in\left[1,d\right]
}
}\left(\psi_{\mathrm{sp},j}\left(\bar{u}t_{i}\right)\rightarrow z_{i}=x_{i}\right)\\
 &  & \wedge\varphi_{\mathrm{EVAL}}\left(\bar{u}\bar{z}\right)\\
 & )
\end{eqnarray*}

\end_inset


\end_layout

\begin_layout Standard
Damit wird die Auswertung jedes Schaltkreises 
\begin_inset Formula $\mathcal{C}_{n}$
\end_inset

 durch die Formel 
\begin_inset Formula $\varphi$
\end_inset

 definiert, und das Lemma 
\begin_inset CommandInset ref
LatexCommand ref
reference "lem:ac0-fo"

\end_inset

 ist bewiesen.
\end_layout

\begin_layout Standard
Für Schaltkreise mit Majority-Gates wird problematisch, dass wir die Reduktion
 aus Satz 
\begin_inset CommandInset ref
LatexCommand ref
reference "prop:kary-counting"

\end_inset

 nicht zur Verfügung haben.
 Es existiert zwar eine ähnliche Reduktion für 
\begin_inset Formula $\mathrm{FO}$
\end_inset

; bei dieser handelt es sich allerdings um die nicht-disjunkte Erweiterung.
\end_layout

\begin_layout Proposition

\series bold
Barrington et al.
 (1990)
\begin_inset CommandInset citation
LatexCommand cite
key "Mix-Barrington:1990:UWN:95665.95674"

\end_inset

, Schweikardt (2005)
\series default

\begin_inset CommandInset citation
LatexCommand cite
key "Schweikardt:2005:AFL:1071596.1071602"

\end_inset


\end_layout

\begin_layout Proposition
Jede Formel der 
\begin_inset Formula $\mathrm{FO}+C^{k}$
\end_inset

-Logik mit 
\begin_inset Formula $k$
\end_inset

-stelligen Zählquantoren kann durch eine Formel der Logik 
\begin_inset Formula $\mathrm{FO}\left(\mathbf{BIT}\right)+C$
\end_inset

 ausgedrückt werden.
\end_layout

\begin_layout Standard
Eine Reduktion auf die disjunkte 
\begin_inset Formula $\mathrm{FO}+\mathbf{BIT}+C$
\end_inset

-Logik scheint (wenn sie existiert) nicht trivial.
\end_layout

\begin_layout Chapter
Grenzen der symmetrischen Schaltkreisklassen
\end_layout

\begin_layout Standard
Die symmetrischen 
\begin_inset Formula $\mathrm{AC}^{0}$
\end_inset

-Schaltkreisfamilien beschreiben eine echte Teilmenge der Anfragen, die
 durch 
\begin_inset Formula $\mathrm{AC}^{0}$
\end_inset

 definierbar sind.
\end_layout

\begin_layout Standard
Der Beweis benutzt die Charakterisierung aus Theorem 
\begin_inset CommandInset ref
LatexCommand ref
reference "thm:fo"

\end_inset

 von symmetrischem 
\begin_inset Formula $\mathrm{AC}^{0}$
\end_inset

 durch die Logik 
\begin_inset Formula $\mathrm{FO}+\mathbf{ARB}$
\end_inset

, die Charakterisierung von 
\begin_inset Formula $\mathrm{AC}^{0}$
\end_inset

 durch die Logik 
\begin_inset Formula $\mathrm{inv}\left(\mathrm{FO}\oplus\mathbf{ARB}\right)$
\end_inset

, und ein Problem, dass die Ausdrucksstärke dieser beiden Logiken voneinander
 trennt.
\end_layout

\begin_layout Theorem

\series bold
\begin_inset CommandInset label
LatexCommand label
name "lem:fo-arb-ac0"

\end_inset

Immerman (1987)
\series default

\begin_inset CommandInset citation
LatexCommand cite
key "Immerman1987"

\end_inset


\series bold
, Makowsky (1997)
\begin_inset CommandInset citation
LatexCommand cite
key "Makowsky1997-FO"

\end_inset


\end_layout

\begin_layout Theorem
Die Klasse der 
\begin_inset Formula $\mathrm{AC}^{0}$
\end_inset

-definierbaren Anfragen ist äquivalent zu der Klasse der 
\begin_inset Formula $\mathrm{inv}\left(\mathrm{FO}\oplus\mathbf{ARB}\right)$
\end_inset

-definierbaren Anfragen.
\end_layout

\begin_layout Standard
Für die Konstruktion der Formel (hier nur skizziert) wird jeder Schaltkreis
 in eine alternierende Normalform der Tiefe 
\begin_inset Formula $d$
\end_inset

 gebracht, in der jedes Gate 
\begin_inset Formula $n^{k}$
\end_inset

 Vorgänger hat.
 Die 
\begin_inset Formula $n^{kd}$
\end_inset

 Wege von einem Input zu einem Output werden durch numerische Tupel kodiert
 (die Relation dieser Wege ist ein numerisches Prädikat und daher in 
\begin_inset Formula $\mathrm{inv}\left(\mathrm{FO}\oplus\mathbf{ARB}\right)$
\end_inset

-Logik verwendbar).
 Die Formel muss dann über jede der alternierenden Ebenen des Schaltkreises
 quantifizieren (mit 
\begin_inset Formula $\exists$
\end_inset

 für 
\begin_inset Formula $\mathtt{OR}$
\end_inset

, und 
\begin_inset Formula $\forall$
\end_inset

 für 
\begin_inset Formula $\mathtt{AND}$
\end_inset

), und berechnet so die Auswertung von 
\begin_inset Formula $\mathcal{C}$
\end_inset

.
\end_layout

\begin_layout Standard
Da per Definition offensichtlich 
\begin_inset Formula $\mathrm{SAC}^{0}\subseteq\mathrm{AC}^{0}$
\end_inset

 gilt, können wir mit 
\begin_inset Formula $\mathrm{FO}+\mathbf{ARB}\subseteq\mathrm{SAC}^{0}$
\end_inset

 direkt ablesen, dass 
\begin_inset Formula $\mathrm{FO}+\mathbf{ARB}$
\end_inset

 in 
\begin_inset Formula $\mathrm{inv}\left(\mathrm{FO}\oplus\mathbf{ARB}\right)$
\end_inset

 enthalten ist (und beweisen somit Teil 1 des Theorems 
\begin_inset CommandInset ref
LatexCommand ref
reference "thm:fo-arb"

\end_inset

): Die Logik erster Stufe mit disjunktem 
\begin_inset Formula $\mathbf{ARB}$
\end_inset

-Orakel ist nicht stärker als die mit nicht-disjunktem Orakel.
\end_layout

\begin_layout Standard
Für den echten Einschluss (Teil 2 des Theorems 
\begin_inset CommandInset ref
LatexCommand ref
reference "thm:fo-arb"

\end_inset

) benötigen wir eine Anfrage, die in 
\begin_inset Formula $\mathrm{inv}\left(\mathrm{FO}\oplus\mathbf{ARB}\right)$
\end_inset

 beschreibbar ist, jedoch nicht in 
\begin_inset Formula $\mathrm{FO}+\mathbf{ARB}$
\end_inset

 beschreibbar ist.
 Per Theorem 
\begin_inset CommandInset ref
LatexCommand ref
reference "thm:fo"

\end_inset

 ist diese Anfrage dann in 
\begin_inset Formula $\mathrm{AC}^{0}$
\end_inset

, aber per Theorem 
\begin_inset CommandInset ref
LatexCommand ref
reference "thm:fo"

\end_inset

 nicht in 
\begin_inset Formula $\mathrm{SAC}^{0}$
\end_inset

 beschreibbar.
\end_layout

\begin_layout Standard
Dafür verwenden wir den Lokalitäts-Satz von Hanf.
\end_layout

\begin_layout Standard
\begin_inset VSpace bigskip
\end_inset


\end_layout

\begin_layout Theorem

\series bold
Der Satz von Hanf
\series default
 (Theorem 2.4.1 in 
\begin_inset CommandInset citation
LatexCommand cite
key "EbbinghausFlum"

\end_inset

)
\end_layout

\begin_layout Theorem
Seien 
\begin_inset Formula $\mathfrak{A},\mathfrak{B}\in\mathbf{FIN}\left(\sigma\right)$
\end_inset

, 
\begin_inset Formula $m\in\mathbb{N}$
\end_inset

 und 
\begin_inset Formula $r\coloneqq3^{m}$
\end_inset

, und sei 
\begin_inset Formula $\#_{r}^{\mathfrak{A}}\left(a\right)\coloneqq\left|\left\{ b\in A\mid a\sim_{r}b\right\} \right|$
\end_inset

 die Anzahl der 
\begin_inset Formula $r$
\end_inset

-ähnlichen Elemente zu 
\begin_inset Formula $a$
\end_inset

 in 
\begin_inset Formula $\mathfrak{B}$
\end_inset

 (und 
\begin_inset Formula $\#_{r}^{\mathfrak{B}}\left(a\right)$
\end_inset

 analog in 
\begin_inset Formula $\mathfrak{B}$
\end_inset

).
 Sei 
\begin_inset Formula $e\in\mathbb{N}$
\end_inset

 so gewählt, dass 
\begin_inset Formula $\max_{a\in A}\left(\left|N_{r}^{\mathfrak{A}}\left(a\right)\right|\right),\max_{b\in B}\left(\left|N_{r}^{\mathfrak{B}}\left(b\right)\right|\right)\leqslant e$
\end_inset

.
\end_layout

\begin_layout Theorem
Nun gelte für jedes Element 
\begin_inset Formula $a\in A$
\end_inset

 mindestens eine der folgenden Aussagen:
\begin_inset Separator latexpar
\end_inset


\end_layout

\begin_deeper
\begin_layout Enumerate
Die Anzahl der 
\begin_inset Formula $r$
\end_inset

-ähnlichen Elemente (siehe Definition 
\begin_inset CommandInset ref
LatexCommand ref
reference "def:neighborhoods"

\end_inset

) zu 
\begin_inset Formula $a$
\end_inset

 in 
\begin_inset Formula $\mathfrak{A}$
\end_inset

 und 
\begin_inset Formula $\mathfrak{B}$
\end_inset

 ist gleich.
\begin_inset Formula 
\[
\#_{r}^{\mathfrak{A}}\left(a\right)=\#_{r}^{\mathfrak{B}}\left(a\right)
\]

\end_inset


\end_layout

\begin_layout Enumerate
Die Anzahl der 
\begin_inset Formula $r$
\end_inset

-ähnlichen Elemente zu 
\begin_inset Formula $a$
\end_inset

 in 
\begin_inset Formula $\mathfrak{A}$
\end_inset

 und in 
\begin_inset Formula $\mathfrak{B}$
\end_inset

 ist jeweils größer als 
\begin_inset Formula $m\cdot e$
\end_inset

.
\begin_inset Formula 
\[
\#_{r}^{\mathfrak{A}}\left(a\right),\#_{r}^{\mathfrak{B}}\left(a\right)\geqslant m\cdot e
\]

\end_inset


\end_layout

\end_deeper
\begin_layout Theorem
Dann gilt: 
\begin_inset Formula $\mathfrak{A}\equiv_{m}\mathfrak{B}$
\end_inset

 (siehe Definition 
\begin_inset CommandInset ref
LatexCommand ref
reference "def:m-equiv"

\end_inset

).
\end_layout

\begin_layout Lemma
Es existiert eine Graph-Anfrage 
\begin_inset Formula $q$
\end_inset

, die in 
\begin_inset Formula $\mathrm{inv}\left(\mathrm{FO}\oplus\mathbf{ARB}\right)$
\end_inset

-definierbar ist, aber nicht in 
\begin_inset Formula $\mathrm{FO}+\mathbf{ARB}$
\end_inset

 beschreibbar ist.
\end_layout

\begin_layout Proof
Sei 
\begin_inset Formula $C\subseteq\mathbf{FIN}\left(E\right)$
\end_inset

 die Klasse der Graphen 
\begin_inset Formula $\mathfrak{A}=\left(A,E^{\mathfrak{A}}\right)$
\end_inset

 für die gilt: 
\begin_inset Formula $A$
\end_inset

 enthält weniger als 
\begin_inset Formula $\left\lceil \mathrm{log}\left|A\right|\right\rceil $
\end_inset

 viele nicht-isolierte Knoten.
\end_layout

\begin_layout Proof
Diese Anfrage ist durch einen 
\begin_inset Formula $\mathrm{inv}\left(\mathrm{FO}\oplus\mathbf{ARB}\right)\left[E\right]$
\end_inset

-Satz definierbar (siehe dazu Abschnitt 4.4 von 
\begin_inset CommandInset citation
LatexCommand cite
key "AMSS2012-locality"

\end_inset

).
\begin_inset Separator latexpar
\end_inset


\end_layout

\begin_deeper
\begin_layout Assumption*
Es existiere ein beliebiger 
\begin_inset Formula $\left(\mathrm{FO}+\mathbf{ARB}\right)\left[E\right]$
\end_inset

-Satz 
\begin_inset Formula $\varphi_{C}$
\end_inset

, der die Anfrage 
\begin_inset Formula $q_{C}$
\end_inset

 definiere.
\end_layout

\end_deeper
\begin_layout Proof
Sei 
\begin_inset Formula $m\coloneqq\mathrm{qr}\left(\varphi_{C}\right)$
\end_inset

 der Quantorenrang von 
\begin_inset Formula $\varphi_{C}$
\end_inset

, und o.B.d.A.
 sei 
\begin_inset Formula $m\geqslant9$
\end_inset

.
 Wir definieren die folgenden Graphen 
\begin_inset Formula $\mathfrak{A},\mathfrak{B}\in\mathbf{FIN}^{\left(2^{m^{m}}\right)}\left(E\right)$
\end_inset

 (siehe Abbildung 
\begin_inset CommandInset ref
LatexCommand ref
reference "fig:m-equiv"

\end_inset

):
\begin_inset Formula 
\begin{eqnarray*}
A,B & \coloneqq & \left[1,2^{m^{m}}\right]\\
E^{\mathfrak{A}} & \coloneqq & \left\{ \left(i,i+1\right)\mid i\in\left[1,m^{m}-2\right]\right\} \cup\left\{ \left(m^{m}-1,1\right)\right\} \\
E^{\mathfrak{B}} & \coloneqq & \left\{ \left(i,i+1\right)\mid i\in\left[1,m^{m}-1\right]\right\} \cup\left\{ \left(m^{m},1\right)\right\} 
\end{eqnarray*}

\end_inset

Beide Strukturen bestehen aus 
\begin_inset Formula $2^{m^{m}}$
\end_inset

 Knoten, 
\begin_inset Formula $\mathfrak{A}$
\end_inset

 enthält einen Kreis der Länge 
\begin_inset Formula $m^{m}-2$
\end_inset

, und 
\begin_inset Formula $\mathfrak{B}$
\end_inset

 einen Kreis der Länge 
\begin_inset Formula $m^{m}$
\end_inset

.
 Damit gilt:
\begin_inset Formula 
\[
\mathfrak{A}\in C,\,\mathfrak{B}\notin C
\]

\end_inset


\begin_inset Formula 
\[
\mathfrak{A}\models\varphi_{C},\,\mathfrak{B}\not\models\varphi_{C}
\]

\end_inset

Offensichtlich besteht die 
\begin_inset Formula $3^{m}$
\end_inset

-Nachbarschaft jedes Knotens im Kreis aus einer 
\begin_inset Formula $3^{m}+1$
\end_inset

 langen Kette, und die übrigen Knoten sind isoliert.
 Damit sind alle 
\begin_inset Formula $3^{m}$
\end_inset

-Nachbarschaften kleiner als 
\begin_inset Formula $e\coloneqq3^{m}+2$
\end_inset

.
 Ferner hat jeder Knoten im Kreis mindestens 
\begin_inset Formula $m^{m}-1\geqslant m\cdot3^{m+7}-1>m\cdot e$
\end_inset

 viele 
\begin_inset Formula $3^{m}$
\end_inset

-ähnliche Knoten in jedem Graphen, und jeder isolierte Knoten ohnehin 
\begin_inset Formula $2^{m^{m}}-m^{m}>m^{m}$
\end_inset

 viele 
\begin_inset Formula $3^{m}$
\end_inset

-ähnliche Knoten.
 Somit sind die Graphen 
\begin_inset Formula $\mathfrak{A}$
\end_inset

 und 
\begin_inset Formula $\mathfrak{B}$
\end_inset

 nach dem Satz von Hanf 
\begin_inset Formula $m$
\end_inset

-äquivalent.
\end_layout

\begin_layout Proof
\begin_inset Float figure
wide false
sideways false
status open

\begin_layout Plain Layout
\noindent
\align center
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
tikzstyle{g}=[circle, draw, fill=black,
\end_layout

\begin_layout Plain Layout

                        inner sep=0pt, minimum width=2pt]
\end_layout

\begin_layout Plain Layout

%  Tutte's 8-cage
\end_layout

\begin_layout Plain Layout


\backslash
begin{tikzpicture}[thick,scale=0.8]
\end_layout

\begin_layout Plain Layout

    
\backslash
draw  
\backslash
foreach 
\backslash
x in {0,18,...,342}
\end_layout

\begin_layout Plain Layout

    {
\end_layout

\begin_layout Plain Layout

        (
\backslash
x:1.5) node[g] {} edge[dotted] (
\backslash
x+18:1.5)
\end_layout

\begin_layout Plain Layout

    };
\end_layout

\begin_layout Plain Layout

	
\backslash
node (0:0) {$m^{m-1}$};
\end_layout

\begin_layout Plain Layout

	
\backslash
begin{scope}[shift={(0,-4)},xscale=2]
\end_layout

\begin_layout Plain Layout

		
\backslash
draw [dotted] (0,0) ellipse (2 and 2);
\end_layout

\begin_layout Plain Layout

		
\backslash
draw plot [only marks, mark=*, mark size=0.1, domain=0:5, samples=75] ({rnd*360}:
{1+rnd});
\end_layout

\begin_layout Plain Layout

	
\backslash
end{scope}
\end_layout

\begin_layout Plain Layout

	
\backslash
node at (0,-4) {$2^{m^m}-m^m+1$};
\end_layout

\begin_layout Plain Layout


\backslash
end{tikzpicture}
\end_layout

\end_inset


\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
tikzstyle{g}=[circle, draw, fill=black,
\end_layout

\begin_layout Plain Layout

                        inner sep=0pt, minimum width=2pt]
\end_layout

\begin_layout Plain Layout

%  Tutte's 8-cage
\end_layout

\begin_layout Plain Layout


\backslash
begin{tikzpicture}[thick,scale=0.8]
\end_layout

\begin_layout Plain Layout

    
\backslash
draw  
\backslash
foreach 
\backslash
x in {0,18,...,342}
\end_layout

\begin_layout Plain Layout

    {
\end_layout

\begin_layout Plain Layout

        (
\backslash
x:1.5) node[g] {} edge[dotted] (
\backslash
x+18:1.5)
\end_layout

\begin_layout Plain Layout

    };
\end_layout

\begin_layout Plain Layout

	
\backslash
node (0:0) {$m^m$};
\end_layout

\begin_layout Plain Layout

	
\backslash
begin{scope}[shift={(0,-4)},xscale=2]
\end_layout

\begin_layout Plain Layout

		
\backslash
draw [dotted] (0,0) ellipse (2 and 2);
\end_layout

\begin_layout Plain Layout

		
\backslash
draw plot [only marks, mark=*, mark size=0.1, domain=0:5, samples=75] ({rnd*360}:
{1+rnd});
\end_layout

\begin_layout Plain Layout

	
\backslash
end{scope}
\end_layout

\begin_layout Plain Layout

	
\backslash
node at (0,-4) {$2^{m^m}-m^m$};
\end_layout

\begin_layout Plain Layout


\backslash
end{tikzpicture}
\end_layout

\end_inset


\end_layout

\begin_layout Plain Layout
\begin_inset Caption Standard

\begin_layout Plain Layout
\begin_inset CommandInset label
LatexCommand label
name "fig:m-equiv"

\end_inset

Zwei 
\begin_inset Formula $m$
\end_inset

-äquivalente Graphen 
\begin_inset Formula $\mathfrak{A},\mathfrak{B}$
\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Plain Layout

\end_layout

\end_inset


\end_layout

\begin_layout Proof
Der 
\begin_inset Formula $\mathrm{FO}+\mathbf{ARB}\left[\sigma\right]$
\end_inset

-Satz 
\begin_inset Formula $\varphi$
\end_inset

 wird nicht auf 
\begin_inset Formula $\mathfrak{A}$
\end_inset

 und 
\begin_inset Formula $\mathfrak{B}$
\end_inset

, sondern 
\begin_inset Formula $\mathfrak{A}\uplus\mathbf{ARB}\left(n\right)$
\end_inset

 und 
\begin_inset Formula $\mathfrak{B}\uplus\mathbf{ARB}\left(n\right)$
\end_inset

 ausgewertet.
 Wir werden im folgenden sehen, warum das nicht hilft, denn nach Satz 
\begin_inset CommandInset ref
LatexCommand ref
reference "prop:m-equiv-closed"

\end_inset

 ist die 
\begin_inset Formula $m$
\end_inset

-Äquivalenz unter disjunkter Vereinigung abgeschlossen.
\end_layout

\begin_layout Proof
Da 
\begin_inset Formula $\mathfrak{A}\equiv_{m}\mathfrak{B}$
\end_inset

, und offensichtlich 
\begin_inset Formula $\mathbf{ARB}\left(n\right)\equiv_{m}\mathbf{ARB}\left(n\right)$
\end_inset

, folgt somit 
\begin_inset Formula $\mathfrak{A}\uplus\mathbf{ARB}\left(n\right)\equiv_{m}\mathfrak{B}\uplus\mathbf{ARB}\left(n\right)$
\end_inset

, und es gilt, im Widerspruch zu der Annahme:
\begin_inset Formula 
\[
\mathfrak{A}\models\varphi_{C}\Leftrightarrow\mathfrak{B}\models\varphi_{C}
\]

\end_inset


\end_layout

\begin_layout Proposition
\begin_inset CommandInset label
LatexCommand label
name "prop:m-equiv-closed"

\end_inset

Seien 
\begin_inset Formula $\sigma_{1},\sigma_{2}$
\end_inset

 beliebige Signaturen, 
\begin_inset Formula $\mathfrak{A}\equiv_{m}\mathfrak{B}$
\end_inset

 zwei beliebige 
\begin_inset Formula $\sigma_{1}$
\end_inset

-Strukturen und 
\begin_inset Formula $\mathfrak{A}'\equiv_{m}\mathfrak{B}'$
\end_inset

 zwei beliebige 
\begin_inset Formula $\sigma_{2}$
\end_inset

-Strukturen.
\end_layout

\begin_layout Proposition
Dann gilt 
\begin_inset Formula $\mathfrak{A}\uplus\mathfrak{A}'\equiv_{m}\mathfrak{B}\uplus\mathfrak{B}'$
\end_inset

.
\end_layout

\begin_layout Standard
Um dies zu beweisen, verwenden wir den Satz von Ehrenfeucht, nach dem die
 
\begin_inset Formula $m$
\end_inset

-Äquivalenz von Strukturen gleichbedeutend ist mit der Existenz einer Gewinnstra
tegie für Duplicator im Ehrenfeucht-Fraïssé-Spiel mit 
\begin_inset Formula $m$
\end_inset

 Runden.
 Wir verwenden die Definition des EF-Spiels von Ebbinghaus und Flum (Abschnitt
 2.2 von 
\begin_inset CommandInset citation
LatexCommand cite
key "EbbinghausFlum"

\end_inset

).
\end_layout

\begin_layout Proof
Es wird per 
\begin_inset Formula $\mathfrak{A}\equiv_{m}\mathfrak{B}$
\end_inset

 und 
\begin_inset Formula $\mathfrak{A}'\equiv_{m}\mathfrak{B}'$
\end_inset

 vorausgesetzt, dass Duplicator eine Gewinnstrategie für jedes 
\begin_inset Formula $m'\leqslant m$
\end_inset

-Runden-Spiel auf 
\begin_inset Formula $\left(\mathfrak{A},\mathfrak{B}\right)$
\end_inset

 und auf 
\begin_inset Formula $\left(\mathfrak{A}',\mathfrak{B}'\right)$
\end_inset

 hat.
 Im Spiel auf 
\begin_inset Formula $\left(\mathfrak{A}\uplus\mathfrak{A}',\mathfrak{B}\uplus\mathfrak{B}'\right)$
\end_inset

 geht Duplicator wie folgt vor:
\begin_inset Separator latexpar
\end_inset


\end_layout

\begin_deeper
\begin_layout Itemize
Falls Spoiler einen Knoten 
\begin_inset Formula $a_{i}\in A$
\end_inset

 oder 
\begin_inset Formula $b_{i}\in B$
\end_inset

 wählt, so antworte mit dem Gewinnzug aus dem Spiel auf 
\begin_inset Formula $\left(\mathfrak{A},\mathfrak{B}\right)$
\end_inset

.
\end_layout

\begin_layout Itemize
Falls Spoiler 
\begin_inset Formula $a_{i}\in A'$
\end_inset

 oder 
\begin_inset Formula $b_{i}\in B'$
\end_inset

 wählt, so antworte mit dem Gewinnzug aus dem Spiel auf 
\begin_inset Formula $\left(\mathfrak{A}',\mathfrak{B}'\right)$
\end_inset

.
\end_layout

\end_deeper
\begin_layout Proof
Nun betrachten wir die gespielten Tupel 
\begin_inset Formula $\bar{a}\in\left(A\cup A'\right)^{m}$
\end_inset

 und 
\begin_inset Formula $\bar{b}\in\left(B\cup B'\right)^{m}$
\end_inset

, und die induzierten Strukturen 
\begin_inset Formula $\left(\mathfrak{A}\uplus\mathfrak{A}'\right)_{\mid\bar{a}}$
\end_inset

 und 
\begin_inset Formula $\left(\mathfrak{B}\uplus\mathfrak{B}'\right)_{\mid\bar{b}}$
\end_inset

.
\end_layout

\begin_layout Proof
Wegen der Annahme induzieren 
\begin_inset Formula $\bar{a}$
\end_inset

 und 
\begin_inset Formula $\bar{b}$
\end_inset

 zwei partielle Isomorphismen mit 
\begin_inset Formula $\left(\mathfrak{A}_{\mid\bar{a}},\bar{a}_{\mid A}\right)\cong\left(\mathfrak{B}_{\mid\bar{b}},\bar{b}_{\mid B}\right)$
\end_inset

 und 
\begin_inset Formula $\left(\mathfrak{A}'_{\mid\bar{a}},\bar{a}_{\mid A'}\right)\cong\left(\mathfrak{B}'_{\mid\bar{b}},\bar{b}_{\mid B'}\right)$
\end_inset

.
 Nach Satz 
\begin_inset CommandInset ref
LatexCommand ref
reference "prop:iso-closed-disjoint"

\end_inset

 ist der Isomorphismus abgeschlossen, so dass gilt:
\begin_inset Formula 
\[
\left(\mathfrak{A}\uplus\mathfrak{A}'_{\mid\bar{a}},\bar{a}\right)\cong\left(\mathfrak{B}\uplus\mathfrak{B}'_{\mid\bar{b}},\bar{b}\right)
\]

\end_inset

Damit hat Duplicator das Spiel auf 
\begin_inset Formula $\left(\mathfrak{A}\uplus\mathfrak{A}',\mathfrak{B}\uplus\mathfrak{B}'\right)$
\end_inset

 gewonnen, und es folgt 
\begin_inset Formula $\mathfrak{A}\uplus\mathfrak{A}'\equiv_{m}\mathfrak{B}\uplus\mathfrak{B}'$
\end_inset

.
\end_layout

\begin_layout Standard
Die hier dargestellte Folgerung lässt sich allgemein auf jedes Paar von
 
\begin_inset Formula $m$
\end_inset

-äquivalenten Strukturen erweitern, solange die Strukturen die gleiche Größe
 haben.
\end_layout

\begin_layout Corollary
Die Logik 
\begin_inset Formula $\mathrm{FO}+\mathbf{ARB}$
\end_inset

 mit disjunktem Orakel kann nur Eigenschaften ausdrücken, die bezüglich
 gleich großer Strukturen Hanf-lokal sind.
\end_layout

\begin_layout Standard
Die Bedingung der gleichen Größe ist notwendig, denn offensichtlich ist
 zum Beispiel die 
\begin_inset Formula $\mathrm{FO}+\mathbf{ARB}$
\end_inset

-definierbare Klasse 
\begin_inset Formula $\textsc{Even}$
\end_inset

 nicht Hanf-lokal.
\end_layout

\begin_layout Chapter
Ausblick
\end_layout

\begin_layout Standard
Wir haben in Kapitel 5 gesehen, dass logische Formeln der ersten Stufe mit
 beliebigen 
\begin_inset Formula $\mathrm{LOGSPACE}$
\end_inset

-berechenbaren disjunkten numerischen Erweiterungen (insbesondere 
\begin_inset Formula $\mathbf{BIT}$
\end_inset

) sich durch symmetrische 
\begin_inset Formula $\mathrm{LOGSPACE}$
\end_inset

-uniforme Schaltkreisfamilien beschreiben lassen.
 
\end_layout

\begin_layout Standard
Für die Fixpunkt-Logik 
\begin_inset Formula $\mathrm{LFP}$
\end_inset

 mit 
\begin_inset Formula $P$
\end_inset

-berechenbaren numerischen Prädikaten haben wir die gleiche Reduktion auf
 symmetrische 
\begin_inset Formula $P$
\end_inset

-uniforme Schaltkreisfamilien gezeigt.
 In beiden Fällen konnte ein Zählquantor durch Hinzunahme von Majority-Gates
 ausgedrückt werden, und beliebige Erweiterungen (insbesondere 
\begin_inset Formula $\mathbf{ARB}$
\end_inset

) durch Ausweitung auf 
\begin_inset Formula $P/\mathrm{poly}$
\end_inset

-Uniformität.
\end_layout

\begin_layout Standard
In Kapitel 7 haben wir gesehen, dass sich symmetrische, 
\begin_inset Formula $P$
\end_inset

-uniforme Schaltkreisfamilien umgekehrt durch Fixpunkt-Logik mit disjunkter
 Ordnungserweiterung definieren lassen.
 Auch hier wurde das Majority-Gate auf einen Zählquantor abgebildet, und
 die 
\begin_inset Formula $P/\mathrm{poly}$
\end_inset

-uniforme Schaltkreisklasse durch die 
\begin_inset Formula $\mathbf{ARB}$
\end_inset

-Erweiterung definiert.
\end_layout

\begin_layout Standard
Für die Logik der ersten Stufe haben wir dann den Kreis geschlossen und
 Schaltkreise konstanter Tiefe auf 
\begin_inset Formula $\mathrm{FO}+\mathbf{BIT}$
\end_inset

 reduziert.
 Die Erweiterung auf 
\begin_inset Formula $\mathrm{P/\mathrm{poly}}$
\end_inset

 und 
\begin_inset Formula $\mathrm{FO}+\mathbf{ARB}$
\end_inset

 funktionierte problemlos analog zu der Fixpunkt-Logik, die Zähl-Erweiterung
 
\begin_inset Formula $\mathrm{FO}+C$
\end_inset

 jedoch nicht.
\end_layout

\begin_layout Standard
Zum Schluss haben wir in Kapitel 8 nachgewiesen, dass die symmetrischen
 Schaltkreisfamilien (zumindest bei konstanter Tiefe) echt weniger ausdrücken
 können als die allgemein invarianten Schaltkreisfamilien.
 Dazu wurde der Satz von Hanf verwendet, und gezeigt, dass die Logik 
\begin_inset Formula $\mathrm{FO}+\mathbf{ARB}$
\end_inset

 modulo der Struktur-Größe Hanf-lokal ist, während dies für die arb-invariante
 Logik 
\begin_inset Formula $\mathrm{inv}\left(\mathrm{FO}\oplus\mathbf{ARB}\right)$
\end_inset

 nicht allgemein gilt 
\begin_inset CommandInset citation
LatexCommand cite
key "AnMeScSe11"

\end_inset

.
\end_layout

\begin_layout Standard
Vermutlich gelten ähnliche Beziehungen auch für die symmetrischen Teile
 der übrigen Schaltkreisklassen 
\begin_inset Formula $\mathrm{SBC}$
\end_inset

, 
\begin_inset Formula $\mathrm{AC}^{0}+\mathbf{MAJ}$
\end_inset

 und 
\begin_inset Formula $\mathrm{SBC}+\mathbf{MAJ}$
\end_inset

.
 Ein Lokalitäts-Beweis bietet sich hier aber vermutlich nicht an, denn insbesond
ere wäre die im letzten Kapitel definierte Anfrage bereits in 
\begin_inset Formula $\mathrm{FO}+\mathbf{BIT}+C$
\end_inset

 definierbar:
\begin_inset Formula 
\begin{eqnarray*}
\varphi & \coloneqq & \exists x\left(\exists^{=x}y\exists z\,\left(Eyz\vee Ezy\right)\wedge\exists x_{\max}\left(\log_{\leqslant}\left(x,x_{\max}\right)\wedge\forall y\left(x_{\max}\leqslant y\rightarrow x_{\max}=y\right)\right)\right)\\
\log_{\leqslant} & \coloneqq & \left\{ \left(m,n\right)\in\mathbb{N}^{2}\mid2^{m}\leqslant n\right\} 
\end{eqnarray*}

\end_inset


\end_layout

\begin_layout Chapter*
Danksagung
\end_layout

\begin_layout Standard
Ich möchte mich an dieser Stelle bei allen bedanken, die mich im Rahmen
 dieser Masterarbeit unterstützt und begleitet haben.
 Insbesondere danke ich Prof.
 Dr.
 Nicole Schweikardt und Prof.
 Dr.
 Isolde Adler, die diese Arbeit betreuten und deren Vorlesungen mein Interesse
 für die theoretische Informatik weckten.
\end_layout

\begin_layout Standard
Bei meinen Eltern bedanke ich mich für ihre unermüdliche moralische Unterstützun
g und Versorgung im späten Stadium meiner Arbeit.
\end_layout

\begin_layout Standard
\begin_inset CommandInset bibtex
LatexCommand bibtex
bibfiles "master"
options "plain"

\end_inset


\end_layout

\begin_layout Chapter*
Erklärung
\end_layout

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
addcontentsline{toc}{chapter}{Erklärung}
\end_layout

\end_inset


\end_layout

\begin_layout Standard
Gemäß der Ordnung für den Masterstudiengang Informatik, § 24 Abs.
 12 bestätige ich hiermit, dass ich die vorliegende Arbeit selbständig ohne
 fremde Hilfe angefertigt und nur die angegebenen Hilfsmittel verwendet
 habe.
\end_layout

\begin_layout Standard
\begin_inset VSpace 2em
\end_inset


\end_layout

\begin_layout Standard
Frankfurt, den 
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
displaydate{date}
\end_layout

\end_inset


\end_layout

\begin_layout Standard
\begin_inset VSpace 5em
\end_inset


\end_layout

\begin_layout Standard
Christoph Burschka
\end_layout

\end_body
\end_document
