#LyX 2.1 created this file. For more info see http://www.lyx.org/
\lyxformat 474
\begin_document
\begin_header
\textclass scrbook
\begin_preamble
\usepackage[nottoc]{tocbibind} 
\usepackage{hyperref}
\usepackage{tikz}
%\tikzstyle{every node}=[circle, draw=black,inner sep=0.2em]
%\usetikzlibrary{fixedpointarithmetic}
%\usetikzlibrary{positioning}
%\let\nchapter\chapter
%\renewcommand*\chapter[1]{\nchapter*{#1}\addcontentsline{toc}{chapter}{#1}}
%\theoremstyle{definition}
%\newtheorem{notation}[thm]{Notation}
%\newtheorem*{notation*}{Notation}
%\numberwithin{thm}{chapter}

%\usepackage{prettyref}
%\newrefformat{chap}{\textbf{Kapitel~\ref{#1}}}
%\newrefformat{sec}{\textbf{Abschnitt~\ref{#1}}}
%\newrefformat{sub}{\textbf{Abschnitt~\ref{#1}}}
%\newrefformat{thm}{\textbf{Theorem~\ref{#1}}}
%\newrefformat{lem}{\textbf{Lemma~\ref{#1}}}
%\newrefformat{prop}{\textbf{Satz~\ref{#1}}}
\end_preamble
\use_default_options true
\begin_modules
theorems-ams
enumitem
theorems-chap
theorems-ams-extended
\end_modules
\maintain_unincluded_children false
\begin_local_layout
Format 49
Style Email
Font
Size                Larger
Family             Typewriter
EndFont
LatexType      command
LatexName    email
End
\end_local_layout
\language ngerman
\language_package default
\inputencoding utf8
\fontencoding global
\font_roman default
\font_sans default
\font_typewriter default
\font_math auto
\font_default_family default
\use_non_tex_fonts false
\font_sc false
\font_osf false
\font_sf_scale 100
\font_tt_scale 100
\graphics default
\default_output_format default
\output_sync 0
\bibtex_command default
\index_command default
\paperfontsize default
\spacing onehalf
\use_hyperref false
\papersize default
\use_geometry true
\use_package amsmath 1
\use_package amssymb 1
\use_package cancel 1
\use_package esint 1
\use_package mathdots 1
\use_package mathtools 1
\use_package mhchem 1
\use_package stackrel 1
\use_package stmaryrd 1
\use_package undertilde 1
\cite_engine basic
\cite_engine_type default
\biblio_style plain
\use_bibtopic false
\use_indices false
\paperorientation portrait
\suppress_date false
\justification true
\use_refstyle 1
\index Index
\shortcut idx
\color #008000
\end_index
\bottommargin 20pheight%
\secnumdepth 3
\tocdepth 3
\paragraph_separation skip
\defskip medskip
\quotes_language german
\papercolumns 1
\papersides 2
\paperpagestyle default
\tracking_changes false
\output_changes false
\html_math_output 0
\html_css_as_file 0
\html_be_strict false
\end_header

\begin_body

\begin_layout Title
Logische Charakterisierungen von Symmetrischen Schaltkreisfamilien
\end_layout

\begin_layout Subject
Master-Arbeit
\end_layout

\begin_layout Author
Christoph Burschka
\begin_inset Newline newline
\end_inset


\family typewriter
\size larger
christoph@burschka.de
\end_layout

\begin_layout Publishers

\shape smallcaps
Goethe-Universität Frankfurt am Main
\begin_inset Newline newline
\end_inset


\shape default
Betreuerin: Prof.
 Dr.
 Nicole Schweikardt
\end_layout

\begin_layout Standard
\begin_inset CommandInset toc
LatexCommand tableofcontents

\end_inset


\end_layout

\begin_layout Chapter
Einleitung
\end_layout

\begin_layout Standard
Wir modellieren Graphen und Datenbanken als Strukturen, die ein Schema von
 relationalen Prädikaten über einem endlichen Universum interpretieren.
 Eine Datenbank-Anfrage auf einem solchen Schema wird als Funktion modelliert,
 die jede endliche Struktur auf eine Relation abbildet.
\end_layout

\begin_layout Standard
Von besonderem Interesse ist die Daten-Komplexität solcher Anfragen: Die
 Komplexität der Auswertung einer festen Anfrage in Abhängigkeit von der
 Größe der eingegebenen Struktur.
 Wir betrachten hierbei Klassen von Anfragen, die durch boolesche Schaltkreisfam
ilien oder Formeln einer relationalen Logik beschrieben werden können.
\end_layout

\begin_layout Standard
Da eine Schaltkreisfamilie eine unendliche Sequenz von Schaltkreisen bildet,
 wird gewöhnlich gefordert, dass diese Schaltkreise effizient für jede Eingabegr
öße 
\begin_inset Formula $n\in\mathbb{N}$
\end_inset

 berechnet werden können.
 Sind sie in Polynomialzeit 
\begin_inset Formula $P$
\end_inset

 berechenbar, dann nennen wir sie 
\begin_inset Formula $P$
\end_inset

-uniform.
\end_layout

\begin_layout Standard
Weil boolesche Schaltkreise von Natur aus auf geordneten Strukturen arbeiten,
 wird außerdem gefordert, dass ihr Ergebnis invariant bezüglich der gewählten
 Ordnung ist.
 Wir führen eine strukturelle Einschränkung der Schaltkreise ein, die diese
 Ordnungsinvarianz garantiert.
\end_layout

\begin_layout Standard
Die Logik erster Stufe ist in der Praxis zu eingeschränkt: Selbst einfache
 Probleme wie die Frage, ob eine Struktur eine gerade Anzahl von Elementen
 enthält, oder zwei Knoten durch einen Weg beliebiger Länge verbunden sind,
 können nicht ausgedrückt werden.
\begin_inset CommandInset citation
LatexCommand cite
key "Libkin2012"

\end_inset

 Daher erweitern wir die Logik um numerische Prädikate, Fixpunkt-Operatoren
 und Zähler.
 Insbesondere betrachten wir Logiken, in denen die numerischen Prädikate
 
\emph on
disjunkt
\emph default
 von dem Universum der eigentlichen Struktur interpretiert werden, und weisen
 nach, dass solche Logiken gerade die verschiedenen Klassen symmetrischer
 Schaltkreisfamilien charakterisieren.
\end_layout

\begin_layout Standard
Konkret ist die Klasse der symmetrischen booleschen Schaltkreisfamilien
 äquivalent zu der Logik erster Stufe mit Fixpunkt-Operator und disjunktem
 Ordnungsprädikat 
\begin_inset Formula $\mathrm{LFP}+\mathbf{ORD}$
\end_inset

.
 Das Ergebnis wurde 2014 von Matthew Anderson und Anuj Dawar
\begin_inset CommandInset citation
LatexCommand cite
key "anderson_et_al:LIPIcs:2014:4445"

\end_inset

 veröffentlicht, und bildet die Grundlage dieser Arbeit.
\end_layout

\begin_layout Standard
Die logische Zählerweiterung 
\begin_inset Formula $\mathrm{LFP}+C$
\end_inset

 charakterisiert zusätzlich die symmetrischen Schaltkreisfamilien mit einem
 Majority-Operator, und die Erweiterung der Logik um beliebige numerische
 Prädikate opfert nur die 
\begin_inset Formula $P$
\end_inset

-Uniformität.
\end_layout

\begin_layout Theorem

\series bold
\begin_inset CommandInset label
LatexCommand label
name "thm:fp"

\end_inset

Anderson und Dawar (2014)
\series default

\begin_inset CommandInset citation
LatexCommand cite
key "anderson_et_al:LIPIcs:2014:4445"

\end_inset


\end_layout

\begin_layout Theorem
Die folgenden Paare von Anfragenklassen sind auf endlichen Strukturen äquivalent
:
\end_layout

\begin_deeper
\begin_layout Enumerate
Die Logik 
\begin_inset Formula $\mathrm{LFP}+\mathbf{ORD}$
\end_inset

 und 
\begin_inset Formula $P$
\end_inset

-uniforme 
\begin_inset Formula $\mathrm{SBC}$
\end_inset

-Schaltkreisfamilien.
\end_layout

\begin_layout Enumerate
Die Logik 
\begin_inset Formula $\mathrm{LFP}+C$
\end_inset

 und 
\begin_inset Formula $P$
\end_inset

-uniforme 
\begin_inset Formula $\mathrm{SBC}+\mathbf{MAJ}$
\end_inset

-Schaltkreisfamilien.
\end_layout

\begin_layout Enumerate
Die Logik 
\begin_inset Formula $\mathrm{LFP}+\mathbf{ARB}$
\end_inset

 und 
\begin_inset Formula $P/\mathrm{poly}$
\end_inset

-uniforme 
\begin_inset Formula $\mathrm{SBC}$
\end_inset

-Schaltkreisfamilien.
\end_layout

\end_deeper
\begin_layout Standard
Wir erweitern dieses Ergebnis für Schaltkreisfamilien konstanter Tiefe.
 Es wird eine Charakterisierung der 
\begin_inset Formula $\mathrm{LOGSPACE}$
\end_inset

-uniformen symmetrischen 
\begin_inset Formula $\mathrm{AC}^{0}$
\end_inset

-Schaltkreisfamilien durch die Logik 
\begin_inset Formula $\mathrm{FO}+\mathbf{BIT}$
\end_inset

 mit disjunktem 
\begin_inset Formula $\mathtt{BIT}$
\end_inset

-Prädikat nachgewiesen.
\end_layout

\begin_layout Theorem
\begin_inset CommandInset label
LatexCommand label
name "thm:fo"

\end_inset

Die folgenden Paare von Anfragenklassen sind auf endlichen Strukturen äquivalent
:
\end_layout

\begin_deeper
\begin_layout Enumerate
Die Logik 
\begin_inset Formula $\mathrm{FO}+\mathbf{BIT}$
\end_inset

 und 
\begin_inset Formula $\mathrm{LOGSPACE}$
\end_inset

-uniforme symmetrische 
\begin_inset Formula $\mathrm{AC}^{0}$
\end_inset

-Schaltkreisfamilien.
\end_layout

\begin_layout Enumerate
Die Logik 
\begin_inset Formula $\mathrm{FO}+\mathbf{ARB}$
\end_inset

 und symmetrische 
\begin_inset Formula $\mathrm{AC}^{0}$
\end_inset

-Schaltkreisfamilien.
\end_layout

\end_deeper
\begin_layout Standard
Die Einschränkung auf symmetrische Schaltkreisfamilien bringt eine echte
 Reduktion der Ausdrucksstärke mit sich.
 Um dies für 
\begin_inset Formula $\mathrm{AC}^{0}$
\end_inset

 verwenden wir die obige Charakterisierung und ein Resultat, dass die Logik
 
\begin_inset Formula $\mathrm{FO}+\mathbf{ARB}$
\end_inset

 mit disjunktem Orakel von der arb-invarianten Logik mit nicht-disjunktem
 Orakel trennt.
\end_layout

\begin_layout Theorem
\begin_inset CommandInset label
LatexCommand label
name "thm:fo-arb"

\end_inset


\begin_inset Formula $\mathrm{FO}+\mathbf{ARB}$
\end_inset

, invariantes 
\begin_inset Formula $\mathrm{FO}\left(\mathrm{arb}\right)$
\end_inset


\end_layout

\begin_deeper
\begin_layout Enumerate
Jede 
\begin_inset Formula $\left(\mathrm{FO}+\mathbf{ARB}\right)\left[\sigma\right]$
\end_inset

-Formel 
\begin_inset Formula $\varphi$
\end_inset

 ist äquivalent zu einer arb-invarianten 
\begin_inset Formula $\mathrm{FO}\left[\sigma_{\mathrm{arb}}\right]$
\end_inset

-Formel 
\begin_inset Formula $\varphi$
\end_inset

.
\end_layout

\begin_layout Enumerate
Es existiert eine 
\begin_inset Formula $\sigma$
\end_inset

-Anfrage, die in der arb-invarianten 
\begin_inset Formula $\mathrm{FO}\left[\sigma_{\mathrm{arb}}\right]$
\end_inset

-Logik definierbar ist, aber nicht 
\begin_inset Formula $\left(\mathrm{FO}+\mathbf{ARB}\right)\left[\sigma\right]$
\end_inset

-definierbar ist.
\end_layout

\end_deeper
\begin_layout Chapter
Grundlegende Definitionen
\end_layout

\begin_layout Section
Notation
\end_layout

\begin_layout Standard
Zunächst legen wir einige Notationen und Abkürzungen fest.
 Im folgenden bezeichne 
\begin_inset Formula $\mathbb{N}$
\end_inset

 die Menge der natürlichen Zahlen einschließlich 
\begin_inset Formula $0$
\end_inset

, 
\begin_inset Formula $\mathbb{R}$
\end_inset

 die Menge der reellen Zahlen, und 
\begin_inset Quotes gld
\end_inset


\begin_inset Formula $\leqslant$
\end_inset


\begin_inset Quotes grd
\end_inset

 (wenn nicht anders definiert) die natürliche Ordnung von 
\begin_inset Formula $\mathbb{R}$
\end_inset

 und 
\begin_inset Formula $\mathbb{N}$
\end_inset

.
 Mit 
\begin_inset Quotes gld
\end_inset

ex.
\begin_inset Quotes grd
\end_inset

, 
\begin_inset Quotes gld
\end_inset

s.d.
\begin_inset Quotes grd
\end_inset

 und 
\begin_inset Quotes gld
\end_inset

f.a.
\begin_inset Quotes grd
\end_inset

 kürzen wir gegebenenfalls 
\begin_inset Quotes gld
\end_inset

es existiert
\begin_inset Quotes grd
\end_inset

, 
\begin_inset Quotes gld
\end_inset

so dass
\begin_inset Quotes grd
\end_inset

 und 
\begin_inset Quotes gld
\end_inset

für alle
\begin_inset Quotes grd
\end_inset

 ab.
\end_layout

\begin_layout Definition

\series bold
\begin_inset CommandInset label
LatexCommand label
name "def:Tupel"

\end_inset

Menge und Tupel
\end_layout

\begin_layout Definition
Mengen benennen wir im allgemeinen durch gewöhnliche Großbuchstaben wie
 
\begin_inset Formula $A$
\end_inset

, 
\begin_inset Formula $B$
\end_inset

, 
\begin_inset Formula $U$
\end_inset

 oder 
\begin_inset Formula $X$
\end_inset

.
 Für eine Menge 
\begin_inset Formula $A$
\end_inset

 bezeichne 
\begin_inset Formula $2^{A}\coloneqq\left\{ A'\mid A'\subseteq A\right\} $
\end_inset

 die Menge aller Teilmengen von 
\begin_inset Formula $A$
\end_inset

.
\end_layout

\begin_layout Definition
Tupel benennen wir durch Kleinbuchstaben mit Balken wie 
\begin_inset Formula $\bar{a}$
\end_inset

, 
\begin_inset Formula $\bar{b}$
\end_inset

, 
\begin_inset Formula $\bar{u}$
\end_inset

 oder 
\begin_inset Formula $\bar{x}$
\end_inset

.
 Die Stelligkeit 
\begin_inset Formula $\mathrm{ar}\left(\bar{x}\right)$
\end_inset

 eines Tupels 
\begin_inset Formula $\bar{x}$
\end_inset

 sei die Anzahl seiner Elemente, und ein 
\begin_inset Formula $n$
\end_inset

-stelliges Tupel heiße kurz 
\begin_inset Quotes gld
\end_inset


\begin_inset Formula $n$
\end_inset

-Tupel
\begin_inset Quotes grd
\end_inset

.
 Implizit gelte stets 
\begin_inset Formula $\bar{x}=\left(x_{1},\cdots,x_{\left|\mathrm{ar}\left(x\right)\right|}\right)$
\end_inset

.
 Die Menge aller Tupel einer bestimmten Stelligkeit 
\begin_inset Formula $k$
\end_inset

 sei 
\begin_inset Formula $A^{k}$
\end_inset

.
\end_layout

\begin_layout Definition
Für ein 
\begin_inset Formula $m$
\end_inset

-Tupel 
\begin_inset Formula $\bar{x}$
\end_inset

 und ein 
\begin_inset Formula $n$
\end_inset

-Tupel 
\begin_inset Formula $\bar{y}$
\end_inset

 sei 
\begin_inset Formula $\bar{x}\bar{y}$
\end_inset

 das 
\begin_inset Formula $\left(m+n\right)$
\end_inset

-Tupel 
\begin_inset Formula $\left(x_{1},\cdots,x_{m},y_{1},\cdots,y_{n}\right)$
\end_inset

.
 Das 
\begin_inset Formula $0$
\end_inset

-stellige Tupel wird durch 
\begin_inset Formula $\left\langle \right\rangle $
\end_inset

 notiert.
\end_layout

\begin_layout --Separator--

\end_layout

\begin_layout Definition

\series bold
Intervall
\end_layout

\begin_layout Definition
Ein endliches Intervall von natürlichen Zahlen wird durch 
\begin_inset Formula $\left[a,b\right]$
\end_inset

 abgekürzt:
\begin_inset Formula 
\[
\left[a,b\right]\coloneqq\left\{ i\in\mathbb{N}\mid a\leqslant i\leqslant b\right\} 
\]

\end_inset


\end_layout

\begin_layout Definition
Ein Intervall von reellen Zahlen wird durch 
\begin_inset Formula $\mathbb{R}_{\left[a,b\right]}$
\end_inset

 oder 
\begin_inset Formula $\mathbb{R}_{\left[a,b\right[}$
\end_inset

 abgekürzt: 
\begin_inset Formula 
\begin{eqnarray*}
\mathbb{R}_{\left[a,b\right]} & \coloneqq & \left\{ i\in\mathbb{R}\mid a\leqslant i\leqslant b\right\} \\
\mathbb{R}_{\left[a,b\right[} & \coloneqq & \left\{ i\in\mathbb{R}\mid a\leqslant i<b\right\} 
\end{eqnarray*}

\end_inset


\end_layout

\begin_layout Standard
Als nächstes definieren wir Relationen als Mengen von Tupeln von Elementen
 eines Universums.
 
\end_layout

\begin_layout Definition

\series bold
\begin_inset CommandInset label
LatexCommand label
name "def:Relation"

\end_inset

Relation
\end_layout

\begin_layout Definition
Für eine Menge 
\begin_inset Formula $A$
\end_inset

 und 
\begin_inset Formula $k\in\mathbb{N}$
\end_inset

 sei 
\begin_inset Formula $R\subseteq A^{k}$
\end_inset

 eine 
\begin_inset Formula $k$
\end_inset

-stellige Relation über 
\begin_inset Formula $A$
\end_inset

.
 Für jede Relation 
\begin_inset Formula $R\subseteq A^{k}$
\end_inset

 sei 
\begin_inset Formula $\left[R\right]:A^{k}\rightarrow\left\{ 0,1\right\} $
\end_inset

 die folgende Funktion: 
\begin_inset Formula 
\[
\left[R\right]\left(\bar{a}\right)\coloneqq\begin{cases}
1 & \mathrm{falls}\,\,\bar{a}\in R\\
0 & \mathrm{sonst}
\end{cases}
\]

\end_inset


\end_layout

\begin_layout Standard
Die Operatoren 
\begin_inset Formula $\min$
\end_inset

 und 
\begin_inset Formula $\max$
\end_inset

 definieren das kleinste und größte Element einer Menge unter einer bestimmten
 Ordnung.
\end_layout

\begin_layout Definition

\series bold
Minimum und Maximum
\end_layout

\begin_layout Definition
Für eine Ordnung 
\begin_inset Formula $\preceq$
\end_inset

 auf einer Menge 
\begin_inset Formula $X$
\end_inset

 seien 
\begin_inset Formula $\min_{\preceq}\left(X\right)\in X$
\end_inset

 und 
\begin_inset Formula $\max_{\preceq}\left(X\right)\in X$
\end_inset

 diejenigen Elemente (sofern vorhanden), so dass für alle Elemente 
\begin_inset Formula $z\in X$
\end_inset

 gilt:
\begin_inset Formula 
\[
\min_{\preceq}\left(X\right)\preceq z\preceq\max_{\preceq}\left(X\right)
\]

\end_inset

Für 
\begin_inset Formula $X\subseteq\mathbb{R}$
\end_inset

 wird die natürliche Ordnung 
\begin_inset Formula $\leqslant$
\end_inset

 nicht explizit notiert.
 Für eine Funktion 
\begin_inset Formula $f:U\rightarrow\mathbb{R}$
\end_inset

 und eine Menge 
\begin_inset Formula $X\subseteq U$
\end_inset

 bezeichnen 
\begin_inset Formula $\min_{x\in X}f\left(x\right)\in\mathbb{R}$
\end_inset

 und 
\begin_inset Formula $\max_{x\in X}f\left(x\right)\in\mathbb{R}$
\end_inset

 die folgende Abkürzungen:
\begin_inset Formula 
\begin{eqnarray*}
\min_{x\in X}f\left(x\right) & \coloneqq & \min\left\{ f\left(x\right)\mid x\in X\right\} \\
\max_{x\in X}f\left(x\right) & \coloneqq & \max\left\{ f\left(x\right)\mid x\in X\right\} 
\end{eqnarray*}

\end_inset


\end_layout

\begin_layout --Separator--

\end_layout

\begin_layout Definition

\series bold
Asymptotische Klassen
\end_layout

\begin_layout Definition
Für jede Funktion 
\begin_inset Formula $f:\mathbb{N}\rightarrow\mathbb{R}$
\end_inset

 definieren wir die Funktionsklassen 
\begin_inset Formula $\mathcal{O}\left(f\right)$
\end_inset

 und 
\begin_inset Formula $\Omega\left(f\right)$
\end_inset

:
\end_layout

\begin_deeper
\begin_layout Itemize
Es gelte 
\begin_inset Formula $g\in\mathcal{O}\left(f\right)$
\end_inset

 genau dann wenn ein 
\begin_inset Formula $n_{0},c\in\mathbb{N}$
\end_inset

 existieren, so dass für alle 
\begin_inset Formula $n\geqslant n_{0}$
\end_inset

 gilt: 
\begin_inset Formula $g\left(n\right)\leqslant c\cdot f\left(n\right)$
\end_inset

.
\end_layout

\begin_layout Itemize
Es gelte 
\begin_inset Formula $g\in\Omega\left(f\right)$
\end_inset

 genau dann wenn 
\begin_inset Formula $f\in\mathcal{O}\left(g\right)$
\end_inset

.
\end_layout

\end_deeper
\begin_layout Definition
Für 
\begin_inset Formula $f:\mathbb{R}\rightarrow\mathbb{R}$
\end_inset

 und eine Klasse 
\begin_inset Formula $\mathcal{F}$
\end_inset

 sei 
\begin_inset Formula $f\left(\mathcal{F}\right)\coloneqq\left\{ f\circ g\mid g\in\mathcal{F}\right\} $
\end_inset

.
 Zum Beispiel ist 
\begin_inset Formula $f\in2^{\mathcal{O}\left(n\right)}$
\end_inset

 genau dann wenn 
\begin_inset Formula $f\in\mathcal{O}\left(2^{kn}\right)$
\end_inset

 für ein festes 
\begin_inset Formula $k\in\mathbb{N}$
\end_inset

.
\end_layout

\begin_layout --Separator--

\end_layout

\begin_layout Standard
Wir legen mehrere einfache Operationen für Abbildungen fest, darunter die
 Verkettung, Vereinigung und Reduktion.
\end_layout

\begin_layout Definition

\series bold
Abbildung
\end_layout

\begin_layout Definition
Für eine Abbildung 
\begin_inset Formula $\pi:A\rightarrow B$
\end_inset

 und 
\begin_inset Formula $a\in A$
\end_inset

 schreiben wir statt 
\begin_inset Formula $\pi\left(a\right)$
\end_inset

 gegebenenfalls 
\begin_inset Formula $\pi a$
\end_inset

 ohne Klammern.
\end_layout

\begin_layout Definition
Jede Abbildung 
\begin_inset Formula $\pi:A\rightarrow B$
\end_inset

 wird auf natürliche Weise auf Tupel, Teilmengen und Relationen von 
\begin_inset Formula $A$
\end_inset

 erweitert:
\begin_inset Formula 
\begin{eqnarray*}
\pi\left(x_{1},\cdots,x_{k}\right) & \coloneqq & \left(\pi x_{1},\cdots,\pi x_{n}\right)\\
\pi\left\{ x_{1},\cdots,x_{n}\right\}  & \coloneqq & \left\{ \pi x_{1},\cdots,\pi x_{n}\right\} 
\end{eqnarray*}

\end_inset


\end_layout

\begin_layout Definition
Eine Abbildung 
\begin_inset Formula $\pi:A\rightarrow B$
\end_inset

 mit 
\begin_inset Formula $A=\left\{ a_{1},\cdots,a_{n}\right\} $
\end_inset

 schreiben wir gegebenenfalls extensional durch auf.
 Für ein Tupel 
\begin_inset Formula $\bar{a}=\left(a_{1},\cdots,a_{n}\right)$
\end_inset

 kürzen wir diese Abbildung auch durch 
\begin_inset Formula $\left(\bar{a}\mapsto\pi\bar{a}\right)$
\end_inset

 ab.
 
\begin_inset Formula 
\begin{eqnarray*}
\pi & \coloneqq & \left(\begin{array}{c}
a_{1}\\
\pi a_{1}
\end{array}\cdots\begin{array}{c}
a_{n}\\
\pi a_{n}
\end{array}\right)\\
\pi & \coloneqq & \left(\bar{a}\mapsto\pi\bar{a}\right)
\end{eqnarray*}

\end_inset


\end_layout

\begin_layout Definition
Für zwei Abbildungen 
\begin_inset Formula $\pi_{1}:B\rightarrow C$
\end_inset

 und 
\begin_inset Formula $\pi_{2}:A\rightarrow B$
\end_inset

 sei 
\begin_inset Formula $\pi_{1}\circ\pi_{2}:A\rightarrow C$
\end_inset

 (kurz 
\begin_inset Formula $\pi_{1}\pi_{2}$
\end_inset

) die folgende Abbildung: 
\begin_inset Formula 
\[
\pi_{1}\pi_{2}\coloneqq\left(\bar{a}\mapsto\pi_{1}\left(\pi_{2}\left(\bar{a}\right)\right)\right)
\]

\end_inset


\end_layout

\begin_layout Definition
Für zwei Abbildungen 
\begin_inset Formula $\pi:A\rightarrow B$
\end_inset

 und 
\begin_inset Formula $\pi':A'\rightarrow B'$
\end_inset

 mit disjunkten Definitionsbereichen 
\begin_inset Formula $A\cap A'=\emptyset$
\end_inset

 sei 
\begin_inset Formula $\pi''\coloneqq\pi\cup\pi'$
\end_inset

 die folgende Abbildung: 
\begin_inset Formula 
\begin{eqnarray*}
\pi'' & : & A\uplus A'\rightarrow B\cup B'\\
\pi''x & \coloneqq & \begin{cases}
\pi x & \mathrm{falls}\,\,x\in A\\
\pi'x & \mathrm{falls}\,\,x\in A'
\end{cases}
\end{eqnarray*}

\end_inset


\end_layout

\begin_layout Definition
Für 
\begin_inset Formula $\pi:A\rightarrow B$
\end_inset

 und 
\begin_inset Formula $A'\subseteq A$
\end_inset

 sei 
\begin_inset Formula $\pi_{\mid A'}:A'\rightarrow B$
\end_inset

 die Reduktion von 
\begin_inset Formula $\pi$
\end_inset

 auf eine Teilmenge des Definitionsbereichs, und 
\begin_inset Formula $\pi_{\backslash A'}:A\backslash A'\rightarrow B$
\end_inset

 die Reduktion auf das Komplement.
\end_layout

\begin_layout Definition
Es sei 
\begin_inset Formula $\mathbf{id}$
\end_inset

 die Identität mit 
\begin_inset Formula $\mathbf{id}\left(a\right)=a$
\end_inset

 für alle Elemente 
\begin_inset Formula $a$
\end_inset

.
 Mit 
\begin_inset Formula $\mathbf{id}_{\mid X}$
\end_inset

 bezeichnen wir die Identitätsfunktion auf einer festen Menge 
\begin_inset Formula $X$
\end_inset

.
\end_layout

\begin_layout Definition
Die Menge 
\begin_inset Formula $\mathrm{Abb}\left(A,B\right)$
\end_inset

 bezeichne für 
\begin_inset Formula $\left|A\right|=\left|B\right|$
\end_inset

 alle 
\begin_inset Formula $n!$
\end_inset

 bijektiven Abbildungen 
\begin_inset Formula $\pi:A\rightarrow B$
\end_inset

.
\end_layout

\begin_layout --Separator--

\end_layout

\begin_layout Definition

\series bold
Permutation
\end_layout

\begin_layout Definition
Eine Permutation von 
\begin_inset Formula $U$
\end_inset

 ist eine bijektive Abbildung 
\begin_inset Formula $\pi\in\mathrm{Abb}\left(U,U\right)$
\end_inset

.
 Die Menge aller Permutationen 
\begin_inset Formula $\mathrm{Abb}\left(U,U\right)$
\end_inset

 bezeichnen wir auch als 
\begin_inset Formula $\mathrm{Sym}_{U}$
\end_inset

.
 Diese bilden eine Symmetrie-Gruppe bezüglich der Verkettung 
\begin_inset Formula $\circ$
\end_inset

 mit dem neutralen Element 
\begin_inset Formula $\mathbf{id}_{\mid U}$
\end_inset

.
\end_layout

\begin_layout Definition
Es sei 
\begin_inset Formula $\pi^{-1}$
\end_inset

 die inverse Abbildung mit 
\begin_inset Formula $\pi^{-1}\pi=\pi\pi^{-1}=\mathbf{id}_{\mid U}$
\end_inset

.
\end_layout

\begin_layout Definition
Eine Transposition sei eine Permutation, die zwei Elemente 
\begin_inset Formula $u_{i}$
\end_inset

 und 
\begin_inset Formula $u_{j}$
\end_inset

 vertauscht und alle anderen Elemente fixiert.
 Diese wird kurz durch 
\begin_inset Formula $\left(u_{i}u_{j}\right)$
\end_inset

 notiert.
\end_layout

\begin_layout Section
Endliche relationale Strukturen
\end_layout

\begin_layout Standard
Wir betrachten Anfragen und Eigenschaften auf Graphen und allgemeinen relational
en Strukturen.
\end_layout

\begin_layout Definition

\series bold
Relationale Signatur
\end_layout

\begin_layout Definition
Eine relationale Signatur 
\begin_inset Formula $\sigma$
\end_inset

 ist eine Menge von Relationssymbolen.
 Jedes Symbol 
\begin_inset Formula $R\in\sigma$
\end_inset

 hat eine feste Stelligkeit 
\begin_inset Formula $\mathrm{ar}\left(R\right)=k\in\mathbb{N}_{\geqslant1}$
\end_inset

.
 Gegebenenfalls wird die Stelligkeit kompakt durch 
\begin_inset Formula $R/k\in\sigma$
\end_inset

 beziehungsweise 
\begin_inset Formula $\sigma=\left\{ R_{1}/k_{1},\cdots,R_{k}/k_{k}\right\} $
\end_inset

 notiert.
\end_layout

\begin_layout --Separator--

\end_layout

\begin_layout Definition

\series bold
Endliche Struktur
\end_layout

\begin_layout Definition
Eine endliche 
\begin_inset Formula $\sigma$
\end_inset

-Struktur 
\begin_inset Formula $\mathfrak{A}=\left(A,\left(R^{\mathfrak{A}}\right)_{R\in\sigma}\right)$
\end_inset

 über einer Signatur 
\begin_inset Formula $\sigma$
\end_inset

 besteht aus einem endlichen, nicht-leeren Universum 
\begin_inset Formula $A$
\end_inset

 und einer Interpretation 
\begin_inset Formula $R^{\mathfrak{A}}\subseteq A^{k}$
\end_inset

 für jedes Symbol 
\begin_inset Formula $R/k\in\sigma$
\end_inset

.
\end_layout

\begin_deeper
\begin_layout Itemize
Für eine endliche Menge 
\begin_inset Formula $U$
\end_inset

 sei 
\begin_inset Formula $\mathbf{FIN}^{U}\left(\sigma\right)$
\end_inset

 die Menge aller 
\begin_inset Formula $\sigma$
\end_inset

-Strukturen über dem Universum 
\begin_inset Formula $U$
\end_inset

.
\end_layout

\begin_layout Itemize
Für 
\begin_inset Formula $n\in\mathbb{N}_{\geqslant1}$
\end_inset

 seien 
\begin_inset Formula $\mathbf{FIN}^{\left(n\right)}\left(\sigma\right)$
\end_inset

 die 
\begin_inset Formula $\sigma$
\end_inset

-Strukturen über einem beliebigen Universum der Größe 
\begin_inset Formula $n$
\end_inset

.
\end_layout

\begin_layout Itemize
Seien 
\begin_inset Formula $\mathbf{FIN}\left(\sigma\right)\coloneqq\bigcup_{n\in\mathbb{N}_{\geqslant1}}\mathbf{FIN}^{\left(n\right)}\left(\sigma\right)$
\end_inset

 die endlichen 
\begin_inset Formula $\sigma$
\end_inset

-Strukturen.
\end_layout

\end_deeper
\begin_layout Standard
Die Signatur 
\begin_inset Formula $\sigma$
\end_inset

 kann in Ausnahmefällen unendlich sein; da wir jedoch nur endlich repräsentierba
re 
\begin_inset Formula $\sigma$
\end_inset

-Anfragen betrachten, können diese sich nur auf eine endlichen Menge von
 Relationssymbolen 
\begin_inset Formula $\sigma'\subseteq_{\mathrm{fin}}\sigma$
\end_inset

 beziehen.
\end_layout

\begin_layout Standard
Wir formalisieren die Interpretation als eine Abbildung 
\begin_inset Formula $\square^{\mathfrak{A}}:\sigma\rightarrow\bigcup_{k\in\mathbb{N}}2^{\left(A^{k}\right)}$
\end_inset

, die jedem Symbol eine Relation der entsprechenden Stelligkeit zuweist.
 Daher kann die Interpretation gegebenenfalls auch explizit durch 
\begin_inset Formula $\mathfrak{A}=\left(A,\square^{\mathfrak{A}}\right)$
\end_inset

 notiert werden, um die Zuordnung von Symbolen und Relationen zu verdeutlichen:
 
\begin_inset Formula 
\[
\mathfrak{A}:=\left(A,\left(\begin{array}{c}
R_{1}\\
R_{1}^{\mathfrak{A}}
\end{array}\cdots\begin{array}{c}
R_{k}\\
R_{k}^{\mathfrak{A}}
\end{array}\right)\right)
\]

\end_inset


\end_layout

\begin_layout Definition

\series bold
Geordnete Struktur
\end_layout

\begin_layout Definition
Sei 
\begin_inset Formula $\sigma$
\end_inset

 eine relationale Signatur, die nicht das zweistellige Symbol 
\begin_inset Formula $\leqslant$
\end_inset

 enthält.
\end_layout

\begin_layout Definition
Für 
\begin_inset Formula $a,b\in\mathbb{N}$
\end_inset

 sei 
\begin_inset Formula 
\[
\mathbf{FIN}_{\leqslant}^{\left[a,b\right]}\left(\sigma\right)\subseteq\mathbf{FIN}^{\left[a,b\right]}\left(\sigma\cup\left\{ \leqslant\right\} \right)
\]

\end_inset

 die Menge der endlichen 
\begin_inset Formula $\sigma\cup\left\{ \leqslant\right\} $
\end_inset

-Strukturen mit dem Universum 
\begin_inset Formula $\left[a,b\right]$
\end_inset

, wobei 
\begin_inset Formula $\leqslant$
\end_inset

 durch die natürliche Ordnung von 
\begin_inset Formula $\left[a,b\right]$
\end_inset

 interpretiert wird, und sei 
\begin_inset Formula 
\[
\mathbf{FIN}_{\leqslant}^{a}\left(\sigma\right)\coloneqq\bigcup_{b\in\mathbb{N}}\mathbf{FIN}_{\leqslant}^{\left[a,b\right]}\left(\sigma\right)
\]

\end_inset

 die Menge aller endlichen geordneten 
\begin_inset Formula $\sigma\cup\left\{ \leqslant\right\} $
\end_inset

-Strukturen über Intervallen, die mit 
\begin_inset Formula $a$
\end_inset

 beginnen (normalerweise mit 
\begin_inset Formula $a\in\left\{ 0,1\right\} $
\end_inset

).
\end_layout

\begin_layout Standard
Der Lesbarkeit halber verwenden wir die Infixnotation 
\begin_inset Formula $a\leqslant b$
\end_inset

 anstelle von 
\begin_inset Formula $\left(a,b\right)\in\leqslant$
\end_inset

 oder 
\begin_inset Formula $\left[\leqslant\right]\left(a,b\right)$
\end_inset

.
 Die Symbole 
\begin_inset Formula $\dot{\leqslant}$
\end_inset

 und 
\begin_inset Formula $\dot{=}$
\end_inset

 seien gleichbedeutend mit den Symbolen 
\begin_inset Formula $\leqslant$
\end_inset

 und 
\begin_inset Formula $=$
\end_inset

, und werden gegebenenfalls in Gleichungen wie 
\begin_inset Formula $\varphi=x\dot{=}y$
\end_inset

 und 
\begin_inset Formula $\varphi=x\dot{\leqslant}y$
\end_inset

 verwendet.
\end_layout

\begin_layout Definition

\series bold
\begin_inset CommandInset label
LatexCommand label
name "def:Isomorphismus"

\end_inset

Isomorphismus
\end_layout

\begin_layout Definition
Für zwei 
\begin_inset Formula $\sigma$
\end_inset

-Strukturen 
\begin_inset Formula $\mathfrak{A}$
\end_inset

 und 
\begin_inset Formula $\mathfrak{B}$
\end_inset

 sei eine bijektive Abbildung 
\begin_inset Formula $\pi\in\mathrm{Abb}\left(A,B\right)$
\end_inset

 ein Isomorphismus, falls 
\begin_inset Formula $\pi R^{\mathfrak{A}}=R^{\mathfrak{B}}$
\end_inset

 für alle Symbole 
\begin_inset Formula $R\in\sigma$
\end_inset

 gilt.
\end_layout

\begin_layout Definition
Die Abbildung 
\begin_inset Formula $\pi$
\end_inset

 wird auf natürliche Weise auf Strukturen erweitert: 
\begin_inset Formula 
\[
\pi\mathfrak{A}\coloneqq\left(\pi A,\left(\pi R^{\mathfrak{A}}\right)_{R\in\sigma}\right)
\]

\end_inset


\end_layout

\begin_layout Definition
Die Menge aller Isomorphismen bezeichnen wir mit 
\begin_inset Formula $\mathrm{Abb}\left(\mathfrak{A},\mathfrak{B}\right)$
\end_inset

.
 Zwei Strukturen heißen isomorph (kurz 
\begin_inset Formula $\mathfrak{A}\cong\mathfrak{B}$
\end_inset

), falls 
\begin_inset Formula $\mathrm{Abb}\left(\mathfrak{A},\mathfrak{B}\right)$
\end_inset

 nicht leer ist.
\end_layout

\begin_layout Definition
Ein Automorphismus 
\begin_inset Formula $\pi\in\mathrm{Abb}\left(\mathfrak{A},\mathfrak{A}\right)$
\end_inset

 sei ein Isomorphismus von 
\begin_inset Formula $\mathfrak{A}$
\end_inset

 zu sich selbst.
 Die Menge 
\begin_inset Formula $\mathrm{Abb}\left(\mathfrak{A},\mathfrak{A}\right)$
\end_inset

 nennen wir 
\begin_inset Formula $\mathrm{Aut}_{\mathfrak{A}}$
\end_inset

; diese bilden (genau wie die Permutationen) eine Gruppe bezüglich der Verkettun
g 
\begin_inset Formula $\circ$
\end_inset

 und dem neutralen Element 
\begin_inset Formula $\mathbf{id}_{\mid A}$
\end_inset

.
\end_layout

\begin_layout --Separator--

\end_layout

\begin_layout Definition

\series bold
\begin_inset CommandInset label
LatexCommand label
name "def:Disjunkte-Vereinigung"

\end_inset

Vereinigung von Strukturen
\end_layout

\begin_layout Definition
Zwei Strukturen können vereinigt werden, wenn sie entweder disjunkte Signaturen
 oder die gleiche Signatur besitzen.
 Für eine 
\begin_inset Formula $\sigma_{1}$
\end_inset

-Struktur 
\begin_inset Formula $\mathfrak{A}$
\end_inset

 und eine 
\begin_inset Formula $\sigma_{2}$
\end_inset

-Struktur 
\begin_inset Formula $\mathfrak{B}$
\end_inset

 gilt:
\end_layout

\begin_deeper
\begin_layout Enumerate
Wenn 
\begin_inset Formula $\sigma_{1}\cap\sigma_{2}=\emptyset$
\end_inset

, so ist 
\begin_inset Formula $\mathfrak{A}\cup\mathfrak{B}$
\end_inset

 die folgende 
\begin_inset Formula $\left(\sigma_{1}\cup\sigma_{2}\right)$
\end_inset

-Struktur:
\begin_inset Formula 
\[
\mathfrak{A}\cup\mathfrak{B}\coloneqq\left(A\cup B,\left(R^{\mathfrak{A}}\right)_{R\in\sigma_{1}},\left(R^{\mathfrak{B}}\right)_{R\in\sigma_{2}}\right)
\]

\end_inset


\end_layout

\begin_layout Enumerate
Wenn 
\begin_inset Formula $\sigma_{1}=\sigma_{2}=\sigma$
\end_inset

, so ist 
\begin_inset Formula $\mathfrak{A}\cup\mathfrak{B}$
\end_inset

 die folgende 
\begin_inset Formula $\sigma$
\end_inset

-Struktur:
\begin_inset Formula 
\[
\mathfrak{A}\cup\mathfrak{B}\coloneqq\left(A\cup B,\left(R^{\mathfrak{A}}\cup R^{\mathfrak{B}}\right)_{R\in\sigma}\right)
\]

\end_inset


\end_layout

\end_deeper
\begin_layout Definition
Falls das Universum der beiden Strukturen ebenfalls disjunkt ist, so heißt
 
\begin_inset Formula $\mathfrak{A}\cup\mathfrak{B}=\mathfrak{A}\uplus\mathfrak{B}$
\end_inset

 die 
\series bold
disjunkte Vereinigung
\series default
 der Strukturen.
\end_layout

\begin_layout --Separator--

\end_layout

\begin_layout Definition

\series bold
\begin_inset CommandInset label
LatexCommand label
name "def:Induzierte-Teilstruktur"

\end_inset

Induzierte Teilstruktur
\end_layout

\begin_layout Definition
Für eine Relation 
\begin_inset Formula $R\subseteq A^{k}$
\end_inset

 und eine Teilmenge 
\begin_inset Formula $A'\subseteq A$
\end_inset

 sei 
\begin_inset Formula $R_{\mid A'}\coloneqq R\cap\left(A'\right)^{k}$
\end_inset

 die von 
\begin_inset Formula $A'$
\end_inset

 induzierte Teilrelation.
 Für eine 
\begin_inset Formula $\sigma$
\end_inset

-Struktur 
\begin_inset Formula $\mathfrak{A}$
\end_inset

 sei 
\begin_inset Formula $\mathfrak{A}_{\mid A'}\coloneqq\left(A',\left(R_{\mid A'}^{\mathfrak{A}}\right)_{R\in\sigma}\right)$
\end_inset

 die von der Teilmenge 
\begin_inset Formula $A'$
\end_inset

 in 
\begin_inset Formula $\mathfrak{A}$
\end_inset

 induzierte Teilstruktur.
\end_layout

\begin_layout --Separator--

\end_layout

\begin_layout Definition

\series bold
Anfrage
\end_layout

\begin_layout Definition
Eine 
\begin_inset Formula $\sigma$
\end_inset


\series bold
-Anfrage
\series default
 
\begin_inset Formula $q$
\end_inset

 mit der Stelligkeit 
\begin_inset Formula $\mathrm{ar}\left(q\right)=k$
\end_inset

 sei eine Abbildung jeder endlichen 
\begin_inset Formula $\sigma$
\end_inset

-Struktur 
\begin_inset Formula $\mathfrak{A}\in\mathbf{FIN}\left(\sigma\right)$
\end_inset

 auf eine Relation 
\begin_inset Formula $q\left(\mathfrak{A}\right)\subseteq A^{k}$
\end_inset

.
\end_layout

\begin_layout Definition
Eine 
\begin_inset Formula $\sigma$
\end_inset


\series bold
-Eigenschaft
\series default
 
\begin_inset Formula $S\subseteq\mathbf{FIN}\left(\sigma\right)$
\end_inset

 sei eine Menge von 
\begin_inset Formula $\sigma$
\end_inset

-Strukturen und entspreche der 0-stelligen Anfrage 
\begin_inset Formula $q_{S}$
\end_inset

:
\begin_inset Formula 
\begin{eqnarray*}
q_{S}\left(\mathfrak{A}\right) & \coloneqq & \begin{cases}
\left\{ \left\langle \right\rangle \right\}  & \mathrm{falls}\,\mathfrak{A}\in S\\
\emptyset & \mathrm{sonst}
\end{cases}
\end{eqnarray*}

\end_inset


\end_layout

\begin_layout Definition
Per Definition sind alle 
\begin_inset Formula $\sigma$
\end_inset

-Anfragen und 
\begin_inset Formula $\sigma$
\end_inset

-Eigenschaften unter Isomorphismen abgeschlossen: Für 
\begin_inset Formula $\mathfrak{A}\cong\mathfrak{B}$
\end_inset

 und 
\begin_inset Formula $\pi\in\mathrm{Abb}\left(\mathfrak{A},\mathfrak{B}\right)$
\end_inset

 gilt 
\begin_inset Formula $\pi q\left(\mathfrak{A}\right)=q\left(\mathfrak{B}\right)$
\end_inset

 und 
\begin_inset Formula $\mathfrak{A}\in S\Leftrightarrow\mathfrak{B}\in S$
\end_inset

.
\end_layout

\begin_layout Chapter
Logik
\end_layout

\begin_layout Section
Grundlagen der relationalen Logik
\end_layout

\begin_layout Standard
Wir betrachten logische Sprachen auf relationalen Signaturen 
\begin_inset Formula $\sigma$
\end_inset

, deren Ausdrücke auf endlichen 
\begin_inset Formula $\sigma$
\end_inset

-Strukturen ausgewertet werden.
\end_layout

\begin_layout Standard
Zunächst definieren wir 
\begin_inset Formula $\mathbf{var}$
\end_inset

 als die Menge aller erststufigen Variablen.
 Für einen Ausdruck 
\begin_inset Formula $\omega$
\end_inset

 sei 
\begin_inset Formula $\mathrm{var}\left(\omega\right)$
\end_inset

 die Menge der darin vorkommenden Variablen, und 
\begin_inset Formula $\mathrm{frei}\left(\omega\right)\subseteq\mathrm{var}\left(\omega\right)$
\end_inset

 die Menge der freien Variablen.
\end_layout

\begin_layout Standard
In einer Struktur 
\begin_inset Formula $\mathfrak{A}$
\end_inset

 sei eine 
\series bold
Belegung
\series default
 
\begin_inset Formula $\beta$
\end_inset

 eine partielle Abbildung 
\begin_inset Formula $\beta:\mathbf{var}\rightarrow A$
\end_inset

 von Variablen auf Elemente des Universums.
\end_layout

\begin_layout Standard
Eine Auswertungsfunktion für eine Struktur 
\begin_inset Formula $\mathfrak{A}$
\end_inset

 und eine Belegung 
\begin_inset Formula $\beta$
\end_inset

 wird durch 
\begin_inset Formula $\left\llbracket \cdot\right\rrbracket \left(\mathfrak{A},\beta\right)$
\end_inset

 notiert.
\end_layout

\begin_layout Definition
Eine Logik 
\begin_inset Formula $\mathcal{L}\left[\sigma\right]$
\end_inset

 besteht aus der Sprache der 
\begin_inset Formula $\mathcal{L}\left[\sigma\right]$
\end_inset

-Terme, der Sprache der 
\begin_inset Formula $\mathcal{L}\left[\sigma\right]$
\end_inset

-Formeln, und einer Auswertungsfunktion 
\begin_inset Formula $\left\llbracket \cdot\right\rrbracket \left(\mathfrak{A},\beta\right)$
\end_inset

 für jede Struktur 
\begin_inset Formula $\mathfrak{A}$
\end_inset

 und Belegung 
\begin_inset Formula $\beta$
\end_inset

.
\end_layout

\begin_layout Definition
Für einen 
\begin_inset Formula $\mathcal{L}\left[\sigma\right]$
\end_inset

-Term 
\begin_inset Formula $t$
\end_inset

 ist 
\begin_inset Formula $\left\llbracket t\right\rrbracket \left(\mathfrak{A},\beta\right)\in A$
\end_inset

 ein Element des Universums.
 Für eine 
\begin_inset Formula $\mathcal{L}\left[\sigma\right]$
\end_inset

-Formel 
\begin_inset Formula $\varphi$
\end_inset

 ist 
\begin_inset Formula $\left\llbracket \varphi\right\rrbracket \left(\mathfrak{A},\beta\right)\in\left\{ 0,1\right\} $
\end_inset

 ein Wahrheitswert.
\end_layout

\begin_layout Notation
Wir verwenden den Begriff 
\begin_inset Quotes gld
\end_inset

Ausdruck
\begin_inset Quotes grd
\end_inset

 als Oberbegriff der Formeln und Terme einer Logik, und bezeichnen Ausdrücke
 mit dem Buchstaben 
\begin_inset Formula $\omega$
\end_inset

.
 Terme werden mit kleinen Buchstaben benannt, und Formeln mit den Buchstaben
 
\begin_inset Formula $\varphi$
\end_inset

, 
\begin_inset Formula $\psi$
\end_inset

 oder 
\begin_inset Formula $\chi$
\end_inset

.
\end_layout

\begin_layout Definition
Für eine Formel 
\begin_inset Formula $\varphi$
\end_inset

 und ein Tupel 
\begin_inset Formula $\bar{x}\in\mathbf{var}^{k}$
\end_inset

 mit 
\begin_inset Formula $\mathrm{frei}\left(\varphi\right)=\left\{ x_{1},\cdots,x_{k}\right\} $
\end_inset

 und 
\begin_inset Formula $\left|\left\{ x_{1},\cdots,x_{k}\right\} \right|=k$
\end_inset

 nennen wir das Tupel 
\begin_inset Formula $\bar{x}=x_{1}\cdots x_{k}$
\end_inset

 ein 
\series bold
Argument 
\series default
von 
\begin_inset Formula $\varphi$
\end_inset

.
 Verschiedene Argumente von 
\begin_inset Formula $\varphi$
\end_inset

 unterscheiden sich nur in der Reihenfolge der Variablen.
 Durch die Notation 
\begin_inset Formula $\varphi\left(\bar{x}\right)$
\end_inset

 legen wir ein beliebiges Argument 
\begin_inset Formula $\bar{x}$
\end_inset

 für 
\begin_inset Formula $\varphi$
\end_inset

 fest.
\end_layout

\begin_layout Definition
Die 
\series bold
Stelligkeit 
\series default
einer logischen Formel (beziehungsweise ihrer Argumente) bezeichne die Anzahl
 der frei vorkommenden Variablen: Für 
\begin_inset Formula $\varphi\left(\bar{x}\right)$
\end_inset

 gelte: 
\begin_inset Formula 
\[
\mathrm{ar}\left(\varphi\right)=\mathrm{ar}\left(\bar{x}\right)=\left|\mathrm{frei}\left(\varphi\right)\right|
\]

\end_inset


\end_layout

\begin_layout Definition
Ein 
\series bold
Satz
\series default
 sei eine Formel ohne freie Variablen.
\end_layout

\begin_layout Standard
Mit 
\begin_inset Formula $\mathtt{MF}\left(\omega\right)$
\end_inset

 bezeichnen wir die maximale Anzahl freier Variablen jedes Teilausdrucks
 von 
\begin_inset Formula $\omega$
\end_inset

.
\end_layout

\begin_layout Definition
Für eine 
\begin_inset Formula $k$
\end_inset

-stellige Formel 
\begin_inset Formula $\varphi$
\end_inset

 und eine Belegung 
\begin_inset Formula $\beta:\mathrm{frei}\left(\varphi\right)\rightarrow A$
\end_inset

 schreiben wir 
\begin_inset Formula $\mathfrak{A}\models\varphi^{\beta}$
\end_inset

 genau dann wenn 
\begin_inset Formula $\left\llbracket \varphi\right\rrbracket \left(\mathfrak{A},\beta\right)=1$
\end_inset

.
\end_layout

\begin_layout Definition
Für 
\begin_inset Formula $\varphi\left(\bar{x}\right)$
\end_inset

 und 
\begin_inset Formula $\bar{a}\in A^{\mathrm{ar}\left(\bar{x}\right)}$
\end_inset

 schreiben wir 
\begin_inset Formula $\left\llbracket \varphi\right\rrbracket \left(\mathfrak{A},\bar{a}\right)$
\end_inset

 anstelle von 
\begin_inset Formula $\left\llbracket \varphi\right\rrbracket \left(\mathfrak{A},\left(\bar{x}\mapsto\bar{b}\right)\right)$
\end_inset

, und 
\begin_inset Formula $\mathfrak{A}\models\varphi\left[\bar{a}\right]$
\end_inset

 anstelle von 
\begin_inset Formula $\mathfrak{A}\models\varphi^{\bar{x}\mapsto\bar{a}}$
\end_inset

.
\end_layout

\begin_layout Definition
Entsprechend sei 
\begin_inset Formula 
\[
q_{\varphi\left(\bar{x}\right)}\left(\mathfrak{A}\right)\coloneqq\left\{ \bar{a}\in A^{\mathrm{ar}\left(\bar{x}\right)}\mid\mathfrak{A}\models\varphi\left[\bar{a}\right]\right\} 
\]

\end_inset

die Relation aller 
\begin_inset Formula $\varphi$
\end_inset

 erfüllenden Tupel.
\end_layout

\begin_layout Standard
Somit beschreibt jede 
\begin_inset Formula $\mathcal{L}\left[\sigma\right]$
\end_inset

-Formel 
\begin_inset Formula $\varphi\left(\bar{x}\right)$
\end_inset

 eine 
\begin_inset Formula $\sigma$
\end_inset

-Anfrage 
\begin_inset Formula $q_{\varphi\left(\bar{x}\right)}$
\end_inset

, und jeder Satz eine 
\begin_inset Formula $\sigma$
\end_inset

-Eigenschaft.
 Da die Reihenfolge der Spalten der Relation von der Wahl des Arguments
 
\begin_inset Formula $\bar{x}$
\end_inset

 abhängt, wird es durch 
\begin_inset Formula $q_{\varphi\left(\bar{x}\right)}$
\end_inset

 mit angegeben.
\end_layout

\begin_layout Definition
Für eine Formel 
\begin_inset Formula $\varphi$
\end_inset

 und eine Belegung 
\begin_inset Formula $\beta:X\rightarrow A$
\end_inset

 mit 
\begin_inset Formula $X\subsetneqq\mathrm{frei}\left(\varphi\right)$
\end_inset

 sei 
\begin_inset Formula $\varphi^{\beta}$
\end_inset

 ein 
\series bold
partiell belegter
\series default
 Ausdruck; es sei 
\begin_inset Formula $\mathrm{frei}\left(\varphi^{\beta}\right)=\mathrm{frei}\left(\varphi\right)\backslash X$
\end_inset

.
\end_layout

\begin_layout Definition
Für 
\begin_inset Formula $\beta':\mathrm{frei}\left(\varphi^{\beta}\right)\rightarrow A$
\end_inset

 bezeichne 
\begin_inset Formula $\left\llbracket \varphi^{\beta}\right\rrbracket \left(\mathfrak{A},\beta'\right)$
\end_inset

 die Auswertung 
\begin_inset Formula $\left\llbracket \varphi\right\rrbracket \left(\mathfrak{A},\beta\cup\beta'\right)$
\end_inset

.
 Es sei 
\begin_inset Formula 
\[
q_{\varphi^{\beta}\left(\bar{x}'\right)}\coloneqq\left\{ \bar{a}\in A^{\ell}\mid\mathfrak{A}\models\varphi^{\beta}\left[\bar{a}\right]\right\} 
\]

\end_inset

 die von 
\begin_inset Formula $\varphi^{\beta}$
\end_inset

 definierte 
\begin_inset Formula $\sigma$
\end_inset

-Anfrage.
\end_layout

\begin_layout --Separator--

\end_layout

\begin_layout Definition
Für eine 
\begin_inset Formula $\mathcal{L}\left[\sigma\right]$
\end_inset

-Formel 
\begin_inset Formula $\varphi$
\end_inset

 und 
\begin_inset Formula $n\in\mathbb{N}$
\end_inset

 drücke 
\begin_inset Formula $\models_{n}\varphi$
\end_inset

 aus, dass diese von allen 
\begin_inset Formula $\sigma$
\end_inset

-Strukturen 
\begin_inset Formula $\mathfrak{A}\in\mathbf{FIN}^{\left(n\right)}\left(\sigma\right)$
\end_inset

 der Größe 
\begin_inset Formula $n$
\end_inset

 unter allen Belegungen erfüllt wird.
 Die Notation 
\begin_inset Formula $\models_{\mathrm{fin}}\varphi$
\end_inset

 drücke aus, dass 
\begin_inset Formula $\varphi$
\end_inset

 von allen endlichen 
\begin_inset Formula $\sigma$
\end_inset

-Strukturen 
\begin_inset Formula $\mathfrak{A}\in\mathbf{FIN}\left(\sigma\right)$
\end_inset

 unter allen Belegungen erfüllt wird.
\end_layout

\begin_layout Definition
Falls 
\begin_inset Formula $\models_{n}\left(\varphi\leftrightarrow\psi\right)$
\end_inset

, so heißen 
\begin_inset Formula $\varphi$
\end_inset

 und 
\begin_inset Formula $\psi$
\end_inset

 
\begin_inset Formula $n$
\end_inset

-
\series bold
äquivalent
\series default
.
 Insbesondere bedeutet dies, dass 
\begin_inset Formula $\varphi$
\end_inset

 und 
\begin_inset Formula $\psi$
\end_inset

 die gleiche Anfrage 
\begin_inset Formula $q_{\varphi\left(\bar{x}\right)}=q_{\psi\left(\bar{x}\right)}$
\end_inset

 auf Strukturen der Größe 
\begin_inset Formula $n$
\end_inset

 definieren.
\end_layout

\begin_layout Section
Die Logik erster Stufe
\end_layout

\begin_layout Definition
\begin_inset CommandInset label
LatexCommand label
name "def:fo"

\end_inset

Für eine relationale Signatur 
\begin_inset Formula $\sigma$
\end_inset

 sind die Syntax und Semantik der Logik erster Stufe 
\begin_inset Formula $\mathrm{FO}\left[\sigma\right]$
\end_inset

 wie folgt definiert.
\end_layout

\begin_layout Labeling
\labelwidthstring 00.00.0000
(TV) Für jede Variable 
\begin_inset Formula $x\in\mathbf{var}$
\end_inset

 ist 
\begin_inset Formula $x$
\end_inset

 ein 
\begin_inset Formula $\mathrm{FO}\left[\sigma\right]$
\end_inset

-Term.
 
\begin_inset Formula 
\[
\mathrm{frei}\left(x\right)=\mathrm{var}\left(x\right)\coloneqq\left\{ x\right\} 
\]

\end_inset


\begin_inset Formula 
\[
\left\llbracket x\right\rrbracket \left(\mathfrak{A},\beta\right)\coloneqq\beta x
\]

\end_inset


\end_layout

\begin_layout Labeling
\labelwidthstring 00.00.0000
(AR) Für jedes Relationssymbol 
\begin_inset Formula $R/k\in\sigma$
\end_inset

 und jedes 
\begin_inset Formula $k$
\end_inset

-Tupel von 
\begin_inset Formula $\mathrm{FO}\left[\sigma\right]$
\end_inset

-Termen 
\begin_inset Formula $\bar{x}$
\end_inset

 ist 
\begin_inset Formula $R\bar{x}$
\end_inset

 eine 
\begin_inset Formula $\mathrm{FO}\left[\sigma\right]$
\end_inset

-Formel.
\begin_inset Formula 
\begin{eqnarray*}
\mathrm{frei}\left(R\bar{x}\right)\coloneqq\bigcup_{i=1}^{k}\mathrm{frei}\left(x_{i}\right) &  & \mathrm{var}\left(R\bar{x}\right)\coloneqq\bigcup_{i=1}^{k}\mathrm{var}\left(x_{i}\right)
\end{eqnarray*}

\end_inset


\begin_inset Formula 
\begin{eqnarray*}
\left\llbracket R\bar{x}\right\rrbracket \left(\mathfrak{A},\beta\right) & \coloneqq & \left[R^{\mathfrak{A}}\right]\left(\left\llbracket x_{1}\right\rrbracket \left(\mathfrak{A},\beta\right),\cdots,\left\llbracket x_{k}\right\rrbracket \left(\mathfrak{A},\beta\right)\right)
\end{eqnarray*}

\end_inset


\end_layout

\begin_layout Labeling
\labelwidthstring 00.00.0000
(AE) Für zwei 
\begin_inset Formula $\mathrm{FO}\left[\sigma\right]$
\end_inset

-Terme 
\begin_inset Formula $x_{1},x_{2}$
\end_inset

 ist 
\begin_inset Formula $x_{1}\dot{=}x_{2}$
\end_inset

 eine 
\begin_inset Formula $\mathrm{FO}\left[\sigma\right]$
\end_inset

-Formel.
\begin_inset Formula 
\begin{eqnarray*}
\mathrm{frei}\left(x_{1}\dot{=}x_{2}\right)\coloneqq\bigcup_{i=1}^{2}\mathrm{frei}\left(x_{i}\right) &  & \mathrm{var}\left(x_{1}\dot{=}x_{2}\right)\coloneqq\bigcup_{i=1}^{2}\mathrm{var}\left(x_{i}\right)
\end{eqnarray*}

\end_inset


\begin_inset Formula 
\begin{eqnarray*}
\left\llbracket x\dot{=}y\right\rrbracket \left(\mathfrak{A},\beta\right) & \coloneqq & \begin{cases}
1 & \mathrm{falls}\,\left\llbracket x\right\rrbracket \left(\mathfrak{A},\beta\right)=\left\llbracket y\right\rrbracket \left(\mathfrak{A},\beta\right)\\
0 & \mathrm{sonst}
\end{cases}
\end{eqnarray*}

\end_inset


\end_layout

\begin_layout Labeling
\labelwidthstring 00.00.0000
(N) Für eine 
\begin_inset Formula $\mathrm{FO}\left[\sigma\right]$
\end_inset

-Formel 
\begin_inset Formula $\varphi$
\end_inset

 ist 
\begin_inset Formula $\neg\varphi$
\end_inset

 eine 
\begin_inset Formula $\mathrm{FO}\left[\sigma\right]$
\end_inset

-Formel.
\begin_inset Formula 
\begin{eqnarray*}
\mathrm{frei}\left(\neg\varphi\right)\coloneqq\mathrm{frei}\left(\varphi\right) &  & \mathrm{var}\left(\neg\varphi\right)\coloneqq\mathrm{var}\left(\varphi\right)
\end{eqnarray*}

\end_inset


\begin_inset Formula 
\[
\left\llbracket \neg\varphi\right\rrbracket \left(\mathfrak{A},\beta\right)\coloneqq1-\left\llbracket \varphi\right\rrbracket \left(\mathfrak{A},\beta\right)
\]

\end_inset


\end_layout

\begin_layout Labeling
\labelwidthstring 00.00.0000
(J) Für 
\begin_inset Formula $k\geqslant2$
\end_inset

 
\begin_inset Formula $\mathrm{FO}\left[\sigma\right]$
\end_inset

-Formeln 
\begin_inset Formula $\varphi_{1},\cdots,\varphi_{k}$
\end_inset

 und einen Junktor 
\begin_inset Formula $\gamma\in\left\{ \wedge,\vee,\rightarrow,\leftrightarrow\right\} $
\end_inset

 (mit 
\begin_inset Formula $k=2$
\end_inset

 für 
\begin_inset Formula $\gamma\in\left\{ \rightarrow,\leftrightarrow\right\} $
\end_inset

) ist auch 
\begin_inset Formula $\left(\varphi_{1}\gamma\cdots\gamma\varphi_{k}\right)$
\end_inset

 eine 
\begin_inset Formula $\mathrm{FO}\left[\sigma\right]$
\end_inset

-Formel.
 
\begin_inset Formula 
\begin{eqnarray*}
\mathrm{frei}\left(\varphi_{1}\gamma\cdots\gamma\varphi_{k}\right)\coloneqq\bigcup_{i=1}^{k}\mathrm{frei}\left(\varphi_{i}\right) &  & \mathrm{var}\left(\varphi_{1}\gamma\cdots\gamma\varphi_{k}\right)\coloneqq\bigcup_{i=1}^{k}\mathrm{var}\left(\varphi_{i}\right)
\end{eqnarray*}

\end_inset


\begin_inset Formula 
\begin{eqnarray*}
\left\llbracket \varphi_{1}\wedge\cdots\wedge\varphi_{k}\right\rrbracket \left(\mathfrak{A},\beta\right) & \coloneqq & \min_{1\leqslant i\leqslant k}\left\llbracket \varphi_{i}\right\rrbracket \left(\mathfrak{A},\beta\right)\\
\left\llbracket \varphi_{1}\vee\cdots\vee\varphi_{k}\right\rrbracket \left(\mathfrak{A},\beta\right) & \coloneqq & \max_{1\leqslant i\leqslant k}\left\llbracket \varphi_{i}\right\rrbracket \left(\mathfrak{A},\beta\right)\\
\left\llbracket \varphi_{1}\rightarrow\varphi_{2}\right\rrbracket \left(\mathfrak{A},\beta\right) & \coloneqq & \left\llbracket \neg\varphi_{1}\vee\varphi_{2}\right\rrbracket \left(\mathfrak{A},\beta\right)\\
\left\llbracket \varphi_{1}\leftrightarrow\varphi_{2}\right\rrbracket \left(\mathfrak{A},\beta\right) & \coloneqq & \left\llbracket \left(\varphi_{1}\rightarrow\varphi_{2}\right)\wedge\left(\varphi_{2}\rightarrow\varphi_{1}\right)\right\rrbracket \left(\mathfrak{A},\beta\right)
\end{eqnarray*}

\end_inset


\end_layout

\begin_layout Labeling
\labelwidthstring 00.00.0000
(Q) Für einen Quantor 
\begin_inset Formula $Q\in\left\{ \exists,\forall\right\} $
\end_inset

, eine Variable 
\begin_inset Formula $x\in\mathbf{var}$
\end_inset

 und eine 
\begin_inset Formula $\mathrm{FO}\left[\sigma\right]$
\end_inset

-Formel 
\begin_inset Formula $\varphi$
\end_inset

 ist 
\begin_inset Formula $Qx\varphi$
\end_inset

 eine 
\begin_inset Formula $\mathrm{FO}\left[\sigma\right]$
\end_inset

-Formel.
\begin_inset Formula 
\begin{eqnarray*}
\mathrm{frei}\left(Qx\varphi\right)\coloneqq\mathrm{frei}\left(\varphi\right)\backslash\left\{ x\right\}  &  & \mathrm{var}\left(Qx\varphi\right)\coloneqq\mathrm{var}\left(\varphi\right)\cup\left\{ x\right\} 
\end{eqnarray*}

\end_inset


\begin_inset Formula 
\begin{eqnarray*}
\left\llbracket \exists x\varphi\right\rrbracket \left(\mathfrak{A},\beta\right) & \coloneqq & \max_{a\in A}\left(\left\llbracket \varphi\right\rrbracket \left(\mathfrak{A},\beta_{\backslash\left\{ x\right\} }\uplus\left(\begin{array}{c}
x\\
a
\end{array}\right)\right)\right)\\
\left\llbracket \forall x\varphi\right\rrbracket \left(\mathfrak{A},\beta\right) & \coloneqq & \min_{a\in A}\left(\left\llbracket \varphi\right\rrbracket \left(\mathfrak{A},\beta_{\backslash\left\{ x\right\} }\uplus\left(\begin{array}{c}
x\\
a
\end{array}\right)\right)\right)
\end{eqnarray*}

\end_inset

Ohne Beschränkung der Allgemeinheit gelte für 
\begin_inset Formula $Qx\varphi$
\end_inset

 stets 
\begin_inset Formula $x\in\mathrm{frei}\left(\varphi\right)$
\end_inset

, denn 
\begin_inset Formula $Qx\varphi\equiv Qx\left(x\dot{=}x\wedge\varphi\right)$
\end_inset

.
\end_layout

\begin_layout Standard
Wir kürzen 
\begin_inset Formula $Qx_{1}\cdots Qx_{k}\varphi$
\end_inset

 durch 
\begin_inset Formula $Q\bar{x}\varphi$
\end_inset

 und 
\begin_inset Formula $\bigwedge_{i=1}^{k}\left(x_{i}=y_{i}\right)$
\end_inset

 durch 
\begin_inset Formula $\bar{x}=\bar{y}$
\end_inset

 ab.
 Im folgenden werden wir außerdem Formeln ohne Implikations-Pfeile betrachten.
\end_layout

\begin_layout Definition
Eine 
\begin_inset Formula $\mathrm{FO}\left[\sigma\right]$
\end_inset

-Formel sei 
\series bold
implikationsfrei 
\series default
wenn sie keine Teilformel der Form 
\begin_inset Formula $\left(\varphi\rightarrow\psi\right)$
\end_inset

 oder 
\begin_inset Formula $\left(\varphi\leftrightarrow\psi\right)$
\end_inset

 enthält.
\end_layout

\begin_layout Standard
Weil 
\begin_inset Formula $\left(\varphi\rightarrow\psi\right)\equiv\left(\neg\varphi\vee\psi\right)$
\end_inset

 und 
\begin_inset Formula $\left(\varphi\leftrightarrow\psi\right)\equiv\left(\varphi\wedge\psi\right)\vee\left(\neg\varphi\wedge\neg\psi\right)$
\end_inset

, sind alle 
\begin_inset Formula $\mathrm{FO}\left[\sigma\right]$
\end_inset

-Formeln äquivalent zu implikationsfreien 
\begin_inset Formula $\mathrm{FO}\left[\sigma\right]$
\end_inset

-Formeln.
 Hierbei entsteht ein fester Zuwachs in der Länge der Formel 
\begin_inset Formula $\left\Vert \varphi\right\Vert $
\end_inset

, so dass die Voraussetzung nur gemacht werden kann, wenn wir bezüglich
 
\begin_inset Formula $\left\Vert \varphi\right\Vert $
\end_inset

 parametrisierte Komplexitätsklassen betrachten.
\end_layout

\begin_layout Section
Logiken mit Fixpunkt-Erweiterung
\end_layout

\begin_layout Standard
Wir führen eine Erweiterung ein, die es erlaubt, den iterativen Fixpunkt
 einer selbstbezüglichen logischen Formel zu definieren.
\end_layout

\begin_layout Definition
Eine Logik 
\begin_inset Formula $\mathcal{L}$
\end_inset

 erweitert die Logik 
\begin_inset Formula $\mathcal{L}'$
\end_inset

, wenn sie die Syntax und Semantik von 
\begin_inset Formula $\mathcal{L}'$
\end_inset

 übernimmt, und zusätzliche Produktionen einführt.
\end_layout

\begin_layout Standard
Als erstes definieren wir einen neuen Typ von Variablen.
\end_layout

\begin_layout Definition
Sei 
\begin_inset Formula $\mathbf{var}_{2}$
\end_inset

 die Menge aller Relationsvariablen.
 Jede solche Variable 
\begin_inset Formula $X\in\mathbf{var}_{2}$
\end_inset

 besitzt eine Stelligkeit 
\begin_inset Formula $\mathrm{ar}\left(X\right)=k\in\mathbb{N}_{\geqslant1}$
\end_inset

; diese wird auch durch 
\begin_inset Formula $X/k\in\mathbf{var}_{2}$
\end_inset

 notiert.
 Die Funktionen 
\begin_inset Formula $\mathrm{frei}$
\end_inset

 und 
\begin_inset Formula $\mathrm{var}$
\end_inset

, so wie die Belegungen 
\begin_inset Formula $\beta$
\end_inset

, werden auf 
\begin_inset Formula $\mathbf{var}\uplus\mathbf{var}_{2}$
\end_inset

 erweitert.
\begin_inset Formula 
\begin{eqnarray*}
\mathrm{frei}\left(\varphi\right),\mathrm{var}\left(\varphi\right) & \subseteq & \mathbf{var}\uplus\mathbf{var}_{2}\\
\beta:\mathrm{frei}\left(\varphi\right) & \rightarrow & A\cup\bigcup_{k\in\mathbb{N}}A^{k}\\
\beta X & \subseteq & A^{\mathrm{ar}\left(X\right)}\,\mathrm{für}\,X\in\mathbf{var}_{2}
\end{eqnarray*}

\end_inset


\end_layout

\begin_layout Standard
Wir möchten syntaktisch garantieren, dass der Fixpunkt der selbstreferenziellen
 Formel monoton wächst.
 Dafür wird verlangt, dass die Selbstreferenz nicht negiert vorkommt.
\end_layout

\begin_layout Definition

\series bold
Positivität
\end_layout

\begin_layout Definition
Wir definieren die (nicht disjunkten) Mengen der 
\begin_inset Formula $X$
\end_inset

-positiven und 
\begin_inset Formula $X$
\end_inset

-negativen 
\begin_inset Formula $\mathcal{L}\left[\sigma\right]$
\end_inset

-Formeln für 
\begin_inset Formula $X\in\mathbf{var}_{2}$
\end_inset

 wie folgt:
\end_layout

\begin_deeper
\begin_layout Itemize
Jeder 
\begin_inset Formula $\mathcal{L}\left[\sigma\right]$
\end_inset

-Ausdruck 
\begin_inset Formula $\omega$
\end_inset

 mit 
\begin_inset Formula $X\notin\mathrm{frei}\left(\omega\right)$
\end_inset

 ist sowohl 
\begin_inset Formula $X$
\end_inset

-positiv als auch 
\begin_inset Formula $X$
\end_inset

-negativ.
\end_layout

\begin_layout Itemize
Für jede 
\begin_inset Formula $X$
\end_inset

-positive Formel 
\begin_inset Formula $\varphi$
\end_inset

 ist 
\begin_inset Formula $\neg\varphi$
\end_inset

 
\begin_inset Formula $X$
\end_inset

-negativ, und umgekehrt.
\end_layout

\begin_layout Itemize
Für einen Junktor 
\begin_inset Formula $\gamma\in\left\{ \wedge,\vee\right\} $
\end_inset

 und 
\begin_inset Formula $k\geqslant2$
\end_inset

 
\begin_inset Formula $X$
\end_inset

-positive (beziehungsweise 
\begin_inset Formula $X$
\end_inset

-negative) Formeln 
\begin_inset Formula $\varphi_{1},\cdots,\varphi_{k}$
\end_inset

 ist 
\begin_inset Formula $\left(\varphi_{1}\gamma\cdots\gamma\varphi_{k}\right)$
\end_inset

 ebenfalls 
\begin_inset Formula $X$
\end_inset

-positiv (beziehungsweise 
\begin_inset Formula $X$
\end_inset

-negativ).
\end_layout

\begin_layout Itemize
Für einen Quantor 
\begin_inset Formula $Q\in\left\{ \exists,\forall\right\} $
\end_inset

, eine Variable 
\begin_inset Formula $x\in\mathbf{var}$
\end_inset

 und eine 
\begin_inset Formula $X$
\end_inset

-positive (beziehungsweise 
\begin_inset Formula $X$
\end_inset

-negative) Formel 
\begin_inset Formula $\varphi$
\end_inset

 ist 
\begin_inset Formula $Qx\varphi$
\end_inset

 ebenfalls 
\begin_inset Formula $X$
\end_inset

-positiv (beziehungsweise 
\begin_inset Formula $X$
\end_inset

-negativ).
\end_layout

\end_deeper
\begin_layout Standard
Nun definieren wir die Fixpunkt-Erweiterung.
\end_layout

\begin_layout Definition
\begin_inset CommandInset label
LatexCommand label
name "def:lfp"

\end_inset

Für eine Logik 
\begin_inset Formula $\mathcal{L}$
\end_inset

 und eine relationale Signatur 
\begin_inset Formula $\sigma$
\end_inset

 erweitert 
\begin_inset Formula $\left(\mathcal{L}+\mathrm{LFP}\right)\left[\sigma\right]$
\end_inset

 die Logik 
\begin_inset Formula $\mathcal{L}\left[\sigma\right]$
\end_inset

 wie folgt:
\end_layout

\begin_layout Labeling
\labelwidthstring 00.00.0000
(AV) Für eine Relationsvariable 
\begin_inset Formula $X/k\in\mathbf{var}_{2}$
\end_inset

 und ein 
\begin_inset Formula $k$
\end_inset

-Tupel 
\begin_inset Formula $\bar{x}$
\end_inset

 von 
\begin_inset Formula $X$
\end_inset

-positiven 
\begin_inset Formula $\left(\mathcal{L}+\mathrm{LFP}\right)\left[\sigma\right]$
\end_inset

-Termen ist 
\begin_inset Formula $X\bar{x}$
\end_inset

 eine 
\begin_inset Formula $X$
\end_inset

-positive 
\begin_inset Formula $\left(\mathcal{L}+\mathrm{LFP}\right)\left[\sigma\right]$
\end_inset

-Formel.
\lang english

\begin_inset Formula 
\begin{eqnarray*}
\mathrm{frei}\left(X\bar{x}\right) & \coloneqq & \left\{ X\right\} \cup\bigcup_{i=1}^{k}\mathrm{frei}\left(x_{i}\right)\\
\mathrm{var}\left(X\bar{x}\right) & \coloneqq & \left\{ X\right\} \cup\bigcup_{i=1}^{k}\mathrm{var}\left(x_{i}\right)\\
\left\llbracket X\bar{x}\right\rrbracket \left(\mathfrak{A},\beta\right) & \coloneqq & \left[\beta X\right]\left(\beta\bar{x}\right)
\end{eqnarray*}

\end_inset


\end_layout

\begin_layout Labeling
\labelwidthstring 00.00.0000
(LFP) Für eine Relationsvariable 
\begin_inset Formula $X/k\in\mathbf{var}_{2}$
\end_inset

, eine 
\begin_inset Formula $X$
\end_inset

-positive 
\begin_inset Formula $\left(\mathcal{L}+\mathrm{LFP}\right)\left[\sigma\right]$
\end_inset

-Formel 
\begin_inset Formula $\psi$
\end_inset

, ein Tupel 
\begin_inset Formula $\bar{x}\in\mathbf{var}^{k}$
\end_inset

 und ein 
\begin_inset Formula $k$
\end_inset

-Tupel 
\begin_inset Formula $\bar{y}$
\end_inset

 von 
\begin_inset Formula $X$
\end_inset

-positiven 
\begin_inset Formula $\mathrm{\left(\mathrm{FO}+\mathrm{LFP}\right)}\left[\sigma\right]$
\end_inset

-Termen ist 
\begin_inset Formula $\varphi=\left[\mathrm{lfp}_{X,\bar{x}}\psi\right]\left(\bar{y}\right)$
\end_inset

 eine 
\begin_inset Formula $X$
\end_inset

-positive 
\begin_inset Formula $\left(\mathrm{\mathcal{L}+\mathrm{LFP}}\right)\left[\sigma\right]$
\end_inset

-Formel.
\begin_inset Formula 
\begin{eqnarray*}
\mathrm{frei}\left(\varphi\right) & = & \mathrm{frei}\left(\psi\right)\backslash\left\{ X,x_{1},\cdots,x_{k}\right\} \cup\bigcup_{i=1}^{k}\mathrm{frei}\left(y_{i}\right)\\
\mathrm{var}\left(\varphi\right) & = & \mathrm{var}\left(\psi\right)\cup\left\{ X,x_{1},\cdots,x_{k}\right\} \cup\bigcup_{i=1}^{k}\mathrm{var}\left(y_{i}\right)
\end{eqnarray*}

\end_inset


\end_layout

\begin_layout Standard
Ohne Beschränkung der Allgemeinheit sei 
\begin_inset Formula $\left\{ x_{1},\cdots,x_{k}\right\} \subseteq\mathrm{frei}\left(\psi\right)$
\end_inset

, denn analog zu Definition 
\begin_inset CommandInset ref
LatexCommand ref
reference "def:fo"

\end_inset

 ist 
\begin_inset Formula $\psi\equiv\left(\bar{x}=\bar{x}\wedge\psi\right)$
\end_inset

.
\end_layout

\begin_layout Standard
Die nicht durch den Operator gebundenen Variablen 
\begin_inset Formula $\mathrm{frei}\left(\psi\right)\backslash\left\{ x_{1},\cdots,x_{k}\right\} \subseteq\mathrm{frei}\left(\varphi\right)$
\end_inset

 heißen 
\series bold
Parameter
\series default
 der Fixpunkt-Operation.
\end_layout

\begin_layout Standard
Für 
\begin_inset Formula $X/k\in\mathbf{var}_{2}$
\end_inset

, eine 
\begin_inset Formula $\sigma$
\end_inset

-Struktur 
\begin_inset Formula $\mathfrak{A}$
\end_inset

, eine 
\begin_inset Formula $X$
\end_inset

-positive 
\begin_inset Formula $\left(\mathrm{FO}+\mathrm{LFP}\right)\left[\sigma\right]$
\end_inset

-Formel, und eine Parameter-Belegung 
\begin_inset Formula 
\[
\beta:\mathrm{frei}\left(\psi\right)\backslash\left\{ X,x_{1},\cdots,x_{k}\right\} \rightarrow A
\]

\end_inset

sei 
\begin_inset Formula $F_{\beta}$
\end_inset

 die folgende Abbildung: 
\begin_inset Formula 
\begin{eqnarray*}
F_{\beta} & : & 2^{A^{k}}\rightarrow2^{A^{k}}\\
F_{\beta}\left(Y\right) & \coloneqq & \left\{ \bar{a}\in A^{k}\mid\mathfrak{A}\models\varphi^{\beta\cup\left(X\mapsto Y\right)}\right\} 
\end{eqnarray*}

\end_inset

Das heißt: 
\begin_inset Formula $F_{\beta}\left(Y\right)$
\end_inset

 ist das Anfrageergebnis von 
\begin_inset Formula $\varphi$
\end_inset

 auf 
\begin_inset Formula $\mathfrak{A}$
\end_inset

 unter der Belegung der Parameter mit 
\begin_inset Formula $\beta$
\end_inset

 und der Variable 
\begin_inset Formula $X$
\end_inset

 mit der Relation 
\begin_inset Formula $Y$
\end_inset

.
\end_layout

\begin_layout Standard
Aus der 
\begin_inset Formula $X$
\end_inset

-Positivität folgt nach 
\begin_inset CommandInset citation
LatexCommand cite
key "Gurevich1986,Libkin2012"

\end_inset

 die Monotonie von 
\begin_inset Formula $F_{\beta}$
\end_inset


\begin_inset Formula 
\[
A\subseteq B\Rightarrow F_{\beta}\left(A\right)\subseteq F_{\beta}\left(B\right)
\]

\end_inset

und daher induktiv die Existenz eines kleinsten Fixpunkts 
\begin_inset Formula $F^{\infty}\left(\emptyset\right)$
\end_inset

:
\begin_inset Formula 
\[
\emptyset\subseteq F_{\beta}\left(\emptyset\right)\subseteq\cdots\subseteq F_{\beta}^{\infty}\left(\emptyset\right)\subseteq A^{k}
\]

\end_inset


\end_layout

\begin_layout Standard
Insbesondere ist 
\begin_inset Formula $F_{\beta}^{\infty}\left(\emptyset\right)=F^{\left|A^{k}\right|}\left(\emptyset\right)$
\end_inset

, da die Iteration nach höchstens 
\begin_inset Formula $\left|A^{k}\right|$
\end_inset

 Iterationen ihren Fixpunkt erreicht.
\end_layout

\begin_layout Standard
Für eine Belegung 
\begin_inset Formula $\beta:\mathrm{frei}\left(\varphi\right)\rightarrow A$
\end_inset

 prüft 
\begin_inset Formula $\varphi=\left[\mathrm{lfp}_{X,\bar{x}}\psi\right]\left(\bar{y}\right)$
\end_inset

 nun, ob die Belegung des Tupels 
\begin_inset Formula $\bar{y}$
\end_inset

 im Fixpunkt 
\begin_inset Formula $F_{\beta'}^{\infty}$
\end_inset

 liegt, wobei 
\begin_inset Formula $\beta'$
\end_inset

 die Reduktion von 
\begin_inset Formula $\beta$
\end_inset

 auf die Parameter ist: 
\begin_inset Formula 
\begin{eqnarray*}
\beta' & \coloneqq & \beta_{\mid\mathrm{frei}\left(\psi\right)\backslash\left\{ X,x_{1},\cdots,x_{k}\right\} }\\
\left\llbracket \left[\mathrm{lfp}_{X,\bar{x}}\psi\right]\left(\bar{y}\right)\right\rrbracket \left(\mathfrak{A},\beta\right) & \coloneqq & \left\llbracket X\bar{y}\right\rrbracket \left(\mathfrak{A},\beta\cup\left(X\mapsto F_{\beta'}^{\infty}\left(\emptyset\right)\right)\right)
\end{eqnarray*}

\end_inset


\end_layout

\begin_layout Standard
Im folgenden wird die Logik 
\begin_inset Formula $\mathrm{FO}+\mathrm{LFP}$
\end_inset

 abgekürzt als 
\begin_inset Formula $\mathrm{LFP}$
\end_inset

 bezeichnet.
 Ferner werden wir uns auf das 
\emph on
parameterfreie
\emph default
 Fragment der Logik beschränken, was (bis auf einen Zuwachs in der Anzahl
 der Variablen und Länge der Formel) die Allgemeinheit nicht einschränkt.
\end_layout

\begin_layout Definition
\begin_inset CommandInset label
LatexCommand label
name "def:fp-param"

\end_inset

Eine 
\begin_inset Formula $\mathrm{LFP}\left[\sigma\right]$
\end_inset

-Formel 
\begin_inset Formula $\varphi$
\end_inset

 ist 
\series bold
parameterfrei
\series default
, falls der Fixpunktoperator stets alle Variablen bindet - das heißt, für
 jede Teilformel der Form 
\begin_inset Formula $\left[\mathrm{lfp}_{X,\bar{x}}\psi\right]\left(\bar{y}\right)$
\end_inset

 gilt: 
\begin_inset Formula 
\[
\mathrm{frei}\left(\psi\right)\subseteq\left\{ X,x_{1},\cdots,x_{\mathrm{ar}\left(X\right)}\right\} 
\]

\end_inset


\end_layout

\begin_layout Proposition
\begin_inset CommandInset label
LatexCommand label
name "prop:fp-param"

\end_inset

Jede 
\begin_inset Formula $\mathrm{LFP}\left[\sigma\right]$
\end_inset

-Formel 
\begin_inset Formula $\varphi$
\end_inset

 kann (unter Zuwachs der Länge 
\begin_inset Formula $\left\Vert \varphi\right\Vert $
\end_inset

 und Größe 
\begin_inset Formula $\left|\mathrm{var}\left(\varphi\right)\right|$
\end_inset

) in eine parameterfreie 
\begin_inset Formula $\mathrm{LFP}\left[\sigma\right]$
\end_inset

-Formel 
\begin_inset Formula $\varphi'$
\end_inset

 übersetzt werden.
\begin_inset CommandInset citation
LatexCommand cite
key "Zaid,Grohe2005,Dziembowski96bounded-variablefixpoint"

\end_inset


\end_layout

\begin_layout Example
Die folgende 
\begin_inset Formula $\mathrm{LFP}\left[\left\{ E\right\} \right]$
\end_inset

-Formel 
\begin_inset Formula $\varphi\left(u,v\right)$
\end_inset

 ist erfüllt, wenn 
\begin_inset Formula $u$
\end_inset

 und 
\begin_inset Formula $v$
\end_inset

 durch einen Weg beliebiger Länge verbunden sind: 
\begin_inset Formula 
\[
\varphi\left(u,v\right)\coloneqq\left[\mathrm{lfp}_{T,\left(x,y\right)}\,\left(\exists z\,\left(E\left(x,z\right)\wedge T\left(z,y\right)\right)\vee x\dot{=}y\right)\right]\left(u,v\right)
\]

\end_inset


\end_layout

\begin_layout Section
Logiken mit disjunkten numerischen Erweiterungen
\end_layout

\begin_layout Standard
Eine Erweiterung um ein numerisches Orakel fügt einer Logik eine Anzahl
 von Relationssymbolen hinzu, die für 
\begin_inset Formula $\mathfrak{A}\in\mathbf{FIN}\left(\sigma\right)$
\end_inset

 eine feste Interpretation über einem von 
\begin_inset Formula $A$
\end_inset

 disjunkten numerischen Universum 
\begin_inset Formula $\left[0,\left|A\right|\right]$
\end_inset

 erhalten.
\end_layout

\begin_layout Definition

\series bold
\begin_inset Formula $\eta$
\end_inset

-Orakel, 
\begin_inset Formula $\mathcal{L}+\Upsilon$
\end_inset

-Logik
\end_layout

\begin_layout Definition
Sei 
\begin_inset Formula $\eta$
\end_inset

 eine relationale Signatur.
 Ein 
\begin_inset Formula $\eta$
\end_inset

-Orakel 
\begin_inset Formula $\Upsilon:\mathbb{N}\rightarrow\mathbf{FIN}_{\leqslant}^{0}\left(\eta\right)$
\end_inset

 ist eine Funktion, die jeder natürlichen Zahl 
\begin_inset Formula $n$
\end_inset

 eine geordnete 
\begin_inset Formula $\left(\eta\uplus\left\{ \leqslant\right\} \right)$
\end_inset

-Struktur 
\begin_inset Formula $\Upsilon\left(n\right)$
\end_inset

 über 
\begin_inset Formula $\left[0,n\right]$
\end_inset

 zuweist.
\end_layout

\begin_layout Definition
Sei 
\begin_inset Formula $\sigma$
\end_inset

 eine von 
\begin_inset Formula $\eta\uplus\left\{ \leqslant\right\} $
\end_inset

 disjunkte relationale Signatur und 
\begin_inset Formula $\mathcal{L}$
\end_inset

 eine Logik (zum Beispiel 
\begin_inset Formula $\mathrm{FO}$
\end_inset

 oder 
\begin_inset Formula $\mathrm{LFP}$
\end_inset

).
 Für ein 
\begin_inset Formula $\eta$
\end_inset

-Orakel 
\begin_inset Formula $\Upsilon$
\end_inset

 ist die Syntax der 
\begin_inset Formula $\left(\mathcal{L}+\Upsilon\right)\left[\sigma\right]$
\end_inset

-Logik die der Logik 
\begin_inset Formula $\mathcal{L}\left[\sigma\uplus\eta\uplus\left\{ \leqslant\right\} \right]$
\end_inset

.
\end_layout

\begin_layout Definition
Für eine endliche 
\begin_inset Formula $\sigma$
\end_inset

-Struktur 
\begin_inset Formula $\mathfrak{A}$
\end_inset

 mit 
\begin_inset Formula $A\cap\left[0,\left|A\right|\right]=\emptyset$
\end_inset

 und eine Belegung 
\begin_inset Formula $\beta:\mathbf{var}\rightarrow A\uplus\left[0,\left|A\right|\right]$
\end_inset

 werden 
\begin_inset Formula $\left(\mathcal{L}+\Upsilon\right)$
\end_inset

-Ausdrücke auf der disjunkten Vereinigung von 
\begin_inset Formula $\mathfrak{A}$
\end_inset

 mit der entsprechenden Orakelstruktur 
\begin_inset Formula $\Upsilon\left(\left|A\right|\right)$
\end_inset

 ausgewertet:
\begin_inset Formula 
\[
\left\llbracket \varphi\right\rrbracket \left(\mathfrak{A},\beta\right)\coloneqq\left\llbracket \varphi\right\rrbracket \left(\mathfrak{A}\uplus\Upsilon\left(\left|A\right|\right),\beta\right)
\]

\end_inset


\end_layout

\begin_layout Standard
Wir definieren die folgenden drei numerischen Orakel für die reine Ordnung,
 für Arithmetik, und für nicht berechenbare Prädikate.
\end_layout

\begin_layout Definition

\series bold
\begin_inset CommandInset label
LatexCommand label
name "def:ord"

\end_inset


\series default
Sei 
\begin_inset Formula $\mathbf{ORD}:\mathbb{N}\rightarrow\mathbf{FIN}_{<}^{0}\left(\emptyset\right)$
\end_inset

 ein 
\begin_inset Formula $\emptyset$
\end_inset

-Orakel, das für 
\begin_inset Formula $n\in\mathbb{N}$
\end_inset

 die geordnete 
\begin_inset Formula $\emptyset$
\end_inset

-Struktur 
\begin_inset Formula 
\[
\mathbf{ORD}\left(n\right)\coloneqq\left(\left[0,n\right],\leqslant_{\mid\left[0,n\right]}\right)\in\mathbf{FIN}_{<}^{\left[0,n\right]}\left(\emptyset\right)
\]

\end_inset

erzeugt.
\end_layout

\begin_layout --Separator--

\end_layout

\begin_layout Definition

\series bold
\begin_inset CommandInset label
LatexCommand label
name "def:bit"

\end_inset


\series default
Sei 
\begin_inset Formula $\mathbf{BIT}:\mathbb{N}\rightarrow\mathbf{FIN}_{<}^{0}\left(\left\{ \mathtt{BIT}\right\} \right)$
\end_inset

 ein 
\begin_inset Formula $\left\{ \mathtt{BIT}\right\} $
\end_inset

-Orakel, wobei das Prädikat 
\begin_inset Formula $\mathtt{BIT}\left(a,b\right)$
\end_inset

 ausdrückt, dass das 
\begin_inset Formula $b$
\end_inset

te Bit der Binärdarstellung von 
\begin_inset Formula $a$
\end_inset

 den Wert 
\begin_inset Formula $1$
\end_inset

 hat.
 
\begin_inset Formula 
\begin{eqnarray*}
\mathcal{N}_{\mathrm{bit}} & \coloneqq & \left(\mathbb{N},\leqslant,\mathtt{BIT}^{\mathcal{N}}\right)\\
\mathtt{BIT}^{\mathcal{N}} & \coloneqq & \left\{ \left(a,b\right)\in\mathbb{N}^{2}\mid a=\Sigma_{i=0}^{\left\lceil \log a\right\rceil }x_{i}2^{i},\,\bar{x}\in\left\{ 0,1\right\} ^{\left\lceil \log a\right\rceil },\,x_{b}=1\right\} \\
\mathbf{BIT}\left(n\right) & \coloneqq & \left(\mathcal{N}_{\mathrm{bit}}\right)_{\mid\left[0,n\right]}\in\mathbf{FIN}_{<}^{\left[0,n\right]}\left(\left\{ \mathtt{BIT}\right\} \right)
\end{eqnarray*}

\end_inset


\end_layout

\begin_layout --Separator--

\end_layout

\begin_layout Definition
\begin_inset CommandInset label
LatexCommand label
name "def:arb"

\end_inset

Sei 
\begin_inset Formula $\eta_{\mathrm{arb}}=\left\{ R_{X}\mid X\in\bigcup_{k\in\mathbb{N}}2^{\mathbb{N}^{k}}\right\} $
\end_inset

 eine unendliche Signatur, die für jede beliebige Relation 
\begin_inset Formula $X\subseteq\mathbb{N}^{k}$
\end_inset

 mit 
\begin_inset Formula $k\in\mathbb{N}$
\end_inset

 auf den natürlichen Zahlen ein Symbol 
\begin_inset Formula $R_{X}/k$
\end_inset

 enthält.
 Sei 
\begin_inset Formula $\mathbf{ARB}:\mathbb{N}\rightarrow\mathbf{FIN}_{<}^{0}\left(\eta_{\mathrm{arb}}\right)$
\end_inset

 ein 
\begin_inset Formula $\eta_{\mathrm{arb}}$
\end_inset

-Orakel, das die endlichen Anfangsstücke dieser Relationen ausgibt:
\begin_inset Formula 
\begin{eqnarray*}
\mathcal{N}_{\mathrm{arb}} & \coloneqq & \left(\mathbb{N},\leqslant,\left(R_{X}^{\mathcal{N}}\right)_{R_{X}\in\eta_{\mathrm{arb}}}\right)\\
R_{X}^{\mathcal{N}} & \coloneqq & X\\
\mathbf{ARB}\left(n\right) & \coloneqq & \left(\mathcal{N}_{\mathrm{arb}}\right)_{\mid\left[0,n\right]}\in\mathbf{FIN}_{<}^{\left[0,n\right]}\left(\eta_{\mathrm{arb}}\right)
\end{eqnarray*}

\end_inset


\end_layout

\begin_layout Standard
Wir führen mehrere syntaktische Erweiterungen der Logik 
\begin_inset Formula $\mathrm{FO}+\Upsilon$
\end_inset

 ein: Den Zählterm 
\begin_inset Formula $\#$
\end_inset

, den Zählquantor 
\begin_inset Formula $\exists^{=}$
\end_inset

, und den Majority-Quantor 
\begin_inset Formula $\exists^{\geqslant}$
\end_inset

.
 Es wird nachgewiesen, dass alle drei Erweiterungen die gleiche Ausdrucksstärke
 modulo einem festen Zuwachs der Formellänge haben.
\end_layout

\begin_layout Definition

\series bold
Zählterm 
\begin_inset Formula $\#$
\end_inset


\series default
 (wie 
\begin_inset CommandInset citation
LatexCommand cite
key "anderson_et_al:LIPIcs:2014:4445"

\end_inset

)
\end_layout

\begin_layout Definition
Der Zählterm ist eine zusätzliche Termproduktion, die die erfüllenden Belegungen
 einer Formel zählt.
\end_layout

\begin_layout Definition
Sei 
\begin_inset Formula $\mathcal{L}$
\end_inset

 eine beliebige Logik, 
\begin_inset Formula $\eta$
\end_inset

 eine relationale Signatur, und 
\begin_inset Formula $\Upsilon:\mathbb{N}\rightarrow\mathbf{FIN}_{<}\left(\eta\right)$
\end_inset

 ein 
\begin_inset Formula $\eta$
\end_inset

-Orakel.
\end_layout

\begin_layout Definition
Die 
\begin_inset Formula $\left(\mathcal{L}+\Upsilon+\#\right)$
\end_inset

-Logik erweitert die 
\begin_inset Formula $\left(\mathcal{L}+\Upsilon\right)$
\end_inset

-Logik um die folgende Regel:
\end_layout

\begin_deeper
\begin_layout Labeling
\labelwidthstring 00.00.0000
(TC) Für eine 
\begin_inset Formula $\left(\mathcal{L}+\Upsilon+\#\right)\left[\sigma\right]$
\end_inset

-Formel 
\begin_inset Formula $\varphi$
\end_inset

 und eine Variable 
\begin_inset Formula $x\in\mathbf{var}$
\end_inset

 ist 
\begin_inset Formula $\#x\varphi$
\end_inset

 ein 
\begin_inset Formula $\left(\mathcal{L}+\Upsilon+\#\right)\left[\sigma\right]$
\end_inset

-Term.
 
\begin_inset Formula 
\begin{eqnarray*}
\mathrm{frei}\left(\#x\varphi\right)=\mathrm{frei}\left(\varphi\right)\backslash\left\{ x\right\}  &  & \mathrm{var}\left(\#x\varphi\right)=\mathrm{var}\left(\varphi\right)\cup\left\{ x\right\} 
\end{eqnarray*}

\end_inset

Auf einer endlichen Struktur 
\begin_inset Formula $\mathfrak{A}\in\mathbf{FIN}^{\left(n\right)}\left(\sigma\right)$
\end_inset

 mit 
\begin_inset Formula $n\in\mathbb{N}$
\end_inset

 und einer Belegung 
\begin_inset Formula $\beta:\mathrm{frei}\left(\varphi\right)\backslash\left\{ x\right\} \rightarrow A\uplus\left[0,n\right]$
\end_inset

 sei 
\begin_inset Formula 
\[
\left\llbracket \#x\varphi\right\rrbracket \left(\mathfrak{A},\beta\right)\coloneqq\left|\left\{ a\in A\mid\mathfrak{A}\models\varphi^{\beta\cup\binom{x}{a}}\right\} \right|
\]

\end_inset

die Anzahl der unterschiedlichen Werte 
\begin_inset Formula $a\in A$
\end_inset

, für die 
\begin_inset Formula $\mathfrak{A}\models\varphi^{\beta\cup\binom{x}{a}}$
\end_inset

 gilt.
\end_layout

\end_deeper
\begin_layout Example*
Diese Erweiterung erlaubt die Definition vieler arithmetischer Operatoren
 durch Terme, wie zum Beispiel die positive Differenz:
\begin_inset Formula 
\begin{eqnarray*}
t_{\mathrm{DIFF}}\left(x,y\right) & \coloneqq & \#_{z}\left(\neg z\leqslant x\wedge z\leqslant y\right)\\
\left\llbracket t_{\mathrm{DIFF}}\right\rrbracket \left(\mathfrak{A},\left(a,b\right)\right) & = & \max\left(b-a,0\right)
\end{eqnarray*}

\end_inset


\end_layout

\begin_layout Definition

\series bold
Zählquantor 
\series default

\begin_inset Formula $\exists^{=}$
\end_inset

 (wie 
\begin_inset CommandInset citation
LatexCommand cite
key "Schweikardt:2005:AFL:1071596.1071602"

\end_inset

, aber mit disjunktem Orakel)
\end_layout

\begin_layout Definition
Der Zählquantor ist eine zusätzlicher Quantor, der die Zahl der erfüllenden
 Belegungen einer Formel mit einer Variable vergleicht.
\end_layout

\begin_layout Definition
Sei 
\begin_inset Formula $\mathcal{L}$
\end_inset

 eine beliebige Logik, 
\begin_inset Formula $\eta$
\end_inset

 eine relationale Signatur, und 
\begin_inset Formula $\Upsilon:\mathbb{N}\rightarrow\mathbf{FIN}_{<}^{\left[0,n\right]}\left(\eta\right)$
\end_inset

 ein 
\begin_inset Formula $\eta$
\end_inset

-Orakel.
\end_layout

\begin_layout Definition
Die 
\begin_inset Formula $\mathcal{L}+\Upsilon+\exists^{=}$
\end_inset

-Logik erweitert die 
\begin_inset Formula $\mathcal{L}+\Upsilon$
\end_inset

-Logik um die folgende Regel:
\end_layout

\begin_deeper
\begin_layout Labeling
\labelwidthstring 00.00.0000
(QC) Für eine 
\begin_inset Formula $\left(\mathcal{L}+\Upsilon+\exists^{=}\right)\left[\sigma\right]$
\end_inset

-Formel 
\begin_inset Formula $\varphi$
\end_inset

 und zwei Variablen 
\begin_inset Formula $x,y\in\mathbf{var}$
\end_inset

 ist 
\begin_inset Formula $\exists^{=y}x\varphi$
\end_inset

 eine 
\begin_inset Formula $\left(\mathcal{L}+\Upsilon+\exists^{=}\right)\left[\sigma\right]$
\end_inset

-Formel.
 
\begin_inset Formula 
\begin{eqnarray*}
\mathrm{frei}\left(\exists^{=y}x\varphi\right)=\left\{ y\right\} \cup\left(\mathrm{frei}\left(\varphi\right)\backslash\left\{ x\right\} \right) &  & \mathrm{var}\left(\exists^{=y}x\varphi\right)=\mathrm{var}\left(\varphi\right)\cup\left\{ x,y\right\} 
\end{eqnarray*}

\end_inset

Auf einer endlichen Struktur 
\begin_inset Formula $\mathfrak{A}\in\mathbf{FIN}^{\left(n\right)}\left(\sigma\right)$
\end_inset

 mit einer Belegung 
\begin_inset Formula 
\[
\beta:\left(\mathrm{frei}\left(\varphi\right)\backslash\left\{ x\right\} \right)\cup\left\{ y\right\} \rightarrow A\cup\left[0,n\right]
\]

\end_inset

 gilt: 
\begin_inset Formula 
\[
\left\llbracket \exists^{=y}x\varphi\right\rrbracket \left(\mathfrak{A},\beta\right)\coloneqq\begin{cases}
1 & \mathrm{falls}\,\,\beta y=\left\{ a\in A\mid\mathfrak{A}\models\varphi^{\beta_{\backslash\left\{ x\right\} }\cup\binom{x}{a}}\right\} \\
0 & \mathrm{sonst}
\end{cases}
\]

\end_inset


\end_layout

\end_deeper
\begin_layout --Separator--

\end_layout

\begin_layout Definition

\series bold
Majority-Quantor 
\series default

\begin_inset Formula $\exists^{\geqslant}$
\end_inset


\end_layout

\begin_layout Definition
Der Majority-Quantor funktioniert wie der Zählquantor und prüft, ob die
 Zahl der erfüllenden Belegungen mindestens den Wert einer Variable erreicht.
\end_layout

\begin_layout Definition
Sei 
\begin_inset Formula $\mathcal{L}$
\end_inset

 eine beliebige Logik, 
\begin_inset Formula $\eta$
\end_inset

 eine relationale Signatur, und 
\begin_inset Formula $\Upsilon:\mathbb{N}\rightarrow\mathbf{FIN}_{<}^{\left[0,n\right]}\left(\eta\right)$
\end_inset

 ein 
\begin_inset Formula $\eta$
\end_inset

-Orakel.
\end_layout

\begin_layout Definition
Die 
\begin_inset Formula $\mathcal{L}+\Upsilon+\exists^{\geqslant}$
\end_inset

-Logik erweitert die 
\begin_inset Formula $\mathcal{L}+\Upsilon$
\end_inset

-Logik um die folgende Regel:
\end_layout

\begin_deeper
\begin_layout Labeling
\labelwidthstring 00.00.0000
(QM) Für eine 
\begin_inset Formula $\left(\mathcal{L}+\Upsilon+\exists^{\geqslant}\right)\left[\sigma\right]$
\end_inset

-Formel 
\begin_inset Formula $\varphi$
\end_inset

 und zwei Variablen 
\begin_inset Formula $x,y\in\mathbf{var}$
\end_inset

 ist 
\begin_inset Formula $\exists^{\geqslant y}x\varphi$
\end_inset

 eine 
\begin_inset Formula $\left(\mathcal{L}+\Upsilon+\exists^{\geqslant}\right)\left[\sigma\right]$
\end_inset

-Formel.
 
\begin_inset Formula 
\begin{eqnarray*}
\mathrm{frei}\left(\exists^{\geqslant y}x\varphi\right)=\left\{ y\right\} \cup\left(\mathrm{frei}\left(\varphi\right)\backslash\left\{ x\right\} \right) &  & \mathrm{var}\left(\exists^{\geqslant y}x\varphi\right)=\mathrm{var}\left(\varphi\right)\cup\left\{ x,y\right\} 
\end{eqnarray*}

\end_inset

Auf einer endlichen Struktur 
\begin_inset Formula $\mathfrak{A}\in\mathbf{FIN}^{\left(n\right)}\left(\sigma\right)$
\end_inset

 mit einer Belegung 
\begin_inset Formula 
\[
\beta:\left(\mathrm{frei}\left(\varphi\right)\backslash\left\{ x\right\} \right)\cup\left\{ y\right\} \rightarrow A\cup\left[0,n\right]
\]

\end_inset

 gilt: 
\begin_inset Formula 
\[
\left\llbracket \exists^{\geqslant y}x\varphi\right\rrbracket \left(\mathfrak{A},\beta\right)\coloneqq\begin{cases}
1 & \mathrm{falls}\,\,\beta y\in\left[0,n\right],\,\beta y\leqslant\left\{ a\in A\mid\mathfrak{A}\models\varphi^{\beta_{\backslash\left\{ x\right\} }\cup\binom{x}{a}}\right\} \\
0 & \mathrm{sonst}
\end{cases}
\]

\end_inset


\end_layout

\end_deeper
\begin_layout Proposition
Die Logiken 
\begin_inset Formula $\mathcal{L}+\Upsilon+\#$
\end_inset

 und 
\begin_inset Formula $\mathcal{L}+\Upsilon+\exists^{=}$
\end_inset

 und 
\begin_inset Formula $\mathcal{L}+\Upsilon+\exists^{\geqslant}$
\end_inset

 sind äquivalent:
\end_layout

\begin_layout Proof
Jede 
\begin_inset Formula $\left(\mathcal{L}+\Upsilon+\#\right)\left[\sigma\right]$
\end_inset

-Formel 
\begin_inset Formula $\varphi$
\end_inset

 ist äquivalent zu einer 
\begin_inset Formula $\left(\mathcal{L}+\Upsilon+\exists^{=}\right)\left[\sigma\right]$
\end_inset

-Formel 
\begin_inset Formula $\varphi'$
\end_inset

.
 Dies wird per Induktion über den Aufbau von 
\begin_inset Formula $\varphi$
\end_inset

 gezeigt.
\end_layout

\begin_deeper
\begin_layout Case
Falls 
\begin_inset Formula $\varphi$
\end_inset

 eine 
\begin_inset Formula $\left(\mathcal{L}+\Upsilon\right)\left[\sigma\right]$
\end_inset

-Formel ohne Zählterm ist, so sei 
\begin_inset Formula $\varphi'\coloneqq\varphi$
\end_inset

.
\end_layout

\begin_layout Case
Falls 
\begin_inset Formula $\varphi$
\end_inset

 von der Form 
\begin_inset Formula $\neg\psi$
\end_inset

 oder 
\begin_inset Formula $\left(\psi_{1}\gamma\cdots\gamma\psi_{k}\right)$
\end_inset

 oder 
\begin_inset Formula $Qx\psi$
\end_inset

 ist, so existieren per Induktionsannahme die äquivalenten Teilformeln 
\begin_inset Formula $\psi',\psi_{1}',\cdots,\psi_{k}'$
\end_inset

.
 Sei 
\begin_inset Formula $\varphi'$
\end_inset

 entsprechend 
\begin_inset Formula $\neg\psi'$
\end_inset

 oder 
\begin_inset Formula $\left(\psi_{1}'\gamma\cdots\gamma\psi_{k}\right)$
\end_inset

 oder 
\begin_inset Formula $Qx\psi'$
\end_inset

.
\end_layout

\begin_layout Case
Falls 
\begin_inset Formula $\varphi=y\dot{=}\#x\psi$
\end_inset

 oder 
\begin_inset Formula $\varphi=\#x\psi\dot{=}y$
\end_inset

 für 
\begin_inset Formula $x,y\in\mathbf{var}$
\end_inset

, so sei 
\begin_inset Formula $\varphi'\coloneqq\exists^{=y}x\psi'$
\end_inset

.
\end_layout

\begin_layout Case
Falls 
\begin_inset Formula $\varphi=\#x_{1}\psi_{1}\dot{=}\#x_{2}\psi_{2}$
\end_inset

 für 
\begin_inset Formula $x_{1},x_{2}\in\mathbf{var}$
\end_inset

, so sei 
\begin_inset Formula $y\in\mathbf{var}\backslash\left(\mathrm{frei}\left(\psi_{1}\right)\cup\mathrm{frei}\left(\psi_{2}\right)\right)$
\end_inset

 eine neue Variable, und:
\begin_inset Formula 
\[
\varphi'\coloneqq\exists y\left(\exists^{=y}x_{1}\psi_{1}'\wedge\exists^{=y}x_{2}\psi_{2}'\right)
\]

\end_inset


\end_layout

\begin_layout Case
Falls 
\begin_inset Formula $\varphi=R\bar{x}$
\end_inset

 für 
\begin_inset Formula $R/k\in\sigma\cup\eta\cup\left\{ \leqslant\right\} $
\end_inset

 und ein 
\begin_inset Formula $k$
\end_inset

-Tupel von 
\begin_inset Formula $\left(\mathcal{L}+\Upsilon+\#\right)\left[\sigma\right]$
\end_inset

-Termen 
\begin_inset Formula $\bar{x}$
\end_inset

 ist, so sei 
\begin_inset Formula $\bar{y}\in\left(\mathbf{var}\backslash\bigcup_{i=1}^{k}\mathrm{frei}\left(x_{i}\right)\right)^{k}$
\end_inset

 ein Tupel von neuen Variablen, und:
\begin_inset Formula 
\begin{eqnarray*}
\chi_{i} & \coloneqq & \begin{cases}
\exists^{=y_{i}}z_{i}\psi_{i}' & \mathrm{falls}\,x_{i}=\#z_{i}\psi_{i}\\
y_{i}=x_{i} & \mathrm{sonst}
\end{cases}\\
\varphi' & \coloneqq & \exists\bar{y}\left(R\bar{y}\wedge\bigwedge_{i=1}^{k}\chi_{i}\right)
\end{eqnarray*}

\end_inset


\end_layout

\end_deeper
\begin_layout Proof
Jede 
\begin_inset Formula $\left(\mathcal{L}+\Upsilon+\exists^{=}\right)\left[\sigma\right]$
\end_inset

-Formel 
\begin_inset Formula $\varphi$
\end_inset

 ist äquivalent zu einer 
\begin_inset Formula $\left(\mathcal{L}+\Upsilon+\exists^{\geqslant}\right)\left[\sigma\right]$
\end_inset

-Formel 
\begin_inset Formula $\varphi'$
\end_inset

:
\end_layout

\begin_deeper
\begin_layout Case
Falls 
\begin_inset Formula $\varphi=\exists^{=y}x\psi$
\end_inset

, so sei 
\begin_inset Formula $\psi'$
\end_inset

 eine zu 
\begin_inset Formula $\psi$
\end_inset

 äquivalente 
\begin_inset Formula $\left(\mathcal{L}+\Upsilon+\exists^{\geqslant}\right)\left[\sigma\right]$
\end_inset

-Formel, 
\begin_inset Formula $z\in\mathbf{var}\backslash\mathrm{frei}\left(\psi\right)$
\end_inset

 eine neue Variable, und: 
\begin_inset Formula 
\[
\varphi'\coloneqq\forall z\left(\exists^{\geqslant z}x\psi'\leftrightarrow\left(z\leqslant y\right)\right)
\]

\end_inset

Die Formel 
\begin_inset Formula $\exists^{=y}x\psi$
\end_inset

 ist mit 
\begin_inset Formula $\beta\left(y\right)\in\left[0,n\right]$
\end_inset

 erfüllt, genau dann wenn gilt: Die Formel 
\begin_inset Formula $\exists^{\geqslant z}x\psi$
\end_inset

 ist für alle 
\begin_inset Formula $\beta\left(z\right)\in\left[0,n\right]$
\end_inset

 erfüllt, genau dann wenn 
\begin_inset Formula $\beta\left(z\right)\leqslant\beta\left(y\right)$
\end_inset

.
\end_layout

\end_deeper
\begin_layout Proof
Schließlich ist jede 
\begin_inset Formula $\left(\mathcal{L}+\Upsilon+\exists^{\geqslant}\right)\left[\sigma\right]$
\end_inset

-Formel 
\begin_inset Formula $\varphi$
\end_inset

 äquivalent zu einer 
\begin_inset Formula $\left(\mathcal{L}+\Upsilon+\#\right)\left[\sigma\right]$
\end_inset

-Formel 
\begin_inset Formula $\varphi'$
\end_inset

:
\end_layout

\begin_deeper
\begin_layout Case
Falls 
\begin_inset Formula $\varphi=\exists^{\geqslant y}x\psi$
\end_inset

, so sei 
\begin_inset Formula $\psi'$
\end_inset

 eine 
\begin_inset Formula $\left(\mathcal{L}+\Upsilon+\exists^{\geqslant}\right)\left[\sigma\right]$
\end_inset

-Formel mit 
\begin_inset Formula $\psi\equiv\psi'$
\end_inset

, und:
\begin_inset Formula 
\[
\varphi'\coloneqq y\leqslant\#x\psi
\]

\end_inset


\end_layout

\end_deeper
\begin_layout Standard
Im folgenden wird mit 
\begin_inset Formula $\mathcal{L}+\Upsilon+C$
\end_inset

 stets eine dieser äquivalenten Zähl-Logiken bezeichnet.
\end_layout

\begin_layout Definition
Die Logik 
\begin_inset Formula $\mathcal{L}+\mathbf{ORD}+C$
\end_inset

 bezeichnen wir kurz als 
\begin_inset Formula $\mathcal{L}+C$
\end_inset

.
\end_layout

\begin_layout Example
Die Logik 
\begin_inset Formula $\mathrm{FO}+C$
\end_inset

 kann ausdrücken, dass die 
\begin_inset Formula $\sigma$
\end_inset

-Struktur eine gerade Größe hat.
 Bekanntlich ist diese 
\begin_inset Formula $\sigma$
\end_inset

-Eigenschaft weder durch 
\begin_inset Formula $\mathrm{FO}$
\end_inset

 auf geordneten, noch 
\begin_inset Formula $\mathrm{LFP}$
\end_inset

 auf ungeordneten Strukturen definierbar
\begin_inset CommandInset citation
LatexCommand cite
key "Ebbinghaus,Libkin2012"

\end_inset

:
\end_layout

\begin_layout Example*
\begin_inset Formula 
\[
\varphi_{\mathrm{EVEN}}\coloneqq\exists y\,\left(y=\#_{z}\left(\neg z\leqslant y\wedge z\leqslant\#_{z}\,z=z\right)\right)
\]

\end_inset


\end_layout

\begin_layout Definition

\series bold
Arb-invariante Logik erster Stufe 
\series default
(nach 
\begin_inset CommandInset citation
LatexCommand cite
key "Schweikardt13ashort"

\end_inset

)
\end_layout

\begin_layout Definition
Die unendliche Signatur 
\begin_inset Formula $\eta_{\mathrm{arb}}$
\end_inset

 und die Struktur 
\begin_inset Formula $\mathcal{N}_{\mathrm{arb}}$
\end_inset

 sei wie in Definition 
\begin_inset CommandInset ref
LatexCommand ref
reference "def:ord"

\end_inset

 definiert.
\end_layout

\begin_layout Definition
Für eine beliebige von 
\begin_inset Formula $\eta_{\mathrm{arb}}$
\end_inset

 disjunkte relationale Signatur 
\begin_inset Formula $\sigma$
\end_inset

 sei 
\begin_inset Formula $\mathrm{FO}\left[\sigma\uplus\eta_{\mathrm{arb}}\right]$
\end_inset

 die erststufige Logik mit beliebigen numerischen Prädikaten.
\end_layout

\begin_layout Definition
Für 
\begin_inset Formula $\mathfrak{A}\in\mathbf{FIN}\left(\sigma\right)$
\end_inset

 sei 
\begin_inset Formula $n=\left|A\right|$
\end_inset

 und 
\begin_inset Formula $h:A\rightarrow\left[1,n\right]$
\end_inset

 eine beliebige Bijektion.
 Sei 
\begin_inset Formula $\mathfrak{A}_{h}\in\mathbf{FIN}_{<}^{\left[1,n\right]}\left(\sigma_{\mathrm{arb}}\right)$
\end_inset

 definiert durch:
\begin_inset Formula 
\[
\mathfrak{A}_{h}\coloneqq h\mathfrak{A}\cup\left(\mathcal{N}_{\mathrm{arb}}\right)_{\mid\left[1,n\right]}
\]

\end_inset

(Hier werden gemäß 
\begin_inset CommandInset ref
LatexCommand formatted
reference "def:Disjunkte-Vereinigung"

\end_inset

 die 
\begin_inset Formula $\sigma$
\end_inset

-Struktur 
\begin_inset Formula $h\mathfrak{A}$
\end_inset

 und die induzierte Teilstruktur 
\begin_inset Formula $\mathcal{N}_{\mid\left[1,n\right]}$
\end_inset

 mit den disjunkten Signaturen 
\begin_inset Formula $\sigma$
\end_inset

 und 
\begin_inset Formula $\eta_{\mathrm{arb}}$
\end_inset

 über dem gleichen Universum 
\begin_inset Formula $\left[1,n\right]$
\end_inset

 vereinigt.)
\end_layout

\begin_deeper
\begin_layout Enumerate
Eine 
\begin_inset Formula $k$
\end_inset

-stellige 
\begin_inset Formula $\mathrm{FO}\left[\sigma\uplus\eta_{\mathrm{arb}}\right]$
\end_inset

-Formel 
\begin_inset Formula $\varphi$
\end_inset

 ist 
\series bold
arb-invariant auf 
\series default

\begin_inset Formula $\mathfrak{A}\in\mathbf{FIN}\left(\sigma\right)$
\end_inset

, wenn für jedes Paar von Bijektionen 
\begin_inset Formula $h,h':A\rightarrow\left[1,\left|A\right|\right]$
\end_inset

 und jedes Tupel 
\begin_inset Formula $\bar{a}\in A^{k}$
\end_inset

 gilt:
\begin_inset Formula 
\begin{eqnarray*}
\mathfrak{A}_{h}\models\varphi\left[h\bar{a}\right] & \Longleftrightarrow & \mathfrak{A}_{h'}\models\varphi\left[h'\bar{a}\right]
\end{eqnarray*}

\end_inset


\end_layout

\begin_layout Enumerate
Eine 
\begin_inset Formula $\mathrm{FO}\left[\sigma\uplus\eta_{\mathrm{arb}}\right]$
\end_inset

-Formel 
\begin_inset Formula $\varphi$
\end_inset

 sei arb-invariant, wenn sie auf allen Strukturen 
\begin_inset Formula $\mathfrak{A}\in\mathbf{FIN}\left(\sigma\right)$
\end_inset

 arb-invariant ist.
 In diesem Fall berechne 
\begin_inset Formula $\varphi$
\end_inset

 die folgende 
\begin_inset Formula $\sigma$
\end_inset

-Anfrage (für eine beliebige Abbildung 
\begin_inset Formula $h:A\rightarrow\left[1,\left|A\right|\right]$
\end_inset

):
\begin_inset Formula 
\[
q_{\varphi}\left(\mathfrak{A}\right)\coloneqq h^{-1}q_{\varphi}\left(\mathfrak{A}_{h}\right)
\]

\end_inset


\end_layout

\begin_layout Enumerate
Sei 
\begin_inset Formula $\mathrm{\mbox{arb-inv-}FO}\left[\sigma\right]$
\end_inset

 die Sprache der arb-invarianten 
\begin_inset Formula $\mathrm{FO}\left[\sigma\uplus\eta_{\mathrm{arb}}\right]$
\end_inset

-Formeln.
\end_layout

\end_deeper
\begin_layout Remark*
Nach dem Satz von Trakhtenbrot ist die endlichen Erfüllbarkeit von 
\begin_inset Formula $\mathrm{FO}\left[\left\{ \leqslant\right\} \right]$
\end_inset

 unentscheidbar, und daher auch die Arb-Invarianz und die Sprache 
\begin_inset Formula $\mbox{arb-inv-}\mathrm{FO}\left[\sigma\right]$
\end_inset

 in 
\begin_inset Formula $\mathrm{FO}\left[\sigma\uplus\eta_{\mathrm{arb}}\right]$
\end_inset

.
\begin_inset CommandInset citation
LatexCommand cite
key "EFT,Libkin2012,Schweikardt13ashort"

\end_inset


\end_layout

\begin_layout Chapter
Schaltkreise
\end_layout

\begin_layout Section
Grundlagen der Schaltkreise
\end_layout

\begin_layout Definition

\series bold
Boolesche Basis:
\series default
 
\end_layout

\begin_layout Definition
Eine boolesche Basis 
\begin_inset Formula $\mathbb{B}$
\end_inset

 besteht aus beliebigen Relationen 
\begin_inset Formula $\phi'\subseteq\left\{ 0^{i}1^{j}\mid i,j\in\mathbb{N}\right\} $
\end_inset

.
 Wir definieren dafür der Einfachheit halber die Relation 
\begin_inset Formula $\phi\subseteq\mathbb{N}^{2}$
\end_inset

 mit 
\begin_inset Formula $\phi\coloneqq\left\{ \left(i,j\right)\in\mathbb{N}^{2}\mid0^{i}1^{j}\in\phi'\right\} $
\end_inset

.
 Als Beispiel seien die folgenden booleschen Junktoren gegeben: 
\begin_inset Formula 
\begin{eqnarray*}
\mathtt{AND} & \coloneqq & \left\{ 0\right\} \times\mathbb{N}\\
\mathtt{OR} & \coloneqq & \mathbb{N}\times\left(\mathbb{N}\backslash\left\{ 0\right\} \right)\\
\mathtt{MAJ} & \coloneqq & \left\{ \left(m,n\right)\in\mathbb{N}\times\mathbb{N}\mid m\leqslant n\right\} \\
\mathtt{XOR} & \coloneqq & \mathbb{N}\times\left(\mathbb{N}\backslash2\mathbb{N}\right)
\end{eqnarray*}

\end_inset


\end_layout

\begin_layout Definition
Im folgenden stehe 
\begin_inset Formula $\mathbb{B}_{\mathrm{std}}\coloneqq\left\{ \mathtt{AND},\mathtt{OR}\right\} $
\end_inset

 für die Basis mit boolescher Konjunktion und Disjunktion, und 
\begin_inset Formula $\mathbb{B}_{\mathrm{maj}}\coloneqq\mathbb{B}_{\mathrm{std}}\cup\left\{ \mathtt{MAJ}\right\} $
\end_inset

 für die Basis mit Konjunktion, Disjunktion und Majority.
\end_layout

\begin_layout --Separator--

\end_layout

\begin_layout Definition

\series bold
Schaltkreis
\end_layout

\begin_layout Definition
Sei 
\begin_inset Formula $\mathbb{B}$
\end_inset

 eine boolesche Basis und 
\begin_inset Formula $\sigma$
\end_inset

 eine relationale Signatur.
 Ein 
\begin_inset Formula $\left(\sigma,\mathbb{B}\right)$
\end_inset

-Schaltkreis 
\begin_inset Formula $\mathcal{C}\coloneqq\left(G,W,\Sigma,\Omega,U\right)$
\end_inset

 mit der Stelligkeit 
\begin_inset Formula $k\coloneqq\mathrm{ar}\left(C\right)$
\end_inset

 besteht aus den folgenden Komponenten: 
\end_layout

\begin_deeper
\begin_layout Enumerate
Ein azyklischer Graph mit den Knoten 
\begin_inset Formula $G$
\end_inset

 (
\begin_inset Quotes gld
\end_inset

Gates
\begin_inset Quotes grd
\end_inset

) und den Kanten 
\begin_inset Formula $W\subseteq G\times G$
\end_inset

.
\end_layout

\begin_layout Enumerate
eine Gate-Markierung 
\begin_inset Formula $\Sigma$
\end_inset

 
\begin_inset Formula 
\begin{eqnarray*}
\Sigma:G & \rightarrow & \mathbb{B}\\
 & \cup & \left\{ \mathbf{0},\mathbf{1},\mathtt{NOT}\right\} \\
 & \cup & \left\{ R\bar{t}\mid R\in\sigma,\bar{t}\in U^{\mathrm{ar}\left(R\right)}\right\} 
\end{eqnarray*}

\end_inset


\end_layout

\begin_layout Enumerate
eine Ausgabefunktion
\begin_inset Foot
status open

\begin_layout Plain Layout
In Anderson und Dawar 2014
\begin_inset CommandInset citation
LatexCommand cite
key "anderson_et_al:LIPIcs:2014:4445"

\end_inset

 wird zusätzlich die Injektivität von 
\begin_inset Formula $\Omega$
\end_inset

 verlangt; hier können aber mehrere Tupel dem gleichen Output-Gate zugeteilt
 werden.
\end_layout

\end_inset

 
\begin_inset Formula $\Omega:U^{k}\rightarrow G$
\end_inset

 (bei 
\begin_inset Formula $k=0$
\end_inset

 ist 
\begin_inset Formula $\Omega\left(\left\langle \right\rangle \right)\in G$
\end_inset

 ein einziges Output-Gate, und wird mit 
\begin_inset Formula $\Omega=\Omega\left(\left\langle \right\rangle \right)$
\end_inset

 abgekürzt) und 
\end_layout

\begin_layout Enumerate
ein Universum 
\begin_inset Formula $U$
\end_inset

 (üblicherweise 
\begin_inset Formula $U=\left[1,n\right]$
\end_inset

).
\end_layout

\end_deeper
\begin_layout Definition
Hierbei haben alle mit 
\begin_inset Formula $\phi\in\mathbb{B}$
\end_inset

 markierten Gates mindestens einen
\begin_inset Foot
status open

\begin_layout Plain Layout
Alle hier betrachteten Schaltkreise haben einen unbeschränkten Fan-In.
\end_layout

\end_inset

 Vorgänger, alle mit 
\begin_inset Formula $R\bar{x}$
\end_inset

, 
\begin_inset Formula $\mathbf{0}$
\end_inset

 oder 
\begin_inset Formula $\mathbf{1}$
\end_inset

 markierten Gates keinen
\series bold
 
\series default
Vorgänger, und alle mit 
\begin_inset Formula $\mathtt{NOT}$
\end_inset

 markierten Gates genau
\series bold
 
\series default
einen
\series bold
 
\series default
Vorgänger.
\end_layout

\begin_layout Definition
Die mit 
\begin_inset Formula $\mathbf{0}$
\end_inset

 oder 
\begin_inset Formula $\mathbf{1}$
\end_inset

 markierten Gates heißen 
\series bold
Konstanten
\series default
, die mit 
\begin_inset Formula $R\bar{x}$
\end_inset

 markierten Gates heißen 
\series bold
Inputs
\series default
, und die Gates im Bild von 
\begin_inset Formula $\Omega$
\end_inset

 heißen 
\series bold
Outputs
\series default
.
\end_layout

\begin_layout --Separator--

\end_layout

\begin_layout Definition
\begin_inset CommandInset label
LatexCommand label
name "def:formal"

\end_inset

Formal definieren wir den 
\begin_inset Formula $k$
\end_inset

-stelligen 
\begin_inset Formula $\left(\sigma,\mathbb{B}\right)$
\end_inset

-Schaltkreis 
\begin_inset Formula $\mathcal{C}=\left(G,W,\Sigma,\Omega,U\right)$
\end_inset

 als eine relationale 
\begin_inset Formula $\tau_{\sigma,\mathbb{B},k}$
\end_inset

-Struktur über dem Universum 
\begin_inset Formula $G\uplus U$
\end_inset

, wobei gilt:
\begin_inset Formula 
\begin{eqnarray*}
\tau_{\sigma,\mathbb{B},k} & \coloneqq & \left\{ W/2,\left(\Sigma_{s}/1\right)_{s\in\mathbb{B}\uplus\left\{ \mathbf{0},\mathbf{1},\mathtt{NOT}\right\} },\left(\Sigma_{R}/1+k\right)_{R/k\in\sigma},\Omega/k+1\right\} \\
W^{\mathcal{C}} & \coloneqq & W\\
\Sigma_{s}^{\mathcal{C}} & \coloneqq & \left\{ g\in G\mid\Sigma\left(g\right)=s\right\} \\
\Sigma_{R}^{\mathcal{C}} & \coloneqq & \left\{ g\bar{t}\mid\Sigma\left(g\right)=R\bar{t}\right\} \\
\Omega_{R}^{\mathcal{C}} & \coloneqq & \left\{ \bar{t}g\mid\Omega\left(\bar{t}\right)=g\right\} 
\end{eqnarray*}

\end_inset


\end_layout

\begin_layout --Separator--

\end_layout

\begin_layout Definition

\series bold
\begin_inset CommandInset label
LatexCommand label
name "def:Auswertung-von-Schaltkreisen"

\end_inset

Auswertung von Schaltkreisen
\end_layout

\begin_layout Definition
Der 
\begin_inset Formula $\left(\sigma,\mathbb{B}\right)$
\end_inset

-Schaltkreis 
\begin_inset Formula $\mathcal{C}=\left(G,W,\Sigma,\Omega,U\right)$
\end_inset

 wird auf einer 
\begin_inset Formula $\sigma$
\end_inset

-Struktur 
\begin_inset Formula $\mathfrak{A}\in\mathbf{FIN}^{U}\left(\sigma\right)$
\end_inset

 ausgewertet.
 Die Auswertung ist eine Abbildung 
\begin_inset Formula $\mathcal{C}\left[\mathfrak{A}\right]:G\rightarrow\left\{ 0,1\right\} $
\end_inset

, die jedem Gate 
\begin_inset Formula $g\in G$
\end_inset

 den Wert 
\begin_inset Formula $0$
\end_inset

 oder 
\begin_inset Formula $1$
\end_inset

 zuweist, und ist rekursiv wie folgt definiert:
\end_layout

\begin_deeper
\begin_layout Case
Für 
\begin_inset Formula $\Sigma\left(g\right)=R\bar{t}$
\end_inset

 gilt 
\begin_inset Formula 
\[
\mathcal{C}\left[\mathfrak{A}\right]\left(g\right)\coloneqq\left[R^{\mathfrak{A}}\right]\bar{t}
\]

\end_inset


\end_layout

\begin_layout Case
Für 
\begin_inset Formula $\Sigma\left(g\right)\in\left\{ \mathbf{0},\mathbf{1}\right\} $
\end_inset

 gilt
\begin_inset Formula 
\[
\mathcal{C}\left[\mathfrak{A}\right]\left(g\right)\coloneqq\begin{cases}
1 & \mathrm{falls}\,\,\Sigma\left(v\right)=\mathbf{1}\\
0 & \mathrm{sonst}
\end{cases}
\]

\end_inset


\end_layout

\begin_layout Case
Für 
\begin_inset Formula $\Sigma\left(g\right)=\mathtt{NOT}$
\end_inset

 und 
\begin_inset Formula $\left(h,g\right)\in W$
\end_inset

 gilt 
\begin_inset Formula 
\[
\mathcal{C}\left[\mathfrak{A}\right]\left(g\right)\coloneqq1-\mathcal{C}\left[\mathfrak{A}\right]\left(h\right)
\]

\end_inset


\end_layout

\begin_layout Case
Für 
\begin_inset Formula $\Sigma\left(g\right)=\phi\in\mathbb{B}$
\end_inset

 gilt: 
\begin_inset Formula 
\begin{eqnarray*}
j_{1} & \coloneqq & \sum_{\left(h,g\right)\in W}\mathcal{C}\left[\mathfrak{A}\right]\left(h\right)\\
j_{0} & \coloneqq & \left|\left\{ h\mid\left(h,g\right)\in W\right\} \right|-j_{1}\\
\\
\mathcal{C}\left[\mathfrak{A}\right]\left(g\right) & \coloneqq & \left[\phi\right]\left(j_{0},j_{1}\right)
\end{eqnarray*}

\end_inset


\end_layout

\end_deeper
\begin_layout Definition
Für einen 
\begin_inset Formula $k$
\end_inset

-stelligen Schaltkreis 
\begin_inset Formula $\mathcal{C}$
\end_inset

 und ein Tupel 
\begin_inset Formula $\bar{t}\in U^{k}$
\end_inset

 sei die Ausgabe von 
\begin_inset Formula $\mathcal{C}$
\end_inset

 der Wert des Outputs 
\begin_inset Formula $\Omega\left(\bar{t}\right)$
\end_inset

:
\begin_inset Formula 
\[
\left\llbracket \mathcal{C}\right\rrbracket \left(\mathfrak{A},\bar{t}\right)\coloneqq\mathcal{C}\left[\mathfrak{A}\right]\left(\Omega\left(\bar{t}\right)\right)
\]

\end_inset

 
\end_layout

\begin_layout Standard
Ferner sei 
\begin_inset Formula $q_{\mathcal{C}}:\mathbf{FIN}^{U}\left(\sigma\right)\rightarrow U^{k}$
\end_inset

 die Abbildung einer Struktur auf die Relation der Tupel, für die 
\begin_inset Formula $\mathcal{C}$
\end_inset

 den Wert 
\begin_inset Formula $1$
\end_inset

 ausgibt.
 
\begin_inset Formula 
\[
q_{\mathcal{C}}\left(\mathfrak{A}\right)\coloneqq\left\{ \bar{t}\in U^{k}\mid\left\llbracket \mathcal{C}\right\rrbracket \left(\mathfrak{A},\bar{t}\right)=1\right\} 
\]

\end_inset


\end_layout

\begin_layout Example*
Sei 
\begin_inset Formula $\mathcal{C}_{4}=\left(G,W,\Sigma,\Omega,\left[4\right]\right)$
\end_inset

 (siehe Abbildung 
\begin_inset CommandInset ref
LatexCommand ref
reference "fig:circuit"

\end_inset

) ein 
\begin_inset Formula $1$
\end_inset

-stelliger 
\begin_inset Formula $\left(\left\{ E\right\} ,\mathbb{B}_{\mathrm{std}}\right)$
\end_inset

-Schaltkreis, der alle Knoten eines gerichteten Graphen findet, die Teil
 eines einfachen Kreises der Länge 
\begin_inset Formula $2$
\end_inset

 sind:
\end_layout

\begin_layout Example*
\begin_inset Formula 
\begin{eqnarray*}
G & \coloneqq & \left\{ g_{i,j}\mid i,j\in\left[4\right],\,i\neq j\right\} \\
 & \cup & \left\{ g_{\left\{ i,j\right\} }\mid\left\{ i,j\right\} \subseteq\left[4\right],\,i\neq j\right\} \\
 & \cup & \left\{ g_{i}\mid i\in\left[4\right]\right\} 
\end{eqnarray*}

\end_inset


\begin_inset Formula 
\begin{eqnarray*}
E & \coloneqq & \left\{ \left(g_{i,j},g_{\left\{ i,j\right\} }\right)\mid i,j\in\left[4\right],\,i\neq j\right\} \\
 & \cup & \left\{ \left(g_{\left\{ i,j\right\} },g_{i}\right)\mid i,j\in\left[4\right],\,i\neq j\right\} 
\end{eqnarray*}

\end_inset


\begin_inset Formula 
\[
\Sigma\left(g\right)=\begin{cases}
E\,i\,j & \mathrm{für}\,\,g=g_{i,j}\\
\mathtt{AND} & \mathrm{für}\,\,g=g_{\left\{ i,j\right\} }\\
\mathtt{OR} & \mathrm{für}\,\,g=g_{i}
\end{cases}
\]

\end_inset


\begin_inset Formula 
\[
\Omega\left(i\right)\coloneqq g_{i}
\]

\end_inset


\end_layout

\begin_layout Example*
\begin_inset Float figure
wide false
sideways false
status open

\begin_layout Plain Layout
\align center
\begin_inset Preview

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
tikzstyle{every node}=[circle, draw=black,node distance=3em]
\end_layout

\begin_layout Plain Layout


\backslash
begin{tikzpicture}
\end_layout

\begin_layout Plain Layout

\end_layout

\begin_layout Plain Layout


\backslash
node (E12) {$E 1 2$};
\end_layout

\begin_layout Plain Layout


\backslash
node [right of=E12] (E21) {$E 2 1$};
\end_layout

\begin_layout Plain Layout


\backslash
node [right of=E21] (E13) {$E 1 3$};
\end_layout

\begin_layout Plain Layout


\backslash
node [right of=E13] (E31) {$E 3 1$};
\end_layout

\begin_layout Plain Layout


\backslash
node [right of=E31] (E14) {$E 1 4$};
\end_layout

\begin_layout Plain Layout


\backslash
node [right of=E14] (E41) {$E 4 1$};
\end_layout

\begin_layout Plain Layout


\backslash
node [right of=E41] (E23) {$E 2 3$};
\end_layout

\begin_layout Plain Layout


\backslash
node [right of=E23] (E32) {$E 3 2$};
\end_layout

\begin_layout Plain Layout


\backslash
node [right of=E32] (E24) {$E 2 4$};
\end_layout

\begin_layout Plain Layout


\backslash
node [right of=E24] (E42) {$E 4 2$};
\end_layout

\begin_layout Plain Layout


\backslash
node [right of=E42] (E34) {$E 3 4$};
\end_layout

\begin_layout Plain Layout


\backslash
node [right of=E34] (E43) {$E 4 3$};
\end_layout

\begin_layout Plain Layout

\end_layout

\begin_layout Plain Layout


\backslash
node [below of=E41,node distance=7em] (14) {$
\backslash
wedge$};
\end_layout

\begin_layout Plain Layout


\backslash
node [left of=14,node distance=4em] (13) {$
\backslash
wedge$};
\end_layout

\begin_layout Plain Layout


\backslash
node [left of=13,node distance=4em] (12) {$
\backslash
wedge$};
\end_layout

\begin_layout Plain Layout


\backslash
node [right of=14,node distance=4em] (23) {$
\backslash
wedge$};
\end_layout

\begin_layout Plain Layout


\backslash
node [right of=23,node distance=4em] (24) {$
\backslash
wedge$};
\end_layout

\begin_layout Plain Layout


\backslash
node [right of=24,node distance=4em] (34) {$
\backslash
wedge$};
\end_layout

\begin_layout Plain Layout

\end_layout

\begin_layout Plain Layout


\backslash
node [below of=14,node distance=5em,label=below:$
\backslash
Omega
\backslash
left(2
\backslash
right)$] (2) {$
\backslash
vee$};
\end_layout

\begin_layout Plain Layout


\backslash
node [left of=2,label=below:$
\backslash
Omega
\backslash
left(1
\backslash
right)$] (1) {$
\backslash
vee$};
\end_layout

\begin_layout Plain Layout


\backslash
node [right of=2,label=below:$
\backslash
Omega
\backslash
left(3
\backslash
right)$] (3) {$
\backslash
vee$};
\end_layout

\begin_layout Plain Layout


\backslash
node [right of=3,label=below:$
\backslash
Omega
\backslash
left(4
\backslash
right)$] (4) {$
\backslash
vee$};
\end_layout

\begin_layout Plain Layout

\end_layout

\begin_layout Plain Layout


\backslash
path [->]
\end_layout

\begin_layout Plain Layout

		(E12) edge (12) (E21) edge (12)
\end_layout

\begin_layout Plain Layout

		(E13) edge (13) (E31) edge (13)
\end_layout

\begin_layout Plain Layout

		(E14) edge (14) (E41) edge (14)
\end_layout

\begin_layout Plain Layout

		(E23) edge (23) (E32) edge (23)
\end_layout

\begin_layout Plain Layout

		(E24) edge (24) (E42) edge (24)
\end_layout

\begin_layout Plain Layout

		(E34) edge (34) (E43) edge (34)
\end_layout

\begin_layout Plain Layout

\end_layout

\begin_layout Plain Layout

		(12) edge (1) (12) edge (2)
\end_layout

\begin_layout Plain Layout

		(13) edge (1) (13) edge (3)
\end_layout

\begin_layout Plain Layout

		(14) edge (1) (14) edge (4)
\end_layout

\begin_layout Plain Layout

		(23) edge (2) (23) edge (3)
\end_layout

\begin_layout Plain Layout

		(24) edge (2) (24) edge (4)
\end_layout

\begin_layout Plain Layout

		(34) edge (3) (34) edge (4)
\end_layout

\begin_layout Plain Layout

\end_layout

\begin_layout Plain Layout

;
\end_layout

\begin_layout Plain Layout

\end_layout

\begin_layout Plain Layout


\backslash
end{tikzpicture}
\end_layout

\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Plain Layout
\begin_inset Caption Standard

\begin_layout Plain Layout
\begin_inset CommandInset label
LatexCommand label
name "fig:circuit"

\end_inset

Schaltkreis 
\begin_inset Formula $\mathcal{C}_{4}$
\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Plain Layout

\end_layout

\end_inset


\end_layout

\begin_layout Standard
\begin_inset Newpage pagebreak
\end_inset


\end_layout

\begin_layout Section
Eigenschaften von Schaltkreisen
\end_layout

\begin_layout Definition

\series bold
Größe und Tiefe
\end_layout

\begin_layout Definition
Die 
\series bold
Größe
\series default
 
\begin_inset Formula $\left|\mathcal{C}\right|$
\end_inset

 eines Schaltkreises 
\begin_inset Formula $\mathcal{C}=\left(G,W,\Sigma,\Omega,U\right)$
\end_inset

 sei die Anzahl seiner Gates, 
\begin_inset Formula $\left|G\right|$
\end_inset

.
\end_layout

\begin_layout Definition
Die 
\series bold
Tiefe
\series default
 
\begin_inset Formula $T\left(\mathcal{C}\right)$
\end_inset

 sei die maximale Länge eines Wegs durch den Graphen 
\begin_inset Formula $\left(G,W\right)$
\end_inset

.
\end_layout

\begin_layout --Separator--

\end_layout

\begin_layout Definition

\series bold
Invarianz
\end_layout

\begin_layout Definition
Ein 
\begin_inset Formula $\left(\sigma,\mathbb{B}\right)$
\end_inset

-Schaltkreis 
\begin_inset Formula $\mathcal{C}$
\end_inset

 mit dem Universum 
\begin_inset Formula $U$
\end_inset

 heiße 
\series bold
invariant
\series default
 wenn für alle 
\begin_inset Formula $\mathfrak{A}\in\mathbf{FIN}^{U}\left(\sigma\right)$
\end_inset

, alle 
\begin_inset Formula $\bar{t}\in U^{\mathrm{ar}\left(\mathcal{C}\right)}$
\end_inset

, und jede Permutation 
\begin_inset Formula $\pi\in\mathrm{Sym}_{U}$
\end_inset

 gilt:
\begin_inset Formula 
\[
\left\llbracket \mathcal{C}\right\rrbracket \left(\pi\mathfrak{A},\pi\bar{t}\right)=\left\llbracket \mathcal{C}\right\rrbracket \left(\mathfrak{A},\bar{t}\right)
\]

\end_inset


\end_layout

\begin_layout Definition
In diesem Fall definieren wir für jede Struktur 
\begin_inset Formula $\mathfrak{A}\in\mathbf{FIN}^{\left(\left|U\right|\right)}\left(\sigma\right)$
\end_inset

 und 
\begin_inset Formula $\bar{a}\in A^{\mathrm{ar}\left(\mathcal{C}\right)}$
\end_inset

 die Auswertung von 
\begin_inset Formula $\mathcal{C}$
\end_inset

 implizit als die Auswertung auf 
\begin_inset Formula $\pi\mathfrak{A}\in\mathbf{FIN}^{U}\left(\sigma\right)$
\end_inset

 mit einer beliebigen Bijektion 
\begin_inset Formula $\pi:A\rightarrow U$
\end_inset

:
\begin_inset Formula 
\[
\left\llbracket \mathcal{C}\right\rrbracket \left(\mathfrak{A},\bar{a}\right)\coloneqq\left\llbracket \mathcal{C}\right\rrbracket \left(\pi\mathfrak{A},\pi\bar{a}\right)
\]

\end_inset


\end_layout

\begin_layout --Separator--

\end_layout

\begin_layout Definition

\series bold
Symmetrie
\end_layout

\begin_layout Definition
Für einen 
\begin_inset Formula $k$
\end_inset

-stelliger Schaltkreis 
\begin_inset Formula $\mathcal{C}=\left(G,W,\Sigma,\Omega,U\right)$
\end_inset

, eine Permutation 
\begin_inset Formula $\pi\in\mathrm{Sym}_{U}$
\end_inset

 und einen Automorphismus 
\begin_inset Formula $\rho:\mathcal{C}\tilde{\rightarrow}\mathcal{C}$
\end_inset

 mit 
\begin_inset Formula $\rho_{\mid U}=\pi$
\end_inset

 nennen wir 
\begin_inset Formula $\rho$
\end_inset

 von 
\begin_inset Formula $\pi$
\end_inset

 
\series bold
induziert
\series default
.
 (Nach den Definitionen 
\begin_inset CommandInset ref
LatexCommand ref
reference "def:formal"

\end_inset

 und 
\begin_inset CommandInset ref
LatexCommand ref
reference "def:Isomorphismus"

\end_inset

 ist 
\begin_inset Formula $\rho\in\mathrm{Sym}_{U\uplus G}$
\end_inset

 eine Permutation des Universums von 
\begin_inset Formula $\mathcal{C}$
\end_inset

.) Wir können aus der formalen Definition des Schaltkreises als 
\begin_inset Formula $\tau_{\sigma,\mathbb{B},k}$
\end_inset

-Struktur ableiten, dass ein von 
\begin_inset Formula $\pi$
\end_inset

 induzierter Automorphismus 
\begin_inset Formula $\rho$
\end_inset

 die folgenden Bedingungen erfüllt:
\end_layout

\begin_deeper
\begin_layout Enumerate
Die Kanten sind isomorph: 
\begin_inset Formula $\rho W=W$
\end_inset

.
\end_layout

\begin_layout Enumerate
Für alle Inputs 
\begin_inset Formula $g$
\end_inset

 mit 
\begin_inset Formula $\Sigma\left(g\right)=R\bar{x}$
\end_inset

 gilt 
\begin_inset Formula $\Sigma\left(\rho g\right)=R\,\bar{x'}$
\end_inset

, mit 
\begin_inset Formula $\bar{x'}=\pi\bar{x}$
\end_inset

.
\end_layout

\begin_layout Enumerate
Für alle übrigen Gates gilt 
\begin_inset Formula $\Sigma\left(\rho g\right)=\Sigma\left(g\right)$
\end_inset

.
\end_layout

\begin_layout Enumerate
Für jedes Tupel 
\begin_inset Formula $\bar{t}\in U^{k}$
\end_inset

 gilt 
\begin_inset Formula $\rho\Omega\left(\bar{x}\right)=\Omega\left(\pi\bar{t}\right)$
\end_inset

.
\end_layout

\end_deeper
\begin_layout Definition
Der Schaltkreis heiße 
\series bold
symmetrisch
\series default
, genau dann wenn jede Permutation des Universums 
\begin_inset Formula $\pi\in\mathrm{Sym}_{U}$
\end_inset

 einen Automorphismus 
\begin_inset Formula $\hat{\pi}\in\mathrm{Aut}_{\mathcal{C}}$
\end_inset

 des Schaltkreises induziert.
 (In Zukunft betrachten wir der Einfachheit halber nur den Teil 
\begin_inset Formula $\hat{\pi}_{\mid G}$
\end_inset

, der die Gates des Schaltkreises permutiert, da der Rest des Automorphismus
 
\begin_inset Formula $\hat{\pi}=\hat{\pi}_{\mid G}\uplus\pi$
\end_inset

 lediglich die Permutation 
\begin_inset Formula $\pi$
\end_inset

 ist.)
\end_layout

\begin_layout Proposition
Symmetrie ist eine hinreichende, aber nicht notwendige, Bedingung für die
 Invarianz eines Schaltkreises.
\end_layout

\begin_layout Proof
Sei 
\begin_inset Formula $\mathcal{C}$
\end_inset

 ein symmetrischer 
\begin_inset Formula $k$
\end_inset

-stelliger 
\begin_inset Formula $\left(\sigma,\mathbb{B}\right)$
\end_inset

-Schaltkreis über 
\begin_inset Formula $U$
\end_inset

, und 
\begin_inset Formula $\mathfrak{A}\in\mathbf{FIN}^{U}\left(\sigma\right)$
\end_inset

.
 Sei 
\begin_inset Formula $\pi\in\mathrm{Sym}_{U}$
\end_inset

 eine beliebige Permutation, und sei 
\begin_inset Formula $\bar{t}\in U^{k}$
\end_inset

 ein beliebiges Tupel.
 Es ist zu zeigen, dass: 
\begin_inset Formula 
\begin{eqnarray*}
\left\llbracket \mathcal{C}\right\rrbracket \left(\mathfrak{A},\bar{t}\right) & = & \left\llbracket \mathcal{C}\right\rrbracket \left(\pi\mathfrak{A},\pi\bar{t}\right)
\end{eqnarray*}

\end_inset


\end_layout

\begin_layout Proof
Wegen der Symmetrie induziert 
\begin_inset Formula $\pi$
\end_inset

 einen Automorphismus 
\begin_inset Formula $\hat{\pi}$
\end_inset

 auf 
\begin_inset Formula $\mathcal{C}$
\end_inset

: 
\begin_inset Formula 
\begin{eqnarray*}
\hat{\pi}\left(W\right) & = & W\\
\Sigma\left(\hat{\pi}g\right) & = & \begin{cases}
R\pi\bar{x} & \mathrm{für}\,\,\Sigma\left(g\right)=R\bar{x}\\
\Sigma\left(g\right) & \mathrm{sonst}
\end{cases}\\
\Omega\left(\pi\bar{x}\right) & = & \hat{\pi}\Omega\left(\bar{x}\right)\,\mathrm{für\,alle}\,\bar{x}\in U^{\mathrm{ar}\left(\mathcal{C}\right)}
\end{eqnarray*}

\end_inset


\end_layout

\begin_layout Proof
Per Induktion über die Tiefe
\begin_inset Foot
status open

\begin_layout Plain Layout
Die Tiefe 
\begin_inset Formula $T:G\rightarrow\mathbb{N}$
\end_inset

 sei die maximale Länge eines Weges von einer Quelle zum Gate 
\begin_inset Formula $g$
\end_inset

.
\end_layout

\end_inset

 
\begin_inset Formula $T\left(g\right)$
\end_inset

 des Gates 
\begin_inset Formula $g$
\end_inset

 wird gezeigt: 
\begin_inset Formula 
\begin{eqnarray*}
\mathcal{C}\left[\mathfrak{A}\right]\left(g\right)=\mathcal{C}\left[\pi\mathfrak{A}\right]\left(\hat{\pi}g\right) &  & \mathrm{für\,alle}\,g\in G
\end{eqnarray*}

\end_inset


\end_layout

\begin_deeper
\begin_layout Description
Induktionsanfang
\begin_inset space ~
\end_inset


\begin_inset Formula $T\left(g\right)=0$
\end_inset

: Sei 
\begin_inset Formula $g\in G$
\end_inset

 ein Input mit 
\begin_inset Formula $\Sigma\left(g\right)=R\bar{x}$
\end_inset

.
 Per Definition von 
\begin_inset Formula $\tau$
\end_inset

 und 
\begin_inset Formula $\hat{\tau}$
\end_inset

 gilt:
\begin_inset Formula 
\begin{eqnarray*}
\Sigma\left(\hat{\pi}g\right) & = & R\pi\bar{x}\\
\pi\bar{x}\in\pi R^{\mathfrak{A}} & \Longleftrightarrow & \bar{x}\in\pi_{2}R^{\mathfrak{A}}
\end{eqnarray*}

\end_inset

 Es folgt: 
\begin_inset Formula 
\begin{eqnarray*}
\mathcal{C}\left[\pi\mathfrak{A}\right]\left(\hat{\pi}g\right) & = & \left[\pi R^{\mathfrak{A}}\right]\left(\pi\bar{x}\right)\\
 & = & \left[R^{\mathfrak{A}}\right]\left(\bar{x}\right)\\
 & = & \mathcal{C}\left[\mathfrak{A}\right]\left(g\right)
\end{eqnarray*}

\end_inset

(Falls 
\begin_inset Formula $\Sigma\left(g\right)\in\left\{ \mathbf{0},\mathbf{1}\right\} $
\end_inset

, folgt die Behauptung direkt aus 
\begin_inset Formula $\Sigma\left(\hat{\pi}g\right)=\Sigma\left(g\right)$
\end_inset

.)
\end_layout

\begin_layout Description
Induktionsschritt
\begin_inset space ~
\end_inset


\begin_inset Formula $n\mapsto n+1$
\end_inset

: 
\end_layout

\begin_deeper
\begin_layout Description
Annahme: Für alle Gates 
\begin_inset Formula $g\in G$
\end_inset

 mit Tiefe 
\begin_inset Formula $T\left(g\right)\leqslant n$
\end_inset

 gilt 
\begin_inset Formula $\mathcal{C}\left[\pi\mathfrak{A}\right]\left(\hat{\pi}g\right)=\mathcal{C}\left[\mathfrak{A}\right]\left(g\right)$
\end_inset

.
\end_layout

\begin_layout Standard
So gilt für jedes Gatter 
\begin_inset Formula $g'\in G$
\end_inset

 mit 
\begin_inset Formula $T\left(g'\right)=n+1$
\end_inset

: 
\end_layout

\begin_layout Enumerate
Die Beschriftungen 
\begin_inset Formula $\Sigma\left(\hat{\pi}g'\right)=\Sigma\left(g'\right)=\phi$
\end_inset

 sind gleich.
\end_layout

\begin_layout Enumerate
\begin_inset Formula $\mathcal{C}\left[\pi\mathfrak{A}\right]\left(\hat{\pi}g\right)=\mathcal{C}\left[\mathfrak{A}\right]\left(g\right)$
\end_inset

 für alle 
\begin_inset Formula $\left(g,g'\right)\in W$
\end_inset

.
\end_layout

\begin_layout Standard
Es folgt 
\begin_inset Formula $\mathcal{C}\left[\pi\mathfrak{A}\right]\left(\hat{\pi}g'\right)=\mathcal{C}\left[\mathfrak{A}\right]\left(g'\right)$
\end_inset

.
\end_layout

\end_deeper
\end_deeper
\begin_layout Proof
Schließlich gilt für jedes Tupel 
\begin_inset Formula $\bar{t}\in U^{\mathrm{ar}\left(\mathcal{C}\right)}$
\end_inset

:
\end_layout

\begin_layout Proof
\begin_inset Formula 
\begin{eqnarray*}
\left\llbracket \mathcal{C}\right\rrbracket \left(\pi\mathfrak{A},\pi\bar{t}\right) & = & \mathcal{C}\left[\pi\mathfrak{A}\right]\left(\Omega\left(\pi\bar{t}\right)\right)\\
 & = & \mathcal{C}\left[\pi\mathfrak{A}\right]\left(\hat{\pi}\Omega\left(\bar{t}\right)\right)\\
 & = & \mathcal{C}\left[\mathfrak{A}\right]\left(\Omega\left(\bar{t}\right)\right)=\left\llbracket \mathcal{C}\right\rrbracket \left(\mathfrak{A},\bar{t}\right)
\end{eqnarray*}

\end_inset


\end_layout

\begin_layout Proof
Damit ist der Schaltkreis invariant.
\end_layout

\begin_layout Proof
Um die Umkehrrichtung zu widerlegen, wird als Gegenbeispiel der folgende
 
\begin_inset Formula $0$
\end_inset

-stellige Schaltkreis 
\begin_inset Formula $\mathcal{C}_{2}$
\end_inset

 (siehe Abbildung 
\begin_inset CommandInset ref
LatexCommand ref
reference "fig:symm"

\end_inset

) über 
\begin_inset Formula $U=\left\{ 1,2\right\} $
\end_inset

 angeführt:
\begin_inset Formula 
\begin{eqnarray*}
\mathcal{C} & \coloneqq & \left(G,W,\Sigma,\Omega,U\right)\\
G & \coloneqq & \left\{ g_{i,j}\mid i,j\in U\right\} \cup\left\{ g_{\wedge},g_{\wedge}'\right\} \\
W & \coloneqq & \left\{ \left(g_{1,1},g_{\wedge}\right),\left(g_{1,2},g_{\wedge}\right),\left(g_{2,1},g_{\wedge}'\right),\left(g_{2,2},g_{\wedge}'\right),\left(g_{\wedge},g_{\wedge}'\right)\right\} \\
\Sigma\left(g\right) & \coloneqq & \mathtt{AND}\\
\Omega & \coloneqq & g_{\wedge}'
\end{eqnarray*}

\end_inset


\end_layout

\begin_layout Proof
\begin_inset Float figure
wide false
sideways false
status open

\begin_layout Plain Layout
\align center
\begin_inset Preview

\begin_layout Standard
\align center
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
tikzstyle{every node}=[circle, draw=black]
\end_layout

\begin_layout Plain Layout


\backslash
begin{tikzpicture}
\end_layout

\begin_layout Plain Layout

\end_layout

\begin_layout Plain Layout


\backslash
node [label=below:$
\backslash
Omega$] (C) {$
\backslash
wedge$};
\end_layout

\begin_layout Plain Layout

\end_layout

\begin_layout Plain Layout


\backslash
node [above left of=C,node distance=6em] (B1) {$
\backslash
wedge$};
\end_layout

\begin_layout Plain Layout

\end_layout

\begin_layout Plain Layout

\end_layout

\begin_layout Plain Layout


\backslash
node [above left of=B1,node distance=6em] (A1) {$E12$};
\end_layout

\begin_layout Plain Layout


\backslash
node [right of=A1,node distance=5.5em] (A2) {$E11$};
\end_layout

\begin_layout Plain Layout


\backslash
node [right of=B1,node distance=5.5em] (A3) {$E22$};
\end_layout

\begin_layout Plain Layout


\backslash
node [right of=A3,node distance=5.5em] (A4) {$E21$};
\end_layout

\begin_layout Plain Layout

\end_layout

\begin_layout Plain Layout


\backslash
path [->] (A1) edge (B1) (A2) edge (B1) (A3) edge (C) (A4) edge (C)
\end_layout

\begin_layout Plain Layout

			(B1) edge (C);
\end_layout

\begin_layout Plain Layout


\backslash
end{tikzpicture}
\end_layout

\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Plain Layout
\begin_inset Caption Standard

\begin_layout Plain Layout
\begin_inset CommandInset label
LatexCommand label
name "fig:symm"

\end_inset

Schaltkreis 
\begin_inset Formula $\mathcal{C}_{2}$
\end_inset


\end_layout

\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Standard
Der Schaltkreis ist invariant, und akzeptiert alle vollständigen 
\begin_inset Formula $K_{2}$
\end_inset

-Graphen.
 Er ist aber nicht symmetrisch: Die Permutation 
\begin_inset Formula $\left(\begin{array}{cc}
1 & 2\\
2 & 1
\end{array}\right)$
\end_inset

 induziert keinen Automorphismus.
\end_layout

\begin_layout Definition

\series bold
\begin_inset CommandInset label
LatexCommand label
name "def:Rigidität"

\end_inset

Rigidität
\end_layout

\begin_layout Definition
Ein 
\begin_inset Formula $\left(\sigma,\mathbb{B}\right)$
\end_inset

-Schaltkreis 
\begin_inset Formula $\mathcal{C}=\left(G,W,\Sigma,\Omega,U\right)$
\end_inset

 sei rigide, wenn er keine redundanten Gates besitzt.
 Formal dürfen nicht 
\begin_inset Formula $g,g'\in G$
\end_inset

 existieren, so dass:
\begin_inset Formula 
\begin{eqnarray*}
\Sigma\left(g\right) & = & \Sigma\left(g'\right)\\
\left\{ u\in G\mid\left(u,g\right)\in W\right\}  & = & \left\{ u\in G\mid\left(u,g'\right)\in W\right\} 
\end{eqnarray*}

\end_inset


\end_layout

\begin_layout Definition
Insbesondere heißt dies, das der Schaltkreis höchstens zwei Konstanten 
\begin_inset Formula $g_{0},g_{1}$
\end_inset

 mit 
\begin_inset Formula $\Sigma\left(g_{0}\right)=\mathbf{0}$
\end_inset

 und 
\begin_inset Formula $\Sigma\left(g_{1}\right)=\mathbf{1}$
\end_inset

 enthält, und jedes Beschriftung 
\begin_inset Formula $\Sigma\left(g\right)=R\bar{x}$
\end_inset

 nur einmal vorkommt.
\end_layout

\begin_layout Standard
Die Rigidität ist hier analog zu der Arbeit von Anderson und Dawar
\begin_inset CommandInset citation
LatexCommand cite
key "anderson_et_al:LIPIcs:2014:4445"

\end_inset

 definiert, verlangt aber zusätzlich, dass zwei Gates nicht nur durch die
 (hier nicht injektive) Output-Markierung 
\begin_inset Formula $\Omega$
\end_inset

 unterschieden werden.
 Diese Einschränkung ist strenger, schränkt aber die Definition nicht bedeutend
 ein:
\end_layout

\begin_layout Standard
Für zwei Gates 
\begin_inset Formula $g,g'\in G$
\end_inset

 mit den gleichen Vorgängern 
\begin_inset Formula $\Sigma\left(g\right)=\Sigma\left(g'\right)$
\end_inset

 erlaubt die nicht-injektive Definition von 
\begin_inset Formula $\Omega$
\end_inset

, dass 
\begin_inset Formula $g'$
\end_inset

 entfernt wird und 
\begin_inset Formula $\Omega'\left(\bar{t}\right)\coloneqq g$
\end_inset

 für alle 
\begin_inset Formula $\bar{t}\in\Omega^{-1}\left(g'\right)$
\end_inset

 gesetzt wird, was die strengere Form der Rigidität herstellt.
\end_layout

\begin_layout Standard
\begin_inset Newpage pagebreak
\end_inset


\end_layout

\begin_layout Section
Eigenschaften von Schaltkreisfamilien
\end_layout

\begin_layout Definition
Eine 
\begin_inset Formula $\left(\sigma,\mathbb{B}\right)$
\end_inset

-
\series bold
Schaltkreisfamilie
\series default
 
\begin_inset Formula $\bar{\mathcal{C}}=\left(\mathcal{C}_{n}\right)_{n\in\mathbb{N}}$
\end_inset

 sei eine Sequenz von invarianten Schaltkreisen 
\begin_inset Formula $\mathcal{C}_{n}=\left(G_{n},W_{n},\Sigma_{n},\Omega_{n},U_{n}\right)$
\end_inset

 mit der gleichen Stelligkeit 
\begin_inset Formula $\mathrm{ar}\left(\mathcal{C}_{n}\right)=k$
\end_inset

 und den Universen 
\begin_inset Formula $U_{n}=\left[1,n\right]$
\end_inset

.
\end_layout

\begin_layout Definition
Die von der Schaltkreisfamilie berechnete 
\begin_inset Formula $\sigma$
\end_inset

-Anfrage 
\begin_inset Formula $q_{\bar{\mathcal{C}}}$
\end_inset

 sei wie folgt: 
\begin_inset Formula 
\[
q_{\bar{\mathcal{C}}}\left(\mathfrak{A}\right)\coloneqq q_{\mathcal{C}_{\left|A\right|}}\left(\mathfrak{A}\right)
\]

\end_inset


\end_layout

\begin_layout --Separator--

\end_layout

\begin_layout Definition
\begin_inset Formula $\mathrm{SBC}$
\end_inset

 und 
\begin_inset Formula $\mathrm{SBC+\mathbf{MAJ}}$
\end_inset


\end_layout

\begin_layout Itemize
Sei 
\begin_inset Formula $\mathrm{SBC}$
\end_inset

 die Klasse aller 
\series bold
symmetrischen 
\begin_inset Formula $\left(\sigma,\mathbb{B}_{\mathrm{std}}\right)$
\end_inset

-Schaltkreisfamilien
\series default
.
\end_layout

\begin_layout Itemize
Sei 
\begin_inset Formula $\mathrm{SBC}+\mathbf{MAJ}$
\end_inset

 die Klasse aller 
\series bold
symmetrischen 
\begin_inset Formula $\left(\sigma,\mathbb{B}_{\mathrm{maj}}\right)$
\end_inset

-Schaltkreisfamilien
\series default
.
 (Zur Erinnerung: 
\begin_inset Formula $\mathbb{B}_{\mathrm{maj}}=\mathbb{B}_{\mathrm{std}}\uplus\left\{ \mathtt{MAJ}\right\} $
\end_inset

, wobei 
\begin_inset Formula $\mathtt{MAJ}$
\end_inset

 der Majority-Operator ist.)
\end_layout

\begin_layout --Separator--

\end_layout

\begin_layout Definition

\series bold
Uniformität
\end_layout

\begin_layout Definition
Für eine Klasse von Turingmaschinen 
\begin_inset Formula $T$
\end_inset

 sei eine Schaltkreisfamilie 
\begin_inset Formula $\bar{\mathcal{C}}$
\end_inset

 
\begin_inset Formula $T$
\end_inset

-
\series bold
uniform
\series default
, wenn ein 
\begin_inset Formula $n_{0}\in\mathbb{N}$
\end_inset

 existiert, so dass eine Turingmaschine aus 
\begin_inset Formula $T$
\end_inset

 bei Eingabe des Worts 
\begin_inset Formula $1\cdots1\in\left\{ 0,1\right\} ^{n}$
\end_inset

 mit 
\begin_inset Formula $n\geqslant n_{0}$
\end_inset

 eine Repräsentation von 
\begin_inset Formula $\mathcal{C}_{n}$
\end_inset

 berechnet.
\end_layout

\begin_layout Definition
Insbesondere sei 
\begin_inset Formula $P$
\end_inset

 die Klasse aller Turingmaschinen, die bei einer Eingabe der Länge 
\begin_inset Formula $n$
\end_inset

 nach 
\begin_inset Formula $f\left(n\right)\in n^{\mathcal{O}\left(1\right)}$
\end_inset

 Schritten halten, und 
\begin_inset Formula $\mathrm{LOGSPACE}\subseteq P$
\end_inset

 die Klasse der Turingmaschinen, die höchstens 
\begin_inset Formula $f\left(n\right)\in\mathcal{O}\left(\log n\right)$
\end_inset

 Speicherplatz belegen.
\end_layout

\begin_layout --Separator--

\end_layout

\begin_layout Definition

\series bold
Beschränkte Größe
\end_layout

\begin_layout Definition
Für eine Funktion 
\begin_inset Formula $f:\mathbb{N}\rightarrow\mathbb{N}$
\end_inset

 habe eine Schaltkreisfamilie 
\begin_inset Formula $\bar{\mathcal{C}}$
\end_inset

 
\begin_inset Formula $f$
\end_inset

-
\series bold
Größe
\series default
, wenn für ein 
\begin_inset Formula $n_{0}\in\mathbb{N}$
\end_inset

 und alle 
\begin_inset Formula $n\geqslant n_{0}$
\end_inset

 gilt, dass 
\begin_inset Formula $\left|\mathcal{C}_{n}\right|\leqslant f\left(n\right)$
\end_inset

.
 Für eine Klasse von Funktionen 
\begin_inset Formula $\mathcal{F}\subseteq\mathrm{Abb}\left(\mathbb{N},\mathbb{N}\right)$
\end_inset

 mit 
\begin_inset Formula $f\in\mathcal{F}$
\end_inset

 habe 
\begin_inset Formula $\bar{C}$
\end_inset

 
\begin_inset Formula $\mathcal{F}$
\end_inset

-Größe.
\end_layout

\begin_layout Definition
Insbesondere sei 
\begin_inset Formula $\mathrm{poly}\left(n\right)=n^{\mathcal{O}\left(1\right)}$
\end_inset

 die Klasse aller polynomiell beschränkten Funktionen.
\end_layout

\begin_layout Remark*
Statt 
\begin_inset Quotes gld
\end_inset


\begin_inset Formula $\mathrm{poly}\left(n\right)$
\end_inset

-groß
\begin_inset Quotes grd
\end_inset

 wird in 
\begin_inset CommandInset citation
LatexCommand cite
key "anderson_et_al:LIPIcs:2014:4445"

\end_inset

 der Begriff 
\begin_inset Quotes gld
\end_inset


\begin_inset Formula $\mathrm{P}/\mathrm{poly}$
\end_inset

-uniform
\begin_inset Quotes grd
\end_inset

 verwendet:
\end_layout

\begin_layout Remark*
Eine 
\begin_inset Formula $\mathrm{P/poly}$
\end_inset

-Turingmaschine arbeitet in Polynomialzeit und erhält für eine Eingabe der
 Länge 
\begin_inset Formula $n$
\end_inset

 eine polynomiell beschränkte Orakel-Eingabe 
\begin_inset Formula $\Upsilon\left(n\right)\in\left\{ 0,1\right\} ^{f\left(n\right)}$
\end_inset

, 
\begin_inset Formula $f\left(n\right)\in\mathrm{poly}\left(n\right)$
\end_inset

.
 Unter Voraussetzung einer geeigneten Kodierung kann 
\begin_inset Formula $\Upsilon\left(n\right)$
\end_inset

 jede 
\begin_inset Formula $\mathrm{poly}\left(n\right)$
\end_inset

-große Schaltkreisfamilie repräsentieren.
\begin_inset CommandInset citation
LatexCommand cite
key "arora-barak"

\end_inset


\end_layout

\begin_layout Remark*
Daher sind die Begriffe 
\begin_inset Quotes gld
\end_inset


\begin_inset Formula $\mathrm{poly}\left(n\right)$
\end_inset

-groß
\begin_inset Quotes grd
\end_inset

 und 
\begin_inset Quotes gld
\end_inset


\begin_inset Formula $P/\mathrm{poly}$
\end_inset

-uniform
\begin_inset Quotes grd
\end_inset

 äquivalent.
\end_layout

\begin_layout Definition

\series bold
Beschränkte Tiefe
\end_layout

\begin_layout Definition
Für eine Funktion 
\begin_inset Formula $f:\mathbb{N}\rightarrow\mathbb{N}$
\end_inset

 habe eine Schaltkreisfamilie 
\begin_inset Formula $\bar{\mathcal{C}}$
\end_inset

 
\begin_inset Formula $f$
\end_inset

-
\series bold
Tiefe
\series default
, wenn 
\begin_inset Formula $T\left(\mathcal{C}_{n}\right)\leqslant f\left(n\right)$
\end_inset

 für ein 
\begin_inset Formula $n_{0}\in\mathbb{N}$
\end_inset

 und alle 
\begin_inset Formula $n\geqslant n_{0}$
\end_inset

.
 Für eine Klasse 
\begin_inset Formula $\mathcal{F}\subseteq\mathrm{Abb}\left(\mathbb{N},\mathbb{N}\right)$
\end_inset

 sei der Begriff 
\begin_inset Quotes gld
\end_inset


\begin_inset Formula $\mathcal{F}$
\end_inset

-tief
\begin_inset Quotes grd
\end_inset

 analog zu 
\begin_inset Quotes gld
\end_inset


\begin_inset Formula $\mathcal{F}$
\end_inset

-groß
\begin_inset Quotes grd
\end_inset

 definiert.
\end_layout

\begin_layout Remark*
\begin_inset Formula $\mathrm{AC}^{0}$
\end_inset

 ist die Klasse der 
\begin_inset Formula $\mathcal{O}\left(1\right)$
\end_inset

-tiefen, 
\begin_inset Formula $\mathrm{poly}\left(n\right)$
\end_inset

-großen Schaltkreisfamilien.
\end_layout

\begin_layout Chapter
Von Formeln zu Schaltkreisfamilien
\end_layout

\begin_layout Section
Logik erster Stufe
\end_layout

\begin_layout Standard
Die Formeln der Logik erster Stufe sind durch symmetrische 
\begin_inset Formula $\mathrm{LOGSPACE}$
\end_inset

-uniforme 
\begin_inset Formula $\mathrm{AC}^{0}$
\end_inset

-Schaltkreise berechenbar:
\end_layout

\begin_layout Lemma
\begin_inset CommandInset label
LatexCommand label
name "lem:FO-Circuit"

\end_inset

Jede 
\begin_inset Formula $\mathrm{FO}\left[\sigma\right]$
\end_inset

-Formel 
\begin_inset Formula $\varphi\left(\bar{x}\right)$
\end_inset

 definiert eine 
\begin_inset Formula $\sigma$
\end_inset

-Anfrage 
\begin_inset Formula $q$
\end_inset

, die von einer symmetrischen 
\begin_inset Formula $\mathrm{LOGSPACE}$
\end_inset

-uniformen Schaltkreis-Familie 
\begin_inset Formula $\bar{\mathcal{C}^{\varphi}}$
\end_inset

 mit 
\begin_inset Formula $\left\Vert \varphi\right\Vert $
\end_inset

-Tiefe und 
\begin_inset Formula $\left\Vert \varphi\right\Vert n^{\mathtt{MF}\left(\varphi\right)}$
\end_inset

-Größe berechnet wird.
\end_layout

\begin_layout Proof
Sei 
\begin_inset Formula $\sigma$
\end_inset

 eine relationale Signatur, und sei 
\begin_inset Formula $\varphi\left(\bar{x}\right)$
\end_inset

 eine 
\begin_inset Formula $k$
\end_inset

-stellige 
\begin_inset Formula $\mathrm{FO}\left[\sigma\right]$
\end_inset

-Formel.
\end_layout

\begin_layout Proof
Per induktiver Konstruktion über den Aufbau von 
\begin_inset Formula $\varphi$
\end_inset

 wird der 
\begin_inset Formula $k$
\end_inset

-stellige Schaltkreis 
\begin_inset Formula $\mathcal{C}_{n}^{\varphi}$
\end_inset

 über dem Universum 
\begin_inset Formula $U\coloneqq\left[1,n\right]$
\end_inset

 definiert, so dass 
\begin_inset Formula $\left\llbracket \varphi\right\rrbracket \left(\mathfrak{A},\bar{t}\right)\Leftrightarrow\left\llbracket \mathcal{C}_{n}^{\varphi}\right\rrbracket \left(\mathfrak{A},\bar{t}\right)$
\end_inset

 für alle 
\begin_inset Formula $n\in\mathbb{N}$
\end_inset

, 
\begin_inset Formula $\mathfrak{A}\in\mathbf{FIN}^{\left[1,n\right]}\left(\sigma\right)$
\end_inset

 und 
\begin_inset Formula $\bar{t}\in\left[1,n\right]^{k}$
\end_inset

 gilt.
 Für eine beliebige Permutation 
\begin_inset Formula $\pi\in\mathrm{Sym}_{U}$
\end_inset

 wird ein Automorphismus 
\begin_inset Formula $\hat{\pi}$
\end_inset

 angegeben, und damit die Symmetrie nachgewiesen.
\end_layout

\begin_deeper
\begin_layout Case
Falls 
\begin_inset Formula $\varphi\left(\bar{x}\right)=R\bar{y}$
\end_inset

 für 
\begin_inset Formula $R/m\in\sigma$
\end_inset

 und 
\begin_inset Formula $\bar{y}\in\mathrm{frei}\left(\varphi\right)^{m}$
\end_inset

, so besteht 
\begin_inset Formula $\mathcal{C}_{n}^{\varphi}$
\end_inset

 aus 
\begin_inset Formula $n^{k}$
\end_inset

 Gates.
\end_layout

\begin_deeper
\begin_layout Description
Schaltkreis: 
\begin_inset Formula 
\[
\mathcal{C}_{n}^{\varphi}\coloneqq\left(\left\{ g_{\bar{t}}\mid\bar{t}\in U^{k}\right\} ,\emptyset,\Sigma,\Omega,U\right)
\]

\end_inset

Für jedes Tupel 
\begin_inset Formula $\bar{t}\in U^{k}$
\end_inset

 sei 
\begin_inset Formula $\beta_{\bar{t}}\coloneqq\left(\begin{array}{c}
\bar{x}\\
\bar{t}
\end{array}\right)$
\end_inset

 die Belegung der Variablen 
\begin_inset Formula $\bar{x}$
\end_inset

 mit 
\begin_inset Formula $\bar{t}$
\end_inset

:
\begin_inset Formula 
\begin{eqnarray*}
\Sigma\left(g_{\bar{t}}\right) & \coloneqq & R\beta_{\bar{t}}\left(\bar{y}\right)\\
\Omega\left(\bar{t}\right) & \coloneqq & g_{\bar{t}}
\end{eqnarray*}

\end_inset


\end_layout

\begin_layout Description
Korrektheit: 
\begin_inset Formula 
\[
\begin{array}{cccccc}
\left\llbracket R\bar{x}\right\rrbracket \left(\mathfrak{A},\bar{t}\right) & = & \left[R^{\mathfrak{A}}\right]\left(\beta_{\bar{t}}\bar{y}\right) & = & \mathcal{C}_{n}^{\varphi}\left[\mathfrak{A}\right]\left(g_{\bar{t}}\right)= & \left\llbracket \mathcal{C}_{n}^{\varphi}\right\rrbracket \left(\mathfrak{A},\bar{t}\right)\end{array}
\]

\end_inset


\end_layout

\begin_layout Description
Symmetrie: Sei 
\begin_inset Formula $\hat{\pi}g_{\bar{t}}\coloneqq g_{\pi\bar{t}}$
\end_inset

 für alle Tupel 
\begin_inset Formula $\bar{t}\in U^{k}$
\end_inset

.
 Per Definition ist 
\begin_inset Formula $\pi\beta_{\bar{t}}\left(\bar{y}\right)=\beta_{\pi\bar{t}}\left(\bar{y}\right)$
\end_inset

 und daher 
\begin_inset Formula 
\begin{eqnarray*}
\Sigma\left(\hat{\pi}g_{\bar{t}}\right) & = & \pi\Sigma\left(g_{\bar{t}}\right)\\
\Omega\left(\pi\bar{t}\right) & = & \hat{\pi}\Omega\left(\bar{t}\right)
\end{eqnarray*}

\end_inset


\end_layout

\begin_layout Description
Größe: Der Schaltkreis hat die Tiefe 
\begin_inset Formula $0$
\end_inset

 und die Größe 
\begin_inset Formula $n^{k}=n^{\mathtt{MF}\left(\varphi\right)}$
\end_inset

.
\end_layout

\end_deeper
\begin_layout Case
Falls 
\begin_inset Formula $\varphi\left(\bar{x}\right)=y_{1}\dot{=}y_{2}$
\end_inset

, so besteht 
\begin_inset Formula $\mathcal{C}_{n}^{\varphi}$
\end_inset

 aus 
\begin_inset Formula $n^{k}$
\end_inset

 isolierten Gates (hier ist 
\begin_inset Formula $k\in\left\{ 1,2\right\} $
\end_inset

).
\end_layout

\begin_deeper
\begin_layout Description
Schaltkreis: 
\begin_inset Formula 
\[
\mathcal{C}_{n}^{\varphi}\coloneqq\left(\left\{ g_{\bar{t}}\mid\bar{t}\in U^{k}\right\} ,\emptyset,\Sigma,\Omega,U\right)
\]

\end_inset

Für jedes Tupel 
\begin_inset Formula $\bar{t}\in U^{k}$
\end_inset

 sei 
\begin_inset Formula $\beta_{\bar{t}}\coloneqq\left(\begin{array}{c}
\bar{x}\\
\bar{t}
\end{array}\right)$
\end_inset

 die entsprechende Belegung:
\begin_inset Formula 
\begin{eqnarray*}
\Sigma\left(g_{\bar{t}}\right) & \coloneqq & \begin{cases}
\mathbf{1} & \mathrm{falls}\,\,\beta\left(y_{1}\right)=\beta\left(y_{2}\right)\\
\mathbf{0} & \mathrm{sonst}
\end{cases}\\
\Omega\left(\bar{t}\right) & \coloneqq & g_{\bar{t}}
\end{eqnarray*}

\end_inset


\end_layout

\begin_layout Description
Korrektheit: 
\begin_inset Formula 
\begin{eqnarray*}
\left\llbracket y_{1}\dot{=}y_{2}\right\rrbracket \left(\mathfrak{A},\bar{t}\right)=1 & \Leftrightarrow & \left(\beta_{\bar{t}}y_{1}=\beta_{\bar{t}}y_{2}\right)\\
 & \Leftrightarrow & \mathcal{C}_{n}^{\varphi}\left[\mathfrak{A}\right]\left(g_{\bar{t}}\right)=1\\
 & \Leftrightarrow & \left\llbracket \mathcal{C}_{n}^{\varphi}\right\rrbracket \left(\mathfrak{A},\bar{t}\right)=1
\end{eqnarray*}

\end_inset


\end_layout

\begin_layout Description
Symmetrie: Sei 
\begin_inset Formula $\hat{\pi}\left(g_{\bar{t}}\right)\coloneqq g_{\pi\bar{t}}$
\end_inset

.
 Es gilt 
\begin_inset Formula $\beta_{\bar{t}}\left(x\right)=\beta_{\bar{t}}\left(x'\right)$
\end_inset

 genau dann wenn 
\begin_inset Formula $\beta_{\pi\bar{t}}\left(x\right)=\beta_{\pi\bar{t}}\left(x\right)$
\end_inset

, und daher ist 
\begin_inset Formula $\Sigma\left(\hat{\pi}g_{\bar{t}}\right)=\Sigma\left(g_{\pi\bar{t}}\right)$
\end_inset

.
\end_layout

\begin_layout Description
Größe: Der Schaltkreis hat die Tiefe 
\begin_inset Formula $0$
\end_inset

 und die Größe 
\begin_inset Formula $n^{k}=n^{\mathtt{MF}\left(\varphi\right)}$
\end_inset

.
\end_layout

\end_deeper
\begin_layout Case
Falls 
\begin_inset Formula $\varphi\left(\bar{x}\right)=\varphi_{1}\left(\bar{y_{1}}\right)\wedge\cdots\wedge\varphi_{m}\left(\bar{y_{m}}\right)$
\end_inset

 mit 
\begin_inset Formula $\mathrm{ar}\left(\varphi_{i}\right)=k_{i}$
\end_inset

, so besteht 
\begin_inset Formula $\mathcal{C}_{n}^{\varphi}$
\end_inset

 aus der disjunkten Vereinigung aller 
\begin_inset Formula $\mathcal{C}_{n}^{\varphi_{i}}$
\end_inset

 für 
\begin_inset Formula $1\leqslant i\leqslant m$
\end_inset

 mit der folgenden Erweiterung.
\end_layout

\begin_deeper
\begin_layout Description
Schaltkreis: 
\begin_inset Formula 
\begin{eqnarray*}
\mathcal{C}_{n}^{\varphi_{i}} & = & \left(G_{i},W_{i},\Sigma_{i},\Omega_{i},U\right)\\
\mathcal{C}_{n}^{\varphi} & \coloneqq & \left(G,W,\Sigma,\Omega,U\right)
\end{eqnarray*}

\end_inset

Es werden neue Outputs für jedes 
\begin_inset Formula $k$
\end_inset

-Tupel aus 
\begin_inset Formula $U$
\end_inset

 hinzugefügt:
\begin_inset Formula 
\begin{eqnarray*}
G & \coloneqq & \biguplus_{i=1}^{m}G_{i}\uplus\left\{ g_{\bar{t}}\mid\bar{t}\in U^{k}\right\} 
\end{eqnarray*}

\end_inset

Die Outputs werden entsprechend mit denen von 
\begin_inset Formula $\mathcal{C}_{n}^{\varphi_{i}}$
\end_inset

 verknüpft, wobei 
\begin_inset Formula $\rho_{i}:U^{k}\rightarrow U^{k_{i}}$
\end_inset

 ein 
\begin_inset Formula $k$
\end_inset

-Tupel 
\begin_inset Formula $\bar{t}$
\end_inset

 wie folgt auf die in 
\begin_inset Formula $\varphi_{i}$
\end_inset

 frei vorkommenden Variablen reduziere:
\begin_inset Formula 
\begin{eqnarray*}
\mathrm{Sei}\,\,\,\bar{j} & \in & \left[1,k\right]^{k_{i}}\\
\mathrm{so}\,\mathrm{dass}\,\,\,\bar{y_{i}} & = & \left(x_{\left(j_{1}\right)},\cdots,x_{\left(j_{k_{i}}\right)}\right)
\end{eqnarray*}

\end_inset


\begin_inset Formula 
\begin{eqnarray*}
\mathrm{dann}\,\,\,\rho_{i}\left(t_{1},\cdots,t_{k}\right) & \coloneqq & \left(t_{\left(j_{1}\right)},\cdots,t_{\left(j_{k_{i}}\right)}\right)
\end{eqnarray*}

\end_inset


\begin_inset Formula 
\begin{eqnarray*}
W & \coloneqq & \bigcup_{i=1}^{m}W_{i}\cup W_{\mathtt{AND}}\\
W_{\mathtt{AND}} & \coloneqq & \left\{ \left(\Omega_{i}\left(\rho_{i}\bar{t}\right),g_{\bar{t}}\right)\mid1\leqslant i\leqslant m,\,\bar{t}\in U^{k}\right\} 
\end{eqnarray*}

\end_inset

Die Gates werden entsprechend beschriftet:
\begin_inset Formula 
\begin{eqnarray*}
\Sigma\left(g\right) & \coloneqq & \begin{cases}
\Sigma_{i}\left(g\right) & \mathrm{für}\,\,g\in G_{i}\\
\mathtt{AND} & \mathrm{sonst}
\end{cases}\\
\Omega\left(\bar{t}\right) & \coloneqq & g_{\bar{t}}\,\,\mathrm{für\,alle\,\,}\bar{t}\in U^{k}
\end{eqnarray*}

\end_inset


\end_layout

\begin_layout Description
Korrektheit: Es gilt für 
\begin_inset Formula $\bar{t}\in U^{k}$
\end_inset

: 
\begin_inset Formula 
\begin{eqnarray*}
\left\llbracket \varphi_{1}\wedge\cdots\wedge\varphi_{m}\right\rrbracket \left(\mathfrak{A},\bar{t}\right) & = & \min_{1\leqslant i\leqslant m}\left\llbracket \varphi_{i}\right\rrbracket \left(\mathfrak{A},\bar{t}\right)\\
 & = & \min_{1\leqslant i\leqslant m}\mathcal{C}_{n}^{\varphi_{i}}\left[\mathfrak{A}\right]\left(\Omega_{i}\left(\rho_{i}\bar{t}\right)\right)\\
 & = & \mathcal{C}_{n}^{\varphi}\left[\mathfrak{A}\right]\left(g_{\bar{t}}\right)
\end{eqnarray*}

\end_inset


\end_layout

\begin_layout Description
Symmetrie: Es existieren bereits die Automorphismen 
\begin_inset Formula $\hat{\pi_{i}}$
\end_inset

 für jeden Schaltkreis 
\begin_inset Formula $\mathcal{C}_{n}^{\varphi_{i}}$
\end_inset

.
 Der Automorphismus 
\begin_inset Formula $\hat{\pi}$
\end_inset

 erweitert diese wie folgt:
\begin_inset Formula 
\[
\hat{\pi}\left(g\right)\coloneqq\begin{cases}
\hat{\pi}_{i}\left(g\right) & \mathrm{für}\,g\in G_{i}\\
g_{\pi\bar{t}} & \mathrm{für}\,g=g_{\bar{t}}
\end{cases}
\]

\end_inset

Für die Gates und Kanten der Schaltkreise 
\begin_inset Formula $\mathcal{C}_{n}^{\varphi_{i}}$
\end_inset

 ist 
\begin_inset Formula $\hat{\pi}$
\end_inset

 per Annahme bereits korrekt.
\end_layout

\begin_deeper
\begin_layout Enumerate
Für jede neue Kante 
\begin_inset Formula $\left(\Omega_{i}\left(\rho_{i}\bar{t}\right),g_{\bar{t}}\right)\in W_{\mathtt{AND}}$
\end_inset

 gilt nach Voraussetzung: 
\begin_inset Formula 
\begin{eqnarray*}
\left(\hat{\pi}\Omega_{i}\left(\rho_{i}\bar{t}\right),\hat{\pi}g_{\bar{t}}\right) & = & \left(\hat{\pi}_{i}\Omega_{i}\left(\rho_{i}\bar{t}\right),\hat{\pi}g_{\bar{t}}\right)\\
 & = & \left(\Omega_{i}\left(\rho_{i}\pi\bar{t}\right),g_{\pi\bar{t}}\right)\\
 & \in & W_{\mathtt{AND}}
\end{eqnarray*}

\end_inset

(Die Reduktion 
\begin_inset Formula $\rho_{i}:U^{k}\rightarrow U^{k_{i}}$
\end_inset

 ist ein Homomorphismus und kommutiert mit der Permutation 
\begin_inset Formula $\pi$
\end_inset

.)
\end_layout

\begin_layout Enumerate
Es gilt 
\begin_inset Formula $\Sigma\left(\hat{\pi}g_{\bar{t}}\right)=\Sigma\left(g_{\bar{t}}\right)=\mathtt{AND}$
\end_inset

.
\end_layout

\begin_layout Enumerate
Es gilt 
\begin_inset Formula $\hat{\pi}\Omega\left(\bar{t}\right)=\hat{\pi}g_{\bar{t}}=g_{\pi\bar{t}}=\Omega\left(\pi\bar{t}\right)$
\end_inset

.
\end_layout

\end_deeper
\begin_layout Description
Größe: Der Schaltkreis hat die Tiefe 
\begin_inset Formula $T\left(\mathcal{C}_{n}^{\varphi}\right)$
\end_inset

 und die Größe 
\begin_inset Formula $\left|\mathcal{C}_{n}^{\varphi}\right|$
\end_inset

: 
\begin_inset Formula 
\begin{eqnarray*}
T\left(\mathcal{C}_{n}^{\varphi}\right) & = & 1+\max_{i=1}^{m}T\left(\mathcal{C}_{n}^{\psi_{i}}\right)\\
 & \overset{\mathrm{Ann.}}{\leqslant} & 1+\max_{i=1}^{m}\left\Vert \psi_{i}\right\Vert \\
 & \leqslant & 1+\sum_{i=1}^{m}\left\Vert \psi_{i}\right\Vert \leqslant\left\Vert \varphi\right\Vert 
\end{eqnarray*}

\end_inset

 
\begin_inset Formula 
\begin{eqnarray*}
\left|\mathcal{C}_{n}^{\varphi}\right| & = & n^{k}+\sum_{i=1}^{m}\left|\mathcal{C}_{n}^{\psi_{i}}\right|\\
 & \overset{\mathrm{Ann.}}{\leqslant} & n^{k}+\sum_{i=1}^{m}\left\Vert \psi_{i}\right\Vert n^{\mathtt{MF}\left(\psi_{i}\right)}\\
 & \leqslant & n^{\mathtt{MF}\left(\varphi\right)}+\sum_{i=1}^{m}\left\Vert \psi_{i}\right\Vert n^{\mathtt{MF}\left(\varphi\right)}\\
 & \leqslant & n^{\mathtt{MF}\left(\varphi\right)}\left(1+\sum_{i=1}^{m}\left\Vert \psi_{i}\right\Vert \right)\leqslant n^{\mathtt{MF}\left(\varphi\right)}\left\Vert \varphi\right\Vert 
\end{eqnarray*}

\end_inset


\end_layout

\end_deeper
\begin_layout Case
Falls 
\begin_inset Formula $\varphi\left(\bar{x}\right)=\varphi_{1}\vee\cdots\vee\varphi_{\ell}$
\end_inset

, so ist der Schaltkreis analog zu Fall 3 mit 
\begin_inset Formula $\Sigma\left(g_{\bar{t}}\right)=\mathtt{OR}$
\end_inset

.
\end_layout

\begin_layout Case
Falls 
\begin_inset Formula $\varphi\left(\bar{x}\right)=\neg\psi$
\end_inset

, so wird der Schaltkreis 
\begin_inset Formula $\mathcal{C}_{n}^{\psi}$
\end_inset

 wie folgt erweitert:
\end_layout

\begin_deeper
\begin_layout Description
Schaltkreis: 
\begin_inset Formula 
\begin{eqnarray*}
\mathcal{C}_{n}^{\psi} & = & \left(G',W',\Sigma',\Omega',U\right)\\
\mathcal{C}_{n}^{\varphi} & \coloneqq & \left(G,W,\Sigma,\Omega,U\right)
\end{eqnarray*}

\end_inset

Für jedes Tupel 
\begin_inset Formula $\bar{t}\in U^{k}$
\end_inset

 wird ein neues Gate 
\begin_inset Formula $g_{\bar{t}}$
\end_inset

 eingefügt.
 Die Gates werden mit den Outputs von 
\begin_inset Formula $\mathcal{C}_{n}^{\varphi'}$
\end_inset

 verknüpft.
 
\begin_inset Formula 
\begin{eqnarray*}
G & \coloneqq & G'\uplus\left\{ g_{\bar{t}}\mid\bar{t}\in U^{k}\right\} \\
W & \coloneqq & W'\cup W_{\mathtt{NOT}}\\
W_{\mathtt{NOT}} & \coloneqq & \left\{ \left(\Omega'\left(\bar{t}\right),g_{\bar{t}}\right)\mid\bar{t}\in U^{k}\right\} \\
\Sigma\left(g\right) & \coloneqq & \begin{cases}
\Sigma'\left(g\right) & \mathrm{falls}\,\,g\in G'\\
\mathtt{NOT} & \mathrm{sonst}
\end{cases}\\
\Omega\left(\bar{t}\right) & \coloneqq & g_{\bar{t}}
\end{eqnarray*}

\end_inset


\end_layout

\begin_layout Description
Korrektheit: 
\begin_inset Formula 
\begin{eqnarray*}
\left\llbracket \neg\psi\right\rrbracket \left(\mathfrak{A},\bar{t}\right) & = & 1-\left\llbracket \psi\right\rrbracket \left(\mathfrak{A},\bar{t}\right)\\
 & = & 1-\mathcal{C}_{n}^{\psi}\left[\mathfrak{A}\right]\left(\Omega'\left(\bar{t}\right)\right)\\
 & = & \mathcal{C}_{n}^{\varphi}\left[\mathfrak{A}\right]\left(g_{\bar{t}}\right)
\end{eqnarray*}

\end_inset


\end_layout

\begin_layout Description
Symmetrie: Es existiert bereits der Automorphismus 
\begin_inset Formula $\hat{\pi'}$
\end_inset

.
 Dieser wird wie folgt erweitert:
\begin_inset Formula 
\[
\hat{\pi}\left(g\right)\coloneqq\begin{cases}
\hat{\pi'}\left(g\right) & \mathrm{falls}\,\,g\in G'\\
g_{\pi\bar{t}} & \mathrm{falls}\,\,g=g_{\bar{t}}
\end{cases}
\]

\end_inset

Dann gilt:
\begin_inset Formula 
\begin{eqnarray*}
\hat{\pi}W_{\mathtt{NOT}} & = & \left\{ \left(\hat{\pi}\Omega'\left(\bar{t}\right),\hat{\pi}g_{\bar{t}}\right)\mid\bar{t}\in U^{k}\right\} \\
 & = & \left\{ \left(\Omega'\left(\pi\bar{t}\right),g_{\pi\bar{t}}\right)\mid\bar{t}\in U^{k}\right\} =W_{\mathtt{NOT}}\\
\Sigma\left(\hat{\pi}g_{\bar{t}}\right) & = & \Sigma\left(g_{\bar{t}}\right)=\mathtt{NOT}
\end{eqnarray*}

\end_inset


\end_layout

\begin_layout Description
Größe: Der Schaltkreis hat die Tiefe 
\begin_inset Formula $T\left(\mathcal{C}_{n}^{\varphi}\right)$
\end_inset

 und die Größe 
\begin_inset Formula $\left|\mathcal{C}_{n}^{\varphi}\right|$
\end_inset

: 
\begin_inset Formula 
\begin{eqnarray*}
T\left(\mathcal{C}_{n}^{\varphi}\right) & = & 1+T\left(\mathcal{C}_{n}^{\psi}\right)\\
 & \leqslant & 1+\left\Vert \psi\right\Vert \leqslant\left\Vert \varphi\right\Vert 
\end{eqnarray*}

\end_inset


\begin_inset Formula 
\begin{eqnarray*}
\left|\mathcal{C}_{n}^{\varphi}\right| & = & n^{k}+\left|\mathcal{C}_{n}^{\psi}\right|\\
 & \overset{\mathrm{Ann.}}{\leqslant} & n^{k}+\left\Vert \psi\right\Vert n^{\mathtt{MF}\left(\psi\right)}\\
 & \leqslant & n^{\mathtt{MF}\left(\varphi\right)}+\left\Vert \psi\right\Vert n^{\mathtt{MF}\left(\varphi\right)}\\
 & \leqslant & \left\Vert \varphi\right\Vert n^{\mathtt{MF}\left(\varphi\right)}
\end{eqnarray*}

\end_inset


\end_layout

\end_deeper
\begin_layout Case
Falls 
\begin_inset Formula $\varphi\left(\bar{x}\right)=\exists y_{1}\cdots\exists y_{m}\psi\left(z_{1},\cdots,z_{k+m}\right)$
\end_inset

, so wird der Schaltkreis 
\begin_inset Formula $\mathcal{C}_{n}^{\varphi'}$
\end_inset

 wie folgt erweitert:
\end_layout

\begin_deeper
\begin_layout Description
Schaltkreis: 
\begin_inset Formula 
\begin{eqnarray*}
\mathcal{C}_{n}^{\varphi} & \coloneqq & \left(G,W,\Sigma,\Omega,U\right)\\
\mathcal{C}_{n}^{\varphi'} & \coloneqq & \left(G',W',\Sigma',\Omega',U\right)
\end{eqnarray*}

\end_inset

Sei 
\begin_inset Formula $\rho:U^{k+m}\rightarrow U^{k}$
\end_inset

 die Abbildung, die aus 
\begin_inset Formula $\bar{z}$
\end_inset

 die gebundenen Variablen 
\begin_inset Formula $\bar{y}$
\end_inset

 entferne:
\begin_inset Formula 
\begin{eqnarray*}
\mathrm{Sei}\,\,\,\bar{i} & \in & \left[1,k\right]^{k}\\
\mathrm{so}\,\mathrm{dass}\,\,\,\bar{x} & = & \left(z_{\left(i_{1}\right)},\cdots,z_{\left(i_{k}\right)}\right)\\
\mathrm{dann}\,\,\,\rho\left(t_{1},\cdots,t_{k}\right) & \coloneqq & \left(t_{\left(i_{1}\right)},\cdots,t_{\left(i_{k}\right)}\right)
\end{eqnarray*}

\end_inset


\end_layout

\begin_layout Standard
Es werden neue Outputs eingefügt.
\begin_inset Formula 
\begin{eqnarray*}
G & \coloneqq & G'\uplus\left\{ g_{\bar{t}}\mid\bar{t}\in U^{k}\right\} 
\end{eqnarray*}

\end_inset

Jedes Gate 
\begin_inset Formula $\Omega'\left(\bar{u}\right)$
\end_inset

 mit 
\begin_inset Formula $\bar{u}\in U^{k+m}$
\end_inset

 wird mit dem Gate 
\begin_inset Formula $g_{\rho\bar{u}}$
\end_inset

 verknüpft.
\begin_inset Formula 
\begin{eqnarray*}
W & \coloneqq & W'\cup W_{\exists}\\
W_{\exists} & \coloneqq & \left\{ \left(\Omega'\left(\bar{u}\right),g_{\rho\bar{u}}\right)\mid\bar{u}\in U^{k+m}\right\} 
\end{eqnarray*}

\end_inset


\end_layout

\begin_layout Standard
Die neuen Outputs werden mit 
\begin_inset Formula $\mathtt{OR}$
\end_inset

 markiert.
\begin_inset Formula 
\begin{eqnarray*}
\Sigma\left(g\right) & \coloneqq & \begin{cases}
\Sigma'\left(g\right) & \mathrm{für}\,g\in G'\\
\mathtt{OR} & \mathrm{sonst}
\end{cases}
\end{eqnarray*}

\end_inset


\begin_inset Formula 
\[
\Omega\left(\bar{t}\right)\coloneqq g_{\bar{t}}
\]

\end_inset


\end_layout

\begin_layout Description
Korrektheit: Für 
\begin_inset Formula $\bar{t}\in U^{k}$
\end_inset

 gilt: 
\begin_inset Formula 
\begin{eqnarray*}
\left\llbracket \varphi\right\rrbracket \left(\mathfrak{A},\bar{t}\right) & = & \max_{\begin{subarray}{c}
\bar{u}\in U^{k+m}\\
\rho\bar{u}=\bar{t}
\end{subarray}}\left\llbracket \psi\right\rrbracket \left(\mathfrak{A},\bar{u}\right)=1\\
 & = & \max_{\begin{subarray}{c}
\bar{u}\in U^{k+m}\\
\rho\bar{u}=\bar{t}
\end{subarray}}\left(\mathcal{C}_{n}^{\varphi}\left[\mathfrak{A}\right]\left(\Omega'\left(\bar{u}\right)\right)\right)\\
 & = & \mathcal{C}_{n}^{\varphi}\left[\mathfrak{A}\right]\left(g_{\bar{t}}\right)
\end{eqnarray*}

\end_inset


\end_layout

\begin_layout Description
Symmetrie: Es existiert bereits der Automorphismus 
\begin_inset Formula $\hat{\pi'}$
\end_inset

.
 Dieser wird wie folgt erweitert:
\begin_inset Formula 
\[
\hat{\pi}\left(g\right)\coloneqq\begin{cases}
\hat{\pi'}\left(g\right) & \mathrm{für}\,\,g\in G'\\
g_{\pi\bar{t}} & \mathrm{für}\,\,g=g_{\bar{t}}
\end{cases}
\]

\end_inset

Auf den Gates von 
\begin_inset Formula $\mathcal{C}_{n}^{\varphi'}$
\end_inset

 ist 
\begin_inset Formula $\hat{\pi}$
\end_inset

 per Annahme treu zu 
\begin_inset Formula $\pi$
\end_inset

.
\end_layout

\begin_deeper
\begin_layout Enumerate
Für die neuen Kanten 
\begin_inset Formula $\left(\Omega'\left(\bar{u}\right),g_{\rho\bar{u}}\right)\in W$
\end_inset

 gilt: 
\begin_inset Formula $\left(\hat{\pi}\Omega'\left(\bar{u}\right),\hat{\pi}g_{\rho\bar{u}}\right)=\left(\Omega'\left(\pi\bar{u}\right),g_{\rho\pi\bar{u}}\right)\in W$
\end_inset

.
\end_layout

\begin_layout Enumerate
\begin_inset Formula $\hat{\pi}\Sigma\left(g_{\bar{t}}\right)=\Sigma\left(g_{\bar{t}}\right)=\mathtt{OR}$
\end_inset

.
\end_layout

\begin_layout Enumerate
\begin_inset Formula $\Omega\left(\pi\bar{t}\right)=g_{\pi\bar{t}}=\hat{\pi}g_{\bar{t}}=\hat{\pi}\Omega\left(\bar{t}\right)$
\end_inset

.
\end_layout

\end_deeper
\begin_layout Description
Größe: Der Schaltkreis hat die Tiefe 
\begin_inset Formula $T\left(\mathcal{C}_{n}^{\varphi}\right)$
\end_inset

 und die Größe 
\begin_inset Formula $\left|\mathcal{C}_{n}^{\varphi}\right|$
\end_inset

:
\begin_inset Formula 
\begin{eqnarray*}
T\left(\mathcal{C}_{n}^{\varphi}\right) & = & 1+T\left(\mathcal{C}_{n}^{\psi}\right)\\
 & \leqslant & 1+\left\Vert \psi\right\Vert \leqslant\left\Vert \varphi\right\Vert 
\end{eqnarray*}

\end_inset


\begin_inset Formula 
\begin{eqnarray*}
\left|\mathcal{C}_{n}^{\varphi}\right| & = & n^{k}+\left|\mathcal{C}_{n}^{\psi}\right|\\
 & \overset{\mathrm{Ann.}}{\leqslant} & n^{k}+\left\Vert \psi\right\Vert n^{\mathtt{MF}\left(\psi\right)}\\
 & \leqslant & n^{\mathtt{MF}\left(\varphi\right)}+\left\Vert \psi\right\Vert n^{\mathtt{MF}\left(\varphi\right)}\\
 & \leqslant & \left\Vert \varphi\right\Vert n^{\mathtt{MF}\left(\varphi\right)}
\end{eqnarray*}

\end_inset


\end_layout

\end_deeper
\begin_layout Case
Falls 
\begin_inset Formula $\varphi\left(\bar{x}\right)=\forall y_{1}\cdots\forall y_{m}\psi\left(\bar{z}\right)$
\end_inset

, so sei der Schaltkreis analog zu Fall 8 mit 
\begin_inset Formula $\Sigma\left(g_{\bar{t}}\right)\coloneqq\mathtt{AND}$
\end_inset

.
\end_layout

\begin_layout Description
Speicherplatz Die beschriebene Konstruktion wird von einem 
\begin_inset Formula $\left\Vert \varphi\right\Vert \left|\mathrm{var}\left(\varphi\right)\right|\log n$
\end_inset

-platzbeschränkten Algorithmus berechnet.
\end_layout

\end_deeper
\begin_layout Proof
\begin_inset Float algorithm
wide false
sideways false
status open

\begin_layout LyX-Code
Berechne(
\begin_inset Formula $\varphi\left(\bar{x}\right)$
\end_inset

):
\end_layout

\begin_deeper
\begin_layout LyX-Code
Für jedes 
\begin_inset Formula $\bar{t}\in\left[1,n\right]^{\mathrm{ar}\left(\bar{x}\right)}$
\end_inset

:
\end_layout

\begin_deeper
\begin_layout LyX-Code
Gi b Gate 
\begin_inset Formula $g_{\varphi\left(\bar{t}\right)}$
\end_inset

 und 
\begin_inset Formula $\Omega_{\varphi}\left(\bar{t}\right)\coloneqq g_{\varphi\left(\bar{t}\right)}$
\end_inset

 aus.
\end_layout

\begin_layout LyX-Code
Gib 
\begin_inset Formula $\Sigma_{\varphi}\left(g_{\varphi\left(\bar{t}\right)}\right)$
\end_inset

 entsprechend der Konstruktion aus.
\end_layout

\end_deeper
\begin_layout LyX-Code
Für jede direkte Teilformel 
\begin_inset Formula $\psi\left(\bar{y}\right)$
\end_inset

:
\end_layout

\begin_deeper
\begin_layout LyX-Code
Berechne(
\begin_inset Formula $\psi\left(\bar{y}\right)$
\end_inset

).
\end_layout

\begin_layout LyX-Code
Für jedes 
\begin_inset Formula $\bar{t}\in\left[1,n\right]^{\mathrm{ar}\left(\bar{x}\right)}$
\end_inset

:
\end_layout

\begin_deeper
\begin_layout LyX-Code
Für jedes 
\begin_inset Formula $\bar{t}'\in\left[1,n\right]^{\mathrm{ar}\left(\bar{y}\right)}$
\end_inset

:
\end_layout

\begin_deeper
\begin_layout LyX-Code
Falls 
\begin_inset Formula $t_{i}=t'_{j}$
\end_inset

 für alle 
\begin_inset Formula $i\in\left[1,\mathrm{ar}\left(\bar{x}\right)\right],j\in\left[1,\mathrm{ar}\left(\bar{y}\right)\right]$
\end_inset

 mit 
\begin_inset Formula $x_{i}=y_{j}$
\end_inset

:
\end_layout

\begin_deeper
\begin_layout LyX-Code
Verknüpfe 
\begin_inset Formula $\Omega_{\psi}\left(\bar{t}'\right)$
\end_inset

 mit 
\begin_inset Formula $g_{\varphi\left(\bar{t}\right)}$
\end_inset

.
\end_layout

\end_deeper
\end_deeper
\end_deeper
\end_deeper
\end_deeper
\begin_layout Plain Layout
\begin_inset Caption Standard

\begin_layout Plain Layout
Berechnung von 
\begin_inset Formula $\mathcal{C}_{n}^{\varphi}$
\end_inset

 für 
\begin_inset Formula $\mathrm{FO}\left[\sigma\right]$
\end_inset

-Formeln.
\end_layout

\end_inset


\end_layout

\begin_layout Plain Layout

\end_layout

\end_inset


\end_layout

\begin_layout Proof
Jeder Aufruf von 
\begin_inset Formula $\mathtt{Berechne}\left(\varphi\left(\bar{x}\right)\right)$
\end_inset

 iteriert über Variablen 
\begin_inset Formula $\bar{t}\in U^{\mathrm{var}\left(\varphi\right)}$
\end_inset

, die 
\begin_inset Formula $\mathrm{var}\left(\varphi\right)\log n$
\end_inset

 Bits belegen.
 Da die maximale Tiefe der Rekursion durch 
\begin_inset Formula $\left\Vert \varphi\right\Vert $
\end_inset

 beschränkt ist, werden insgesamt 
\begin_inset Formula $\left\Vert \varphi\right\Vert \left|\mathrm{var}\left(\varphi\right)\right|\log n$
\end_inset

 Bits benötigt.
\end_layout

\begin_layout Standard
\begin_inset Newpage pagebreak
\end_inset


\end_layout

\begin_layout Section
Ordnungserweiterung
\end_layout

\begin_layout Standard
Wir betrachten die Logik 
\begin_inset Formula $\mathrm{FO}+\mathbf{ORD}$
\end_inset

, und weisen nach, dass die Konstruktion aus Lemma 
\begin_inset CommandInset ref
LatexCommand formatted
reference "lem:FO-Circuit"

\end_inset

 angepasst werden kann, ohne die Klasse der 
\begin_inset Formula $P$
\end_inset

-uniformen symmetrischen 
\begin_inset Formula $\mathrm{AC}^{0}$
\end_inset

-Schaltkreise zu verlassen.
\end_layout

\begin_layout Lemma
\begin_inset CommandInset label
LatexCommand label
name "lem:fo-ord"

\end_inset

Jede 
\begin_inset Formula $\left(\mathrm{FO}+\mathbf{ORD}\right)\left[\sigma\right]$
\end_inset

-Formel 
\begin_inset Formula $\varphi$
\end_inset

 definiert eine 
\begin_inset Formula $\sigma$
\end_inset

-Anfrage 
\begin_inset Formula $q$
\end_inset

, die von einer symmetrischen, 
\begin_inset Formula $\mathrm{LOGSPACE}$
\end_inset

-uniformen 
\begin_inset Formula $\left(\sigma,\mathbb{B}_{\mathrm{std}}\right)$
\end_inset

-Schaltkreisfamilie 
\begin_inset Formula $\left(\mathcal{C}_{n}\right){}_{n\in\mathbb{N}}$
\end_inset

 mit konstanter 
\begin_inset Formula $\left\Vert \varphi\right\Vert $
\end_inset

-Tiefe und polynomieller 
\begin_inset Formula $\left\Vert \varphi\right\Vert \left(2n+1\right)^{\mathtt{MF}\left(\varphi\right)}$
\end_inset

-Größe berechnet wird.
\end_layout

\begin_layout Proof
Sei 
\begin_inset Formula $\varphi$
\end_inset

 eine 
\begin_inset Formula $k$
\end_inset

-stellige 
\begin_inset Formula $\left(\mathrm{FO}+\mathbf{ORD}\right)\left[\sigma\right]$
\end_inset

-Formel.
 Für 
\begin_inset Formula $n\in\mathbb{N}$
\end_inset

 und 
\begin_inset Formula $\mathfrak{A}\in\mathbf{FIN}^{\left(n\right)}\left(\sigma\right)$
\end_inset

 wird 
\begin_inset Formula $\varphi$
\end_inset

 auf der disjunkt vereinigten 
\begin_inset Formula $\left(\sigma\cup\left\{ \leqslant\right\} \right)$
\end_inset

-Struktur 
\begin_inset Formula $\mathfrak{A}\uplus\Upsilon\left(n\right)$
\end_inset

 ausgewertet, wobei 
\begin_inset Formula $\Upsilon\left(n\right)=\left(\left[0,n\right],\leqslant\right)$
\end_inset

 die lineare Ordnung auf 
\begin_inset Formula $\left[0,n\right]$
\end_inset

 ist.
\end_layout

\begin_layout Proof
Der Schaltkreis 
\begin_inset Formula $\mathcal{C}_{n}$
\end_inset

 wird aber auf der umbenannten 
\begin_inset Formula $\sigma$
\end_inset

-Struktur 
\begin_inset Formula $\mathfrak{A}'\coloneqq\pi\mathfrak{A}\in\mathbf{FIN}^{\left[1,n\right]}\left(\sigma\right)$
\end_inset

 mit dem Universum 
\begin_inset Formula $U=\left[1,n\right]$
\end_inset

 ausgewertet.
\end_layout

\begin_layout Proof
Vor der Konstruktion muss daher sichergestellt werden, dass das Universum
 von 
\begin_inset Formula $\mathfrak{A}'$
\end_inset

 disjunkt von dem Universum der Orakelstruktur 
\begin_inset Formula $\Upsilon\left(n\right)$
\end_inset

 ist.
 Dazu wird das Universum 
\begin_inset Formula $\left[0,n\right]$
\end_inset

 von 
\begin_inset Formula $\Upsilon\left(n\right)$
\end_inset

 durch eine Umbenennung nach 
\begin_inset Formula $\left[n+1,2n+1\right]$
\end_inset

 
\begin_inset Quotes gld
\end_inset

verschoben
\begin_inset Quotes grd
\end_inset

:
\begin_inset Formula 
\begin{eqnarray*}
\Upsilon'\left(n\right) & \coloneqq & \rho\Upsilon\left(n\right)\\
\rho & : & \left[0,n\right]\rightarrow\left[n+1,2n+1\right]\\
\rho\left(i\right) & \coloneqq & i+n+1
\end{eqnarray*}

\end_inset


\end_layout

\begin_layout Proof
Nun betrachten wir die disjunkte Vereinigung (wobei die Ordnung 
\begin_inset Formula $\leqslant$
\end_inset

 weiterhin nur auf 
\begin_inset Formula $\left[n+1,2n+1\right]$
\end_inset

 definiert ist): 
\begin_inset Formula 
\[
\mathfrak{A}'\uplus\Upsilon'\left(n\right)\in\mathbf{FIN}^{\left[1,2n+1\right]}\left(\sigma\cup\left\{ \leqslant\right\} \right)
\]

\end_inset


\end_layout

\begin_layout Proof
Weil 
\begin_inset Formula $\Upsilon\left(n\right)\cong\Upsilon'\left(n\right)$
\end_inset

 und 
\begin_inset Formula $\mathfrak{A}\cong\mathfrak{A}'$
\end_inset

, gilt auch 
\begin_inset Formula $\mathfrak{A}\uplus\Upsilon\left(n\right)\cong\mathfrak{A}'\uplus\Upsilon'\left(n\right)$
\end_inset

 (denn der Isomorphismus ist unter disjunkter Vereinigung abgeschlossen):
 
\begin_inset Formula 
\[
\left\llbracket \varphi\right\rrbracket \left(\mathfrak{A}\uplus\Upsilon\left(n\right)\right)=\left\llbracket \varphi\right\rrbracket \left(\mathfrak{A}'\uplus\Upsilon'\left(n\right)\right)
\]

\end_inset


\end_layout

\begin_layout Proof
Wir konstruieren nun zunächst einen 
\begin_inset Formula $\left(\sigma\cup\left\{ \leqslant\right\} ,\mathbb{B}_{\mathrm{std}}\right)$
\end_inset

-Schaltkreis 
\begin_inset Formula $\mathcal{C}_{2n+1}^{\varphi}$
\end_inset

 über 
\begin_inset Formula $U'=\left[1,2n+1\right]$
\end_inset

 entsprechend dem vorhergehenden Beweis für 
\begin_inset Formula $\mathrm{FO}$
\end_inset

.
 Dieser arbeitet korrekt auf 
\begin_inset Formula $\mathfrak{A}'\uplus\Upsilon'\left(n\right)$
\end_inset

 und hat offensichtlich die geforderte Größe 
\begin_inset Formula $S_{n}\leqslant5\left\Vert \varphi\right\Vert \left(2n+1\right)^{\mathtt{MF}\left(\varphi\right)}$
\end_inset

.
 Die Konstruktion erfordert 
\begin_inset Formula $\left\Vert \varphi\right\Vert \left|\mathrm{var}\left(\varphi\right)\right|\log\left(2n+1\right)$
\end_inset

 Speicherplatz.
\end_layout

\begin_layout Proof
Anschließend konstruieren wir daraus den 
\begin_inset Formula $\left(\sigma,\mathbb{B}_{\mathrm{std}}\right)$
\end_inset

-Schaltkreis 
\begin_inset Formula 
\begin{eqnarray*}
\dot{\mathcal{C}_{n}^{\varphi}} & \coloneqq & \left(G,W,\dot{\Sigma},\dot{\Omega},U\right)\\
U & \coloneqq & \left[1,n\right]
\end{eqnarray*}

\end_inset

 indem alle Inputs 
\begin_inset Formula $\Sigma\left(g\right)=R\bar{t}$
\end_inset

 mit 
\begin_inset Formula $\bar{t}\notin U^{k}$
\end_inset

 oder 
\begin_inset Formula $R\notin\sigma$
\end_inset

 durch Konstanten 
\begin_inset Formula $\dot{\Sigma}\left(g\right)\in\left\{ \mathbf{0},\mathbf{1}\right\} $
\end_inset

 ersetzt werden, und die Ausgangsfunktion auf 
\begin_inset Formula $\dot{\Omega}=\Omega_{\mid U^{k}}$
\end_inset

 reduziert wird.
 Das ist eine einfache Iteration über die Gates 
\begin_inset Formula $G$
\end_inset

 des Schaltkreises, die nur einen Zähler der Größe 
\begin_inset Formula $\log\left|G\right|\leqslant\left\Vert \varphi\right\Vert \left|\mathrm{var}\left(\varphi\right)\right|\log n$
\end_inset

 benötigt.
\end_layout

\begin_deeper
\begin_layout Case
Für 
\begin_inset Formula $\Sigma\left(g\right)=R\bar{t}$
\end_inset

 mit 
\begin_inset Formula $R\in\sigma$
\end_inset

 werden die 
\begin_inset Quotes gld
\end_inset

überschüssigen
\begin_inset Quotes grd
\end_inset

 Inputs einfach auf 
\begin_inset Formula $\mathbf{0}$
\end_inset

 gesetzt:
\begin_inset Formula 
\begin{eqnarray*}
\dot{\Sigma}\left(g\right) & \coloneqq & \begin{cases}
R\bar{t} & \mathrm{falls}\,\,\bar{t}\in U^{k}\\
\mathbf{0} & \mathrm{sonst}
\end{cases}
\end{eqnarray*}

\end_inset


\end_layout

\begin_layout Case
Für 
\begin_inset Formula $\Sigma\left(g\right)=t_{1}\dot{\leqslant}t_{2}$
\end_inset

 wird das Ordnungsprädikat fest in den Schaltkreis eingebaut:
\begin_inset Formula 
\begin{eqnarray*}
\dot{\Sigma}\left(g\right) & \coloneqq & \begin{cases}
\mathbf{1} & \mathrm{falls}\,\,t_{1},t_{2}\in\left[n+1,2n+1\right],\,t_{1}\leqslant t_{2}\\
\mathbf{0} & \mathrm{sonst}
\end{cases}
\end{eqnarray*}

\end_inset


\end_layout

\end_deeper
\begin_layout Proof
Sei nun 
\begin_inset Formula $\pi\in\mathrm{Sym}_{U}$
\end_inset

 eine beliebige Permutation.
\end_layout

\begin_layout Proof
Wir betrachten die Erweiterung 
\begin_inset Formula $\pi'\coloneqq\pi\cup\mathbf{id}_{\mid\left[n+1,2n+1\right]}$
\end_inset

, die die Elemente von 
\begin_inset Formula $\Upsilon'\left(n\right)$
\end_inset

 auf sich selbst abbildet.
 Offensichtlich ist 
\begin_inset Formula $\pi'\in\mathrm{Sym}_{U'}$
\end_inset

 eine Permutation von 
\begin_inset Formula $U'=\left[1,2n+1\right]$
\end_inset

.
\end_layout

\begin_layout Proof
Aus der Symmetrie des Schaltkreises 
\begin_inset Formula $\mathcal{C}_{2n+1}^{\varphi}$
\end_inset

 bezüglich 
\begin_inset Formula $\mathrm{Sym}_{U'}$
\end_inset

 (siehe Lemma 
\begin_inset CommandInset ref
LatexCommand ref
reference "lem:FO-Circuit"

\end_inset

) folgt die Existenz eines von 
\begin_inset Formula $\pi'$
\end_inset

 induzierten Automorphismus 
\begin_inset Formula $\hat{\pi}$
\end_inset

.
\end_layout

\begin_layout Proof
Es wird nun nachgewiesen, dass 
\begin_inset Formula $\hat{\pi}$
\end_inset

 auch ein von 
\begin_inset Formula $\pi$
\end_inset

 induzierter Automorphismus in 
\begin_inset Formula $\dot{\mathcal{C}_{n}^{\varphi}}$
\end_inset

 ist.
 Dazu müssen nur 
\begin_inset Formula $\dot{\Sigma}$
\end_inset

 und 
\begin_inset Formula $\dot{\Omega}$
\end_inset

 betrachtet werden, da der Graph 
\begin_inset Formula $\left(G,W\right)$
\end_inset

 unverändert bleibt.
 Ferner betrachten wir nur die nicht-konstanten Inputs von 
\begin_inset Formula $\mathcal{C}_{2n+1}^{\varphi}$
\end_inset

, denn ansonsten bleibt 
\begin_inset Formula $\Sigma$
\end_inset

 unverändert.
\end_layout

\begin_deeper
\begin_layout Case
Für 
\begin_inset Formula $\Sigma\left(g\right)=R\bar{t}$
\end_inset

 mit 
\begin_inset Formula $R\in\sigma$
\end_inset

 gilt:
\end_layout

\begin_deeper
\begin_layout Case
Falls 
\begin_inset Formula $\bar{t}\in U^{k}$
\end_inset

:
\begin_inset Formula 
\[
\dot{\Sigma}\left(\hat{\pi}g\right)=\Sigma\left(\hat{\pi}g\right)=R\pi\bar{t}
\]

\end_inset


\end_layout

\begin_layout Case
Sonst:
\begin_inset Formula 
\[
\dot{\Sigma}\left(\hat{\pi}g\right)=\mathbf{0}=\dot{\Sigma}\left(g\right)
\]

\end_inset


\end_layout

\end_deeper
\begin_layout Case
Für 
\begin_inset Formula $\Sigma\left(g\right)=t_{1}\dot{\leqslant}t_{2}$
\end_inset

 gilt:
\end_layout

\begin_deeper
\begin_layout Case
Falls 
\begin_inset Formula $t_{1},t_{2}\in\left[n+1,2n+1\right]$
\end_inset

 und 
\begin_inset Formula $t_{1}\leqslant t_{2}$
\end_inset

:
\begin_inset Formula 
\[
\dot{\Sigma}\left(\hat{\pi}g\right)=\mathbf{1}=\dot{\Sigma}\left(g\right)
\]

\end_inset


\end_layout

\begin_layout Case
Sonst:
\begin_inset Formula 
\[
\dot{\Sigma}\left(\hat{\pi}g\right)=\mathbf{0}=\dot{\Sigma}\left(g\right)
\]

\end_inset


\end_layout

\end_deeper
\end_deeper
\begin_layout Proof
Außerdem gilt ist 
\begin_inset Formula $U^{k}$
\end_inset

 bezüglich 
\begin_inset Formula $\pi'$
\end_inset

 abgeschlossen: 
\begin_inset Formula 
\[
\hat{\pi}\dot{\Omega}\left(\bar{t}\right)=\hat{\pi}\Omega\left(\bar{t}\right)=\Omega\left(\pi'\bar{t}\right)=\dot{\Omega}\left(\pi'\bar{t}\right)
\]

\end_inset

 Damit ist 
\begin_inset Formula $\bar{\dot{\mathcal{C}^{\varphi}}}$
\end_inset

 eine symmetrische, 
\begin_inset Formula $\mathrm{LOGSPACE}$
\end_inset

-uniforme Schaltkreisfamilie in 
\begin_inset Formula $\mathrm{AC}^{0}$
\end_inset

, die die Anfrage 
\begin_inset Formula $q$
\end_inset

 berechnet.
\end_layout

\begin_layout Standard
\begin_inset Newpage pagebreak
\end_inset


\end_layout

\begin_layout Section
Zählquantoren
\end_layout

\begin_layout Standard
Wir betrachten die Logik 
\begin_inset Formula $\mathrm{FO}+C$
\end_inset

, und weisen nach, dass die vorhergehende Konstruktion aus Lemma 
\begin_inset CommandInset ref
LatexCommand ref
reference "lem:fo-ord"

\end_inset

 angepasst werden kann, indem Majority-Gates hinzugefügt werden.
\end_layout

\begin_layout Lemma
\begin_inset CommandInset label
LatexCommand label
name "lem:fo-c"

\end_inset

Jede 
\begin_inset Formula $\left(\mathrm{FO}+\exists^{\geqslant}\right)\left[\sigma\right]$
\end_inset

-Formel 
\begin_inset Formula $\varphi$
\end_inset

 definiert eine 
\begin_inset Formula $\sigma$
\end_inset

-Anfrage 
\begin_inset Formula $q$
\end_inset

, die von einer symmetrischen, 
\begin_inset Formula $\mathrm{LOGSPACE}$
\end_inset

-uniformen 
\begin_inset Formula $\left(\sigma,\mathbb{B}_{\mathrm{maj}}\right)$
\end_inset

-Schaltkreisfamilie 
\begin_inset Formula $\left(\mathcal{C}_{n}\right)_{n\in\mathbb{N}}$
\end_inset

 mit konstanter 
\begin_inset Formula $\left\Vert \varphi\right\Vert $
\end_inset

-Tiefe und polynomieller 
\begin_inset Formula $\left\Vert \varphi\right\Vert \cdot\left(2n+1\right)^{\mathtt{MF}\left(\varphi\right)}$
\end_inset

-Größe berechnet wird.
\end_layout

\begin_layout Proof
Sei 
\begin_inset Formula $\varphi$
\end_inset

 eine 
\begin_inset Formula $k$
\end_inset

-stellige 
\begin_inset Formula $\left(\mathrm{FO}+\exists^{\geqslant}\right)\left[\sigma\right]$
\end_inset

-Formel.
 Der 
\begin_inset Formula $\left(\sigma\cup\left\{ \leqslant\right\} ,\mathbb{B}_{\mathrm{maj}}\right)$
\end_inset

-Schaltkreis 
\begin_inset Formula $\mathcal{C}_{2n+1}^{\varphi}$
\end_inset

 über dem Universum 
\begin_inset Formula $U'\coloneqq\left[1,2n+1\right]=\left[1,n\right]\uplus\rho\left[0,n\right]$
\end_inset

 wird nach dem gleichen Schema wie in Lemma 
\begin_inset CommandInset ref
LatexCommand ref
reference "lem:fo-ord"

\end_inset

, wobei ein neuer Fall hinzukommt.
\end_layout

\begin_layout Proof
(Zur Erinnerung: 
\begin_inset Formula $\rho:\left[0,n\right]\rightarrow\left[n+1,2n+1\right]$
\end_inset

 ist die Verschiebung des Universums von 
\begin_inset Formula $\Upsilon\left(n\right)$
\end_inset

.)
\end_layout

\begin_layout Proof
Falls 
\begin_inset Formula $\varphi\left(\bar{x}\right)=\exists^{\geqslant x_{i}}y_{j}\psi\left(\bar{y}\right)$
\end_inset

, so sei 
\begin_inset Formula $\mathcal{C}_{2n+1}^{\psi}$
\end_inset

 der 
\begin_inset Formula $k$
\end_inset

-stellige Schaltkreis für die Formel 
\begin_inset Formula $\psi$
\end_inset

:
\begin_inset Formula 
\[
\mathcal{C}_{2n+1}^{\psi}=\left(G_{\psi},W_{\psi},\Sigma_{\psi},\Omega_{\psi},U'\right)
\]

\end_inset


\end_layout

\begin_deeper
\begin_layout Description
Schaltkreis: 
\begin_inset Formula 
\begin{eqnarray*}
\mathcal{C}_{2n+1}^{\varphi} & \coloneqq & \left(G,W,\Sigma,\Omega,U'\right)
\end{eqnarray*}

\end_inset

Es wird für jedes Tupel 
\begin_inset Formula $\bar{t}\in U'^{k}$
\end_inset

 ein neuer Output 
\begin_inset Formula $g_{\bar{t}}$
\end_inset

 eingefügt; ferner werden 
\begin_inset Formula $2n$
\end_inset

 Konstanten eingefügt: 
\begin_inset Formula 
\begin{eqnarray*}
G & = & G_{\psi}\uplus\left\{ g_{\bar{t}}\mid\bar{t}\in U'^{k}\right\} \uplus\left\{ 0_{j},1_{j}\mid1\leqslant j\leqslant n\right\} \\
W & = & W_{\psi}\uplus W_{\mathtt{MAJ}}\uplus W_{\mathrm{pad}}
\end{eqnarray*}

\end_inset

Die neuen Outputs werden mit 
\begin_inset Formula $\mathtt{MAJ}$
\end_inset

 markiert, falls 
\begin_inset Formula $t_{i}$
\end_inset

 (der Wert der Variable 
\begin_inset Formula $x_{i}$
\end_inset

) einer der numerischen Werte (im Bereich 
\begin_inset Formula $\rho\left[0,n\right]=\left[n+1,2n+1\right]$
\end_inset

) ist, und sonst mit 
\begin_inset Formula $\mathbf{0}$
\end_inset

.
 
\begin_inset Formula 
\[
\begin{array}{ccc}
\Sigma\left(0_{j}\right)=\mathbf{0}, & \Sigma\left(0_{j}\right)=\mathbf{1}, & \Sigma\left(g_{\bar{t}}\right)=\begin{cases}
\mathtt{MAJ} & \mathrm{falls}\,\,t_{i}\in\rho\left[0,n\right]\\
\mathbf{0} & \mathrm{sonst}
\end{cases}\end{array}
\]

\end_inset


\begin_inset Formula 
\[
\Omega\left(\bar{t}\right)=g_{\bar{t}}
\]

\end_inset

Seien 
\begin_inset Formula $\tau_{1},\tau_{2}:U^{k}\rightarrow U^{k-1}$
\end_inset

 die folgenden Abbildungen, die den Wert 
\begin_inset Formula $t_{i}$
\end_inset

 aus 
\begin_inset Formula $\bar{t}$
\end_inset

 beziehungsweise 
\begin_inset Formula $u_{j}$
\end_inset

 aus 
\begin_inset Formula $\bar{u}$
\end_inset

 entfernen:
\begin_inset Formula 
\begin{eqnarray*}
\tau_{1}\left(t_{1},\cdots,t_{k}\right) & = & \left(t_{1},\cdots t_{i-1},t_{i+1},\cdots,t_{k}\right)\\
\tau_{2}\left(t_{1},\cdots,t_{k}\right) & = & \left(t_{1},\cdots t_{j-1},t_{j+1},\cdots,t_{k}\right)
\end{eqnarray*}

\end_inset

Es gilt also 
\begin_inset Formula $\tau_{1}\left(\bar{t}\right)=\tau_{2}\left(\bar{u}\right)$
\end_inset

 genau dann wenn 
\begin_inset Formula $\bar{t}$
\end_inset

 und 
\begin_inset Formula $\bar{u}$
\end_inset

 in den gemeinsamen freien Variablen von 
\begin_inset Formula $\varphi$
\end_inset

 und 
\begin_inset Formula $\psi$
\end_inset

 übereinstimmen.
 Das Majority-Gate 
\begin_inset Formula $g_{\bar{t}}$
\end_inset

 soll prüfen, ob 
\begin_inset Formula $t_{i}\leqslant\rho f\left(\tau_{1}\left(\bar{t}\right)\right)$
\end_inset

, wobei 
\begin_inset Formula $f:U^{k-1}\rightarrow\left[0,n\right]$
\end_inset

 die Anzahl der 
\begin_inset Formula $\psi$
\end_inset

 erfüllenden Belegungen von 
\begin_inset Formula $y_{j}$
\end_inset

 bei der Belegung der übrigen freien Variablen mit 
\begin_inset Formula $\tau_{1}\left(\bar{t}\right)$
\end_inset

 sei: 
\begin_inset Formula 
\begin{eqnarray*}
f\left(\bar{t'}\right) & \coloneqq & \left|\left\{ u_{j}\in\left[1,n\right]\mid\mathrm{es\,existiert\,}\bar{u}\in q_{\mathcal{C}_{2n+1}^{\psi}}\left(\mathfrak{A}\uplus\rho\Upsilon\left(n\right)\right),\,\tau_{2}\left(\bar{u}\right)=\bar{t'}\right\} \right|
\end{eqnarray*}

\end_inset

Dazu wird jedes Gate 
\begin_inset Formula $g_{\bar{t}}$
\end_inset

 mit 
\begin_inset Formula $t_{i}\in\left[n+1,2n+1\right]$
\end_inset

 zunächst mit den entsprechenden Outputs von 
\begin_inset Formula $\mathcal{C}_{2n+1}^{\psi}$
\end_inset

 verknüpft: 
\begin_inset Formula 
\[
W_{\mathtt{MAJ}}=\left\{ \left(\Omega_{\psi}\left(\bar{u}\right),g_{\bar{t}}\right)\mid\bar{t},\bar{u}\in U'^{k},\,\tau_{1}\left(\bar{t}\right)=\tau_{2}\left(\bar{u}\right),\,u_{j}\in\left[1,n\right]\right\} 
\]

\end_inset

Momentan hat es genau 
\begin_inset Formula $n$
\end_inset

 Eingänge (für jeden Wert 
\begin_inset Formula $u_{j}\in\left[1,n\right]$
\end_inset

).
 Daher gibt es 
\begin_inset Formula $1$
\end_inset

 aus, wenn 
\begin_inset Formula $f\left(\bar{t}\right)\geqslant\frac{n}{2}$
\end_inset

.
 Es soll aber berechnen, ob 
\begin_inset Formula $f\left(\bar{t}\right)\geqslant\rho^{-1}t_{i}$
\end_inset

.
 Dazu fügen wir die Kanten 
\begin_inset Formula $W_{\mathrm{pad}}$
\end_inset

 ein, um die Eingänge der Majority-Gates mit Konstanten aufzufüllen.
 Ein Majority-Gate mit 
\begin_inset Formula $k$
\end_inset

 zusätzlichen 
\begin_inset Formula $\mathbf{0}$
\end_inset

-Eingängen entscheidet 
\begin_inset Formula $f\left(\bar{t}\right)\geqslant\frac{n+k}{2}$
\end_inset

, eines mit 
\begin_inset Formula $k'$
\end_inset

 zusätzlichen 
\begin_inset Formula $\mathbf{1}$
\end_inset

-Eingängen berechnet 
\begin_inset Formula $f\left(\bar{t}\right)\geqslant\frac{n-k'}{2}$
\end_inset

.
 Es folgt:
\begin_inset Formula 
\begin{eqnarray*}
\rho^{-1}t_{i} & \in & \left\{ \frac{n+k}{2},\frac{n-k'}{2}\right\} \\
k=2\rho^{-1}t_{i}-n & \mbox{oder} & k'=n-2\rho^{-1}t_{i}
\end{eqnarray*}

\end_inset

Jedes Majority-Gate 
\begin_inset Formula $g_{\bar{t}}$
\end_inset

 muss entweder 
\begin_inset Formula $k=2\rho^{-1}t_{i}-n$
\end_inset

 
\begin_inset Formula $\mathbf{0}$
\end_inset

-Eingänge oder 
\begin_inset Formula $k'=n-2\rho^{-1}t_{i}$
\end_inset

 
\begin_inset Formula $\mathbf{1}$
\end_inset

-Eingänge erhalten:
\begin_inset Formula 
\begin{eqnarray*}
W_{\mathrm{pad}} & = & \left\{ \left(0_{j},g_{\bar{t}}\right)\mid\bar{t}\in U'^{k},\,t_{i}\in\rho\left[0,n\right],\,1\leqslant j\leqslant2\rho^{-1}t_{i}-n\right\} \\
 & \cup & \left\{ \left(1_{j},g_{\bar{t}}\right)\mid\bar{t}\in U'^{k},\,t_{i}\in\rho\left[0,n\right],\,1\leqslant j\leqslant n-2\rho^{-1}t_{i}\right\} 
\end{eqnarray*}

\end_inset


\begin_inset Formula 
\begin{eqnarray*}
\overset{n+k=2\rho^{-1}t_{i}}{\overbrace{x_{1}\cdots x_{n}\underset{k=2\rho^{-1}t_{i}-n}{\underbrace{\mathbf{0}\mathbf{0}\cdots\mathbf{0}}}}} &  & \overset{n+k'=2n-2\rho^{-1}t_{i}}{\overbrace{x_{1}\cdots x_{n}\underset{k'=n-2\rho^{-1}t_{i}}{\underbrace{\mathbf{1}\mathbf{1}\cdots\mathbf{1}}}}}
\end{eqnarray*}

\end_inset


\end_layout

\begin_layout Description
Symmetrie: Der neue Schaltkreis ist offensichtlich nicht symmetrisch bezüglich
 
\begin_inset Formula $\mathrm{Sym}_{U'}$
\end_inset

, denn die Anzahl der konstanten Vorgänger von 
\begin_inset Formula $g_{\bar{t}}$
\end_inset

 hängt von dem Wert 
\begin_inset Formula $t_{i}$
\end_inset

 ab.
 Allerdings ist er symmetrisch bezüglich der Permutationen, die die Werte
 in 
\begin_inset Formula $\left[n+1,2n+1\right]$
\end_inset

 fixieren.
 (Da die Induktion in Lemma 
\begin_inset CommandInset ref
LatexCommand ref
reference "lem:FO-Circuit"

\end_inset

 für eine beliebige Permutation 
\begin_inset Formula $\pi$
\end_inset

 gilt, funktioniert sie auch für diesen Spezialfall.)
\end_layout

\begin_deeper
\begin_layout Standard
Sei 
\begin_inset Formula $\pi\in\mathrm{Sym}_{U}$
\end_inset

 beliebig, und 
\begin_inset Formula $\pi'\coloneqq\pi\cup\mathbf{id}_{\left[n+1,2n+1\right]}$
\end_inset

 deren Erweiterung auf 
\begin_inset Formula $U'$
\end_inset

.
 Nun erweitern wir den Automorphismus 
\begin_inset Formula $\hat{\pi}$
\end_inset

 von 
\begin_inset Formula $\mathcal{C}_{2n+1}^{\psi}$
\end_inset

 wie folgt: 
\begin_inset Formula 
\begin{eqnarray*}
\hat{\pi}\left(0_{i}\right) & \coloneqq & 0_{i}\\
\hat{\pi}\left(1_{i}\right) & \coloneqq & 1_{i}\\
\hat{\pi}\left(g_{\bar{t}}\right) & \coloneqq & g_{\pi'\bar{t}}
\end{eqnarray*}

\end_inset


\end_layout

\begin_layout Enumerate
Nun gilt für jede Kante 
\begin_inset Formula $\left(\Omega_{\psi}\left(\bar{u}\right),g_{\bar{t}}\right)\in W_{\mathrm{maj}}$
\end_inset

 mit 
\begin_inset Formula $\bar{t},\bar{u}\in U'^{k}$
\end_inset

 und 
\begin_inset Formula $\tau_{1}\left(\bar{t}\right)=\tau_{2}\left(\bar{u}\right)$
\end_inset

:
\begin_inset Formula 
\begin{eqnarray*}
\left(\hat{\pi}\Omega_{\psi}\left(\bar{u}\right),\hat{\pi}g_{\bar{t}}\right) & \overset{\mathrm{Ann.}}{=} & \left(\Omega_{\psi}\left(\pi'\bar{u}\right),\hat{\pi}g_{\bar{t}}\right)\\
 & = & \left(\Omega_{\psi}\left(\pi'\bar{u}\right),g_{\pi'\bar{t}}\right)
\end{eqnarray*}

\end_inset

Und weil 
\begin_inset Formula $\pi'\bar{t},\pi'\bar{u}\in U'^{k}$
\end_inset

 und 
\begin_inset Formula $\tau_{1}\left(\pi'\bar{t}\right)=\tau_{2}\left(\pi'\bar{u}\right)$
\end_inset

 gilt, folgt:
\begin_inset Formula 
\[
\left(\Omega_{\psi}\left(\pi'\bar{u}\right),g_{\pi'\bar{t}}\right)\in W_{\mathtt{MAJ}}
\]

\end_inset


\end_layout

\begin_layout Enumerate
Für jede Kante 
\begin_inset Formula $\left(0_{j},g_{\bar{t}}\right)\in W_{\mathrm{pad}}$
\end_inset

 (mit 
\begin_inset Formula $\bar{t}\in U'^{k}$
\end_inset

 und 
\begin_inset Formula $t_{i}\in\left[n+1,2n+1\right]$
\end_inset

, und 
\begin_inset Formula $j\in\left[1,2t_{i}-3n-2\right]$
\end_inset

):
\begin_inset Formula 
\begin{eqnarray*}
\left(\hat{\pi}0_{j},\hat{\pi}g_{\bar{t}}\right) & = & \left(0_{j},g_{\pi'\bar{t}}\right)
\end{eqnarray*}

\end_inset

Und weil 
\begin_inset Formula $\pi't_{i}=t_{i}$
\end_inset

, gilt immer noch 
\begin_inset Formula $j\in\left[1,2\pi't_{i}-3n-2\right]$
\end_inset

, und daher 
\begin_inset Formula $\left(\hat{\pi}0_{j},\hat{\pi}g_{\bar{t}}\right)\in W_{\mathrm{pad}}$
\end_inset

.
 Das gleiche gilt analog für die Kanten 
\begin_inset Formula $\left(\hat{\pi}1_{j},\hat{\pi}g_{\bar{t}}\right)$
\end_inset

.
\end_layout

\begin_layout Enumerate
Für 
\begin_inset Formula $\Sigma$
\end_inset

:
\begin_inset Formula 
\begin{eqnarray*}
\Sigma\left(\hat{\pi}0_{j}\right) & = & \Sigma\left(0_{j}\right)\\
\Sigma\left(\hat{\pi}1_{j}\right) & = & \Sigma\left(1_{j}\right)\\
\Sigma\left(\hat{\pi}g_{\bar{t}}\right) & = & \Sigma\left(g_{\pi'\bar{t}}\right)\\
 & = & \begin{cases}
\mathtt{MAJ} & \mathrm{falls}\,\,\pi't_{i}\in\left[n+1,2n+1\right]\\
\mathbf{0} & \mathrm{sonst}
\end{cases}\\
 & = & \Sigma\left(g_{\bar{t}}\right)
\end{eqnarray*}

\end_inset


\end_layout

\begin_deeper
\begin_layout Enumerate
Für 
\begin_inset Formula $\Omega$
\end_inset

 ist 
\begin_inset Formula $\hat{\pi}\Omega\left(\bar{t}\right)=\hat{\pi}g_{\bar{t}}=g_{\pi'\bar{t}}=\Omega\left(\pi'\bar{t}\right)$
\end_inset

 per Definition gegeben.
\end_layout

\end_deeper
\begin_layout Description
Größe: 
\begin_inset Formula 
\begin{eqnarray*}
T\left(\mathcal{C}_{2n+1}^{\varphi}\right) & \leqslant & 1+T\left(\mathcal{C}_{2n+1}^{\psi}\right)\\
 & \overset{\mathrm{Ann.}}{\leqslant} & 1+\left\Vert \psi\right\Vert \leqslant\left\Vert \varphi\right\Vert 
\end{eqnarray*}

\end_inset


\begin_inset Formula 
\begin{eqnarray*}
\left|\mathcal{C}_{2n+1}^{\varphi}\right| & \leqslant & \left(2n+1\right)^{k}+2n+\left|\mathcal{C}_{2n+1}^{\psi}\right|\\
 & \overset{\mathrm{Ann.}}{\leqslant} & \left(2n+1\right)^{k}+2n+\left\Vert \psi\right\Vert \left(2n+1\right)^{\mathtt{MF}\left(\psi\right)}\\
 &  & \left(2n+1\right)^{\mathtt{MF}\left(\varphi\right)}+\left\Vert \psi\right\Vert \left(2n+1\right)^{\mathtt{MF}\left(\varphi\right)}\\
 & \leqslant & \left\Vert \varphi\right\Vert \left(2n+1\right)^{\mathtt{MF}\left(\varphi\right)}
\end{eqnarray*}

\end_inset


\end_layout

\end_deeper
\end_deeper
\begin_layout Proof
Nach der Erzeugung von 
\begin_inset Formula $\mathcal{C}_{2n+1}^{\varphi}$
\end_inset

 wird der Schaltkreis auf die bereits beschriebene Weise zu 
\begin_inset Formula $\dot{\mathcal{C}_{n}^{\varphi}}$
\end_inset

 umgewandelt, in dem die nicht-konstanten Inputs mit Elementen aus 
\begin_inset Formula $\left[n+1,2n+1\right]$
\end_inset

 zu Konstanten werden.
 Der neue Schritt fügt keine nicht-konstanten Inputs hinzu, so dass sich
 hierbei nichts ändert.
\end_layout

\begin_layout Proof
Da der Schaltkreis 
\begin_inset Formula $\mathcal{C}_{2n+1}^{\varphi}$
\end_inset

 für jede Permutation 
\begin_inset Formula $\pi\uplus\mathbf{id}_{\left[n+1,2n+1\right]}$
\end_inset

 mit 
\begin_inset Formula $\pi\in\mathrm{Sym}_{\left[1,n\right]}$
\end_inset

 einen Automorphismus besitzt, ist der Schaltkreis 
\begin_inset Formula $\dot{\mathcal{C}_{n}^{\varphi}}$
\end_inset

 symmetrisch (siehe Lemma 
\begin_inset CommandInset ref
LatexCommand ref
reference "lem:fo-ord"

\end_inset

).
\end_layout

\begin_layout Proof
\begin_inset Newpage pagebreak
\end_inset


\end_layout

\begin_layout Section
Beliebige Orakel
\end_layout

\begin_layout Standard
Wir betrachten die Logik 
\begin_inset Formula $\mathrm{FO}+\Upsilon$
\end_inset

 für beliebige Orakel 
\begin_inset Formula $\Upsilon:\mathbb{N}\rightarrow\mathbf{FIN}_{\leqslant}\left(\eta\right)$
\end_inset

, und weisen nach, dass die Konstruktion aus 
\begin_inset CommandInset ref
LatexCommand ref
reference "lem:fo-ord"

\end_inset

 auf beliebige Prädikate erweitert werden kann, wobei die Uniformität, aber
 nicht die beschränkte Größe geopfert wird.
\end_layout

\begin_layout Lemma
\begin_inset CommandInset label
LatexCommand label
name "lem:fo-u"

\end_inset

Seien 
\begin_inset Formula $\eta$
\end_inset

 und 
\begin_inset Formula $\sigma$
\end_inset

 disjunkte Signaturen und 
\begin_inset Formula $\Upsilon\rightarrow\mathbf{FIN}_{\leqslant}\left(\eta\right)$
\end_inset

 ein Orakel.
\end_layout

\begin_layout Lemma
Jede 
\begin_inset Formula $\left(\mathrm{FO}+\Upsilon\right)\left[\sigma\right]$
\end_inset

-Formel 
\begin_inset Formula $\varphi$
\end_inset

 definiert eine 
\begin_inset Formula $\sigma$
\end_inset

-Anfrage 
\begin_inset Formula $q$
\end_inset

, die von einer symmetrischen 
\begin_inset Formula $\left(\sigma,\mathbb{B}_{\mathrm{std}}\right)$
\end_inset

-Schaltkreisfamilie 
\begin_inset Formula $\left(\mathcal{C}_{n}\right){}_{n\in\mathbb{N}}$
\end_inset

 mit konstanter 
\begin_inset Formula $\left\Vert \varphi\right\Vert $
\end_inset

-Tiefe und polynomieller 
\begin_inset Formula $\left\Vert \varphi\right\Vert \left(2n+1\right)^{\mathtt{MF}\left(\varphi\right)}$
\end_inset

-Größe berechnet wird.
\end_layout

\begin_layout Proof
Sei 
\begin_inset Formula $n\in\mathbb{N}$
\end_inset

 beliebig und sei 
\begin_inset Formula $\rho:\left[0,n\right]\rightarrow\left[n+1,2n+1\right]$
\end_inset

 wie bisher definiert.
 Die Struktur 
\begin_inset Formula $\Upsilon\left(n\right)$
\end_inset

 wird zu 
\begin_inset Formula 
\[
\Upsilon'\left(n\right)=\rho\Upsilon'\left(n\right)=\left(\left[n+1,2n+1\right],\left(\rho R^{\Upsilon\left(n\right)}\right)_{R\in\eta}\right)
\]

\end_inset


\end_layout

\begin_layout Proof
Zunächst wird der 
\begin_inset Formula $\left(\sigma\cup\eta\cup\left\{ \leqslant\right\} ,\mathbb{B}_{\mathrm{std}}\right)$
\end_inset

-Schaltkreis 
\begin_inset Formula $\mathcal{C}_{2n+1}^{\varphi}$
\end_inset

 wie in Lemma 
\begin_inset CommandInset ref
LatexCommand ref
reference "lem:fo-ord"

\end_inset

 erzeugt.
\end_layout

\begin_layout Proof
Bei der Erzeugung des 
\begin_inset Formula $\left(\sigma,\mathbb{B}_{\mathrm{std}}\right)$
\end_inset

-Schaltkreises 
\begin_inset Formula $\dot{\mathcal{C}_{n}^{\varphi}}$
\end_inset

 wird nun der folgende Konstruktionsschritt hinzugefügt:
\end_layout

\begin_deeper
\begin_layout Case
Falls 
\begin_inset Formula $\Sigma\left(g\right)=R\bar{t}$
\end_inset

 mit 
\begin_inset Formula $R\in\eta$
\end_inset

, 
\begin_inset Formula $\mathrm{ar}\left(R\right)=k$
\end_inset

, und 
\begin_inset Formula $\bar{t}\in U'^{k}$
\end_inset

:
\begin_inset Formula 
\[
\dot{\Sigma}\left(g\right)=\begin{cases}
\mathbf{1} & \mathrm{falls}\,\,\bar{t}\in R^{\Upsilon'\left(n\right)}\subseteq\left[n+1,2n+1\right]^{k}\\
\mathbf{0} & \mathrm{sonst}
\end{cases}
\]

\end_inset


\end_layout

\begin_deeper
\begin_layout Description
Symmetrie: Wenn 
\begin_inset Formula $\dot{\Sigma}\left(g\right)=\mathbf{1}$
\end_inset

, dann gilt 
\begin_inset Formula $\bar{t}\in R^{\Upsilon'\left(n\right)}$
\end_inset

, und 
\begin_inset Formula $\pi'\left(\bar{t}\right)=\bar{t}$
\end_inset

 (weil 
\begin_inset Formula $\pi'_{\mid\left[n+1,2n+1\right]}=\mathbf{id}_{\mid\left[n+1,2n+1\right]}$
\end_inset

 ist).
 Daher ist 
\begin_inset Formula $\Sigma\left(\hat{\pi}g\right)=R\pi'\bar{t}=R\bar{t}$
\end_inset

, und somit gilt auch 
\begin_inset Formula $\dot{\Sigma}\left(\hat{\pi}g\right)=\mathbf{1}$
\end_inset

.
\end_layout

\end_deeper
\end_deeper
\begin_layout Proof
Hierbei ist zu beachten, dass die Relation 
\begin_inset Formula $R^{\Upsilon'\left(n\right)}$
\end_inset

 nicht in Polynomialzeit entscheidbar sein muss, und daher die so definierte
 Schaltkreisfamilie nicht mehr 
\begin_inset Formula $P$
\end_inset

-uniform ist.
\end_layout

\begin_layout Proof
Offensichtlich ist sie jedoch immer noch 
\begin_inset Formula $\mathrm{poly}\left(n\right)$
\end_inset

-groß und daher auch 
\begin_inset Formula $P/\mathrm{poly}$
\end_inset

-uniform.
\end_layout

\begin_layout Standard
\begin_inset Newpage pagebreak
\end_inset


\end_layout

\begin_layout Section
Fixpunktlogik
\end_layout

\begin_layout Standard
Die Fixpunktlogik 
\begin_inset Formula $\mathrm{LFP}\left[\sigma\right]$
\end_inset

 ist echt ausdrucksstärker als die Logik 
\begin_inset Formula $\mathrm{FO}\left[\sigma\right]$
\end_inset

.
 Beispielsweise ist die Erreichbarkeit über einen Pfad beliebiger Länge
 nicht erststufig definierbar 
\begin_inset CommandInset citation
LatexCommand cite
key "Immerman1982,Libkin2012"

\end_inset

.
 In 
\begin_inset Formula $\mathrm{LFP}\left[\left\{ E\right\} \right]$
\end_inset

 wird diese Klasse durch die folgende Formel definiert:
\begin_inset Formula 
\[
\varphi\left(u,v\right)\coloneqq\left[\mathrm{lfp}_{R,\left(x,y\right)}\,\left(\exists z\,\left(E\left(x,z\right)\wedge R\left(z,y\right)\right)\vee x=y\right)\right]\left(u,v\right)
\]

\end_inset

 Trotzdem kann jede 
\begin_inset Formula $\mathrm{LFP}\left[\sigma\right]$
\end_inset

-Formel 
\begin_inset Formula $\varphi$
\end_inset

 durch eine Familie von 
\begin_inset Formula $\mathrm{FO}\left[\sigma\right]$
\end_inset

-Formeln 
\begin_inset Formula $\left(\varphi_{n}\right)_{n\in\mathbb{N}}$
\end_inset

 mit einer konstanten Anzahl Variablen definiert werden, so dass 
\begin_inset Formula $\varphi_{n}$
\end_inset

 auf den Strukturen der Größe 
\begin_inset Formula $n$
\end_inset

 äquivalent zu 
\begin_inset Formula $\varphi$
\end_inset

 ist.
 Dies ist vergleichbar zum 
\begin_inset Formula $k$
\end_inset

-Variablen-Fragment der infinitären Logik 
\begin_inset Formula $L_{\infty\omega}^{k}$
\end_inset

, welches die Fixpunktlogik einschließt.
\begin_inset CommandInset citation
LatexCommand cite
key "Dawar1995c,Kolaitis1992,Kolaitis1992b"

\end_inset

 Hier hat jedoch jede einzelne Formel 
\begin_inset Formula $\varphi_{n}$
\end_inset

 eine endliche Länge.
\end_layout

\begin_layout Lemma
\begin_inset CommandInset label
LatexCommand label
name "lem:lfp-inf"

\end_inset

Für jede 
\begin_inset Formula $\mathrm{LFP}\left[\sigma\right]$
\end_inset

-Formel 
\begin_inset Formula $\varphi$
\end_inset

 mit 
\begin_inset Formula $\left\Vert \varphi\right\Vert =c$
\end_inset

 und jedes 
\begin_inset Formula $n\in\mathbb{N}$
\end_inset

 existiert eine 
\begin_inset Formula $\mathrm{FO}\left[\sigma\right]$
\end_inset

-Formel 
\begin_inset Formula $\hat{\varphi}$
\end_inset

 mit 
\begin_inset Formula $\left|\mathrm{var}\left(\varphi_{n}\right)\right|\leqslant2\left|\mathrm{var}\left(\varphi\right)\right|$
\end_inset

, so dass 
\begin_inset Formula $\models_{n}\left(\hat{\varphi}\leftrightarrow\varphi\right)$
\end_inset

.
\end_layout

\begin_layout Proof
Sei 
\begin_inset Formula $\varphi\left(\bar{x}\right)$
\end_inset

 eine 
\begin_inset Formula $k$
\end_inset

-stellige 
\begin_inset Formula $\mathrm{LFP}\left[\sigma\right]$
\end_inset

-Formel.
 Es wird induktiv über den Aufbau von 
\begin_inset Formula $\varphi$
\end_inset

 vorgegangen, wobei nur der Fall 
\begin_inset Formula $\varphi=\left[\mathrm{lfp}_{R,\bar{z}}\psi\right]\left(\bar{y}\right)$
\end_inset

 nicht-trivial ist.
\end_layout

\begin_layout Proof
Falls 
\begin_inset Formula $\varphi=\left[\mathrm{lfp}_{R,\bar{z}}\psi\right]\left(\bar{y}\right)$
\end_inset

 für eine 
\begin_inset Formula $k$
\end_inset

-stellige Relationsvariable 
\begin_inset Formula $R\in\mathbf{var}_{2}$
\end_inset

, 
\begin_inset Formula $\bar{z}\in\mathbf{var}^{k}$
\end_inset

, eine 
\begin_inset Formula $\mathrm{LFP}\left[\sigma\cup\left\{ R\right\} \right]$
\end_inset

-Formel 
\begin_inset Formula $\psi$
\end_inset

 und ein 
\begin_inset Formula $k$
\end_inset

-Tupel von 
\begin_inset Formula $\mathrm{LFP}\left[\sigma\right]$
\end_inset

-Termen 
\begin_inset Formula $\bar{y}\in\mathbf{var}^{k}$
\end_inset

, so existiert per Annahme eine 
\begin_inset Formula $\mathrm{FO}\left[\sigma\right]$
\end_inset

-Formel 
\begin_inset Formula $\hat{\psi}$
\end_inset

 mit 
\begin_inset Formula $\models_{n}\left(\hat{\psi}\leftrightarrow\psi\right)$
\end_inset

.
\end_layout

\begin_layout Proof
Sei 
\begin_inset Formula $\bar{u}\in\mathbf{var}^{k}\backslash\mathrm{frei}\left(\psi\right)$
\end_inset

 ein Tupel von Variablen, die nicht frei in 
\begin_inset Formula $\hat{\psi}$
\end_inset

 vorkommen.
 Sei die Sequenz 
\begin_inset Formula $\left(\psi_{i}\right)_{i\in\mathbb{N}}$
\end_inset

 induktiv wie folgt definiert:
\begin_inset Formula 
\begin{eqnarray*}
\psi^{0} & \coloneqq & \neg\bar{z}\dot{=}\bar{z}\\
\psi^{i+1} & \coloneqq & \hat{\psi}^{\left(\frac{R\bar{t}}{\chi^{i}\left(\bar{t}\right)}\right)}\\
\chi^{i}\left(\bar{t}\right) & \coloneqq & \exists\bar{u}\left(\bar{t}=\bar{u}\wedge\exists\bar{z}\left(\bar{u}=\bar{z}\wedge\psi^{i}\right)\right)
\end{eqnarray*}

\end_inset

Hierbei sei 
\begin_inset Formula $\hat{\psi}^{\left(\frac{R\bar{t}}{\chi^{i}\left(\bar{t}\right)}\right)}$
\end_inset

 die Formel, die aus 
\begin_inset Formula $\hat{\psi}$
\end_inset

 entsteht, indem jedes Atom 
\begin_inset Formula $R\bar{t}$
\end_inset

 (für irgendein 
\begin_inset Formula $\bar{t}\in\mathbf{var}^{k}$
\end_inset

) durch 
\begin_inset Formula $\chi^{i}\left(\bar{t}\right)$
\end_inset

 ersetzt wird.
 (Der Zwischenschritt über 
\begin_inset Formula $\bar{u}$
\end_inset

 ist notwendig, weil 
\begin_inset Formula $\bar{t}$
\end_inset

 und 
\begin_inset Formula $\bar{z}$
\end_inset

 zum Teil die gleichen Variablen enthalten können, und daher ihr Geltungsbereich
 nicht überlappen darf.)
\end_layout

\begin_layout Proof
Nun gelte:
\begin_inset Formula 
\[
\hat{\varphi}\coloneqq\exists\bar{z}\left(\bar{x}=\bar{z}\wedge\psi^{n^{k}}\right)
\]

\end_inset


\end_layout

\begin_deeper
\begin_layout Description
Korrektheit: Sei 
\begin_inset Formula $F:2^{A^{k}}\rightarrow2^{A^{k}}$
\end_inset

 wie in Definition 
\begin_inset CommandInset ref
LatexCommand ref
reference "def:lfp"

\end_inset

 definiert.
 Außerdem sei 
\begin_inset Formula $\left(X_{i}\right)_{i\in\mathbb{N}}$
\end_inset

 wie folgt: 
\begin_inset Formula 
\[
X_{i}\coloneqq\left\{ \bar{a}\in A^{k}\mid\mathfrak{A}\models\psi^{i}\left[\bar{a}\right]\right\} 
\]

\end_inset

Wir weisen induktiv nach, dass 
\begin_inset Formula $X_{i}=F^{i}\left(\emptyset\right)$
\end_inset

.
\end_layout

\begin_deeper
\begin_layout Itemize
\begin_inset Formula $\psi^{0}=\neg\bar{x}\dot{=}\bar{x}$
\end_inset

 ist offensichtlich unerfüllbar, und erkennt daher die Relation 
\begin_inset Formula $X_{0}=\emptyset=F^{0}\left(\emptyset\right)$
\end_inset

.
\end_layout

\begin_layout Itemize
Sei 
\begin_inset Formula $i\in\mathbb{N}$
\end_inset

 beliebig:
\begin_inset Formula 
\begin{eqnarray*}
\bar{a}\in X_{i+1} & \Leftrightarrow & \mathfrak{A}\models\psi^{i+1}\left[\bar{a}\right]\\
 & \Leftrightarrow & \mathfrak{A}\models\hat{\psi}^{\left(\frac{R\bar{z}}{\chi^{i}\left(\bar{z}\right)}\right)}\left[\bar{a}\right]
\end{eqnarray*}

\end_inset

Per Definition gilt: 
\begin_inset Formula 
\[
X_{i}\coloneqq\left\{ \bar{a}\mid\mathfrak{A}\models\psi^{i+1}\left[\bar{a}\right]\right\} =\left\{ \bar{a}\mid\mathfrak{A}\models\chi^{i}\left[\bar{a}\right]\right\} 
\]

\end_inset

Und daher:
\begin_inset Formula 
\begin{eqnarray*}
\bar{a}\in X_{i+1} & \Leftrightarrow & \mathfrak{A}\cup\left(A,\left(\begin{array}{c}
R\\
X_{i}
\end{array}\right)\right)\models\hat{\psi}\left[\bar{a}\right]\\
 & \overset{\mathrm{Ann.}}{\Leftrightarrow} & \mathfrak{A}\cup\left(A,\left(\begin{array}{c}
R\\
F^{i}\left(\emptyset\right)
\end{array}\right)\right)\models\hat{\psi}\left[\bar{a}\right]\\
 & \overset{\mathrm{Def.\ref{def:lfp}}}{\Leftrightarrow} & \bar{a}\in F^{i+1}\left(\emptyset\right)
\end{eqnarray*}

\end_inset


\end_layout

\begin_layout Standard
Schließlich folgt 
\begin_inset Formula $X_{n^{k}}=F^{n^{k}}\left(\emptyset\right)=F^{\infty}\left(\emptyset\right)$
\end_inset

, da 
\begin_inset Formula $\left|F^{\infty}\left(\emptyset\right)\right|\leqslant n^{k}$
\end_inset

.
 Daher gilt:
\begin_inset Formula 
\begin{eqnarray*}
\left\llbracket \hat{\varphi}\right\rrbracket \left(\mathfrak{A},\bar{a}\right) & = & \left\llbracket \exists\bar{u}\left(\bar{u}=\bar{y}\wedge\psi^{n^{k}}\right)\right\rrbracket \left(\mathfrak{A},\bar{a}\right)\\
 & = & \left\llbracket R\bar{y}\right\rrbracket \left(\mathfrak{A}\cup\left(A,\left(\begin{array}{c}
R\\
F^{\infty}\left(\emptyset\right)
\end{array}\right)\right),\bar{a}\right)\\
 & \overset{\mathrm{Def.\ref{def:lfp}}}{=} & \left\llbracket \left[\mathrm{lfp}_{R,\bar{z}}\psi\right]\left(\bar{y}\right)\right\rrbracket \left(\mathfrak{A},\bar{a}\right)=\left\llbracket \varphi\right\rrbracket \left(\mathfrak{A},\bar{a}\right)
\end{eqnarray*}

\end_inset


\end_layout

\end_deeper
\end_deeper
\begin_layout Standard
Leider sind diese Formeln zu 
\emph on
lang
\emph default
: Wenn das Symbol 
\begin_inset Formula $R$
\end_inset

 mehr als einmal in 
\begin_inset Formula $\psi$
\end_inset

 vorkommt, ist 
\begin_inset Formula $\left\Vert \psi_{i+1}\right\Vert \geqslant2\left\Vert \psi_{i}\right\Vert $
\end_inset

, und daher 
\begin_inset Formula $\left\Vert \varphi\right\Vert \geqslant2^{n^{k}}$
\end_inset

 für 
\begin_inset Formula $k=\mathrm{ar}\left(R\right)$
\end_inset

.
 Für 
\begin_inset Formula $\mathcal{C}_{n}^{\varphi}=\mathcal{C}_{n}^{\varphi_{n}}$
\end_inset

 könnten wir daher nicht die gewünschte 
\begin_inset Formula $\mathrm{poly}\left(n\right)$
\end_inset

-Größe ableiten.
\end_layout

\begin_layout Standard
Die booleschen Schaltkreise haben jedoch nicht dieselbe Einschränkung wie
 
\begin_inset Formula $\mathrm{FO}\left[\sigma\right]$
\end_inset

: Die Berechnung einer Teilformel 
\begin_inset Formula $\psi_{i}\left(\bar{z}\right)$
\end_inset

 kann wiederverwendet werden, ohne den Schaltkreis 
\begin_inset Formula $\mathcal{C}_{n}^{\psi_{i}}$
\end_inset

 zu vervielfältigen.
\end_layout

\begin_layout Standard
Wir nutzen dies und den Beweis von Lemma 
\begin_inset CommandInset ref
LatexCommand ref
reference "lem:lfp-inf"

\end_inset

 aus, um aus einer 
\begin_inset Formula $\mathrm{LFP}\left[\sigma\right]$
\end_inset

-Formel 
\begin_inset Formula $\varphi$
\end_inset

 direkt einen 
\begin_inset Formula $\left(\sigma,\mathbb{B}_{\mathrm{std}}\right)$
\end_inset

-Schaltkreis zu erzeugen, der die richtige Tiefe und Größe hat.
 Hierbei wird der Einfachheit halber gefordert, dass 
\begin_inset Formula $\varphi$
\end_inset

 parameter-frei ist (siehe Definition 
\begin_inset CommandInset ref
LatexCommand ref
reference "def:fp-param"

\end_inset

).
 Per Satz 
\begin_inset CommandInset ref
LatexCommand ref
reference "prop:fp-param"

\end_inset

 schränkt dies die Allgemeinheit nicht ein: Der Zuwachs in 
\begin_inset Formula $\mathrm{var}\left(\varphi\right)$
\end_inset

 und 
\begin_inset Formula $\left\Vert \varphi\right\Vert $
\end_inset

 ist fest und für die 
\begin_inset Formula $\mathrm{poly}\left(n\right)$
\end_inset

-Größe der Schaltkreisfamilie unbedeutend.
\end_layout

\begin_layout Lemma
\begin_inset CommandInset label
LatexCommand label
name "lem:lfp-circ"

\end_inset

Für jede parameter-freie 
\begin_inset Formula $\mathrm{LFP}\left[\sigma\right]$
\end_inset

-Formel 
\begin_inset Formula $\varphi$
\end_inset

 existiert eine 
\begin_inset Formula $P$
\end_inset

-uniforme symmetrische 
\begin_inset Formula $\left(\sigma,\mathbb{B}_{\mathrm{std}}\right)$
\end_inset

-Schaltkreisfamilie 
\begin_inset Formula $\bar{\mathcal{C}^{\varphi}}$
\end_inset

 mit 
\begin_inset Formula $n^{k}\left(\left\Vert \varphi\right\Vert +1\right)$
\end_inset

-Tiefe und 
\begin_inset Formula $\left(n^{k+\mathtt{MF}\left(\varphi\right)}+1\right)$
\end_inset

-Größe, so dass 
\begin_inset Formula $q_{\bar{\mathcal{C}^{\varphi}}}\left(\mathfrak{A}\right)=q_{\varphi}\left(\mathfrak{A}\right)$
\end_inset

 für alle 
\begin_inset Formula $\mathfrak{A}\in\mathbf{FIN}\left(\sigma\right)$
\end_inset

 gilt.
\end_layout

\begin_layout Proof
Sei 
\begin_inset Formula $\varphi\left(\bar{x}\right)$
\end_inset

 eine 
\begin_inset Formula $k$
\end_inset

-stellige parameter-freie 
\begin_inset Formula $\mathrm{LFP}\left[\sigma\right]$
\end_inset

-Formel.
 Sei 
\begin_inset Formula $n\in\mathbb{N}$
\end_inset

 beliebig.
 Wir erweitern die Konstruktion aus Lemma 
\begin_inset CommandInset ref
LatexCommand ref
reference "lem:FO-Circuit"

\end_inset

 um den folgenden Fall:
\end_layout

\begin_layout Proof
Sei 
\begin_inset Formula $\varphi\left(\bar{x}\right)=\left[\mathrm{lfp}_{R,\bar{z}}\psi\right]\left(\bar{y}\right)$
\end_inset

 für eine 
\begin_inset Formula $m$
\end_inset

-stellige Relationsvariable 
\begin_inset Formula $R/m\in\mathbf{var}_{2}$
\end_inset

, eine 
\begin_inset Formula $m$
\end_inset

-stellige parameter-freie 
\begin_inset Formula $\mathrm{LFP}\left[\sigma\cup\left\{ R\right\} \right]$
\end_inset

-Formel 
\begin_inset Formula $\psi\left(\bar{z}\right)$
\end_inset

 und ein 
\begin_inset Formula $m$
\end_inset

-Tupel von 
\begin_inset Formula $\mathrm{LFP}\left[\sigma\right]$
\end_inset

-Termen 
\begin_inset Formula $\bar{y}$
\end_inset

.
\end_layout

\begin_layout Proof
Per Annahme existiert ein 
\begin_inset Formula $P$
\end_inset

-uniformer symmetrischer 
\begin_inset Formula $\left(\sigma\cup\left\{ R\right\} ,\mathbb{B}_{\mathrm{std}}\right)$
\end_inset

-Schaltkreis 
\begin_inset Formula $\mathcal{C}_{n}^{\psi}$
\end_inset

, der auf den erweiterten 
\begin_inset Formula $\left(\sigma\cup\left\{ R\right\} \right)$
\end_inset

-Strukturen 
\begin_inset Formula $\mathfrak{A}\in\mathbf{FIN}^{\left(n\right)}\left(\sigma\cup\left\{ R\right\} \right)$
\end_inset

 die Anfrage 
\begin_inset Formula $q_{\mathcal{C}_{n}^{\psi}}\left(\mathfrak{A}\right)=q_{\psi}\left(\mathfrak{A}\right)$
\end_inset

 berechnet.
\begin_inset Formula 
\[
\mathcal{C}_{n}^{\psi}=\left(G_{\psi},W_{\psi},\Sigma_{\psi},\Omega_{\psi},U\right)
\]

\end_inset


\end_layout

\begin_deeper
\begin_layout Description
Schaltkreis: Es wird eine Sequenz 
\begin_inset Formula $\left(\mathcal{D}^{i}\right)_{i\in\mathbb{N}}$
\end_inset

 von 
\begin_inset Formula $k$
\end_inset

-stelligen 
\begin_inset Formula $\left(\sigma,\mathbb{B}_{\mathrm{std}}\right)$
\end_inset

-Schaltkreisen definiert.
\begin_inset Formula 
\[
\mathcal{D}^{i}\coloneqq\left(G_{i},W_{i},\Sigma_{i},\Omega_{i},U\right)
\]

\end_inset

 Für 
\begin_inset Formula $i=0$
\end_inset

 nehmen wir nur eine 
\begin_inset Formula $\mathbf{0}$
\end_inset

-Konstante:
\begin_inset Formula 
\begin{eqnarray*}
\mathcal{D}^{0} & \coloneqq & \left(\left\{ g_{0}\right\} ,\emptyset,\Sigma_{0},\Omega_{0},U\right)\\
\Sigma_{0}\left(g_{0}\right)=\mathbf{0} &  & \Omega\left(\bar{t}\right)=g_{0}
\end{eqnarray*}

\end_inset

Für 
\begin_inset Formula $i\in\mathbb{N}_{\geqslant1}$
\end_inset

 fügen wir eine neue Kopie von 
\begin_inset Formula $\mathcal{C}_{n}^{\psi}$
\end_inset

 in 
\begin_inset Formula $\mathcal{D}^{i}$
\end_inset

 ein:
\begin_inset Formula 
\begin{eqnarray*}
G_{i+1} & \coloneqq & G_{i}\uplus G_{\psi}\\
W_{i+1} & \coloneqq & W_{i}\uplus W_{\psi}\uplus W'
\end{eqnarray*}

\end_inset


\begin_inset Formula $\mathcal{D}^{i}$
\end_inset

 verbindet alle mit 
\begin_inset Formula $R\bar{t}$
\end_inset

 markierten Inputs mit dem Output 
\begin_inset Formula $\Omega_{i}\left(\bar{t}\right)$
\end_inset

, und markiert sie mit 
\begin_inset Quotes gld
\end_inset


\begin_inset Formula $\mathtt{AND}$
\end_inset


\begin_inset Quotes grd
\end_inset

.
 (Hier wäre 
\begin_inset Quotes gld
\end_inset


\begin_inset Formula $\mathtt{OR}$
\end_inset


\begin_inset Quotes grd
\end_inset

 äquivalent, da jedes dieser Gates nur einen Vorgänger bekommt.) 
\begin_inset Formula 
\[
\Sigma_{i+1}\left(g\right)\coloneqq\begin{cases}
\Sigma_{i}\left(g\right) & \mathrm{falls}\,\,g\in G_{i}\\
\mathtt{AND} & \mathrm{falls}\,\,g\in G_{\psi},\,\Sigma_{\psi}\left(g\right)=R\bar{t}\\
\Sigma_{\psi}\left(g\right) & \mathrm{sonst}
\end{cases}
\]

\end_inset


\begin_inset Formula 
\[
W'\coloneqq\left\{ \left(\Omega_{i}\left(\bar{t}\right),g\right)\mid g\in G_{\psi},\,\Sigma_{\psi}\left(g\right)=R\bar{t}\right\} 
\]

\end_inset

Die Outputs von 
\begin_inset Formula $\mathcal{C}_{n}^{\psi}$
\end_inset

 werden zu den Outputs von 
\begin_inset Formula $\mathcal{D}^{i+1}$
\end_inset

: 
\begin_inset Formula 
\[
\Omega_{i+1}=\Omega_{\psi}
\]

\end_inset

Schließlich sei 
\begin_inset Formula $\mathcal{C}_{n}^{\varphi}\coloneqq\mathcal{D}^{n^{k}}$
\end_inset

.
\end_layout

\begin_layout Description
Korrektheit: Es wird induktiv bewiesen, dass 
\begin_inset Formula $\mathcal{D}^{i}$
\end_inset

 auf 
\begin_inset Formula $\mathfrak{A}\in\mathbf{FIN}\left(\sigma\right)$
\end_inset

 die 
\begin_inset Formula $\sigma$
\end_inset

-Anfrage 
\begin_inset Formula $q_{\mathcal{D}^{i}}\left(\mathfrak{A}\right)=F^{i}\left(\emptyset\right)$
\end_inset

 berechnet.
 Der Beweis funktioniert analog zu dem von Lemma 
\begin_inset CommandInset ref
LatexCommand ref
reference "lem:lfp-inf"

\end_inset

:
\begin_inset Formula 
\[
q_{\mathcal{D}^{0}}\left(\mathfrak{A}\right)=F^{0}\left(\emptyset\right)=\emptyset
\]

\end_inset


\begin_inset Formula 
\begin{eqnarray*}
q_{\mathcal{D}^{i+1}}\left(\mathfrak{A}\right) & = & q_{\mathcal{C}_{n}^{\psi}}\left(\mathfrak{A}\cup\left(A,\left(\begin{array}{c}
R\\
q_{\mathcal{D}^{i}}\left(\mathfrak{A}\right)
\end{array}\right)\right)\right)\\
 & \overset{\mathrm{Ann.}}{=} & q_{\mathcal{C}_{n}^{\psi}}\left(\mathfrak{A}\cup\left(A,\left(\begin{array}{c}
R\\
F^{i}\left(\emptyset\right)
\end{array}\right)\right)\right)\\
 & = & q_{\psi}\left(\mathfrak{A}\cup\left(A,\left(\begin{array}{c}
R\\
F^{i}\left(\emptyset\right)
\end{array}\right)\right)\right)\\
 & \overset{\mathrm{Def.\ref{def:lfp}}}{=} & F^{i+1}\left(\emptyset\right)
\end{eqnarray*}

\end_inset

Daher berechnet 
\begin_inset Formula $\mathcal{C}_{n}^{\varphi}=\mathcal{D}^{n^{k}}$
\end_inset

 die Anfrage 
\begin_inset Formula $q_{\mathcal{C}_{n}^{\varphi}}\left(\mathfrak{A}\right)=F^{n^{k}}\left(\emptyset\right)=F^{\infty}\left(\emptyset\right)$
\end_inset

.
\end_layout

\begin_layout Description
Symmetrie: Sei 
\begin_inset Formula $\pi\in\mathrm{Sym}_{U}$
\end_inset

 beliebig.
 Per Annahme ist 
\begin_inset Formula $\mathcal{C}_{n}^{\psi}$
\end_inset

 symmetrisch, also existiert der Automorphismus 
\begin_inset Formula $\hat{\pi}$
\end_inset

.
 Es sei für 
\begin_inset Formula $i\in\mathbb{N}$
\end_inset

 der Automorphismus 
\begin_inset Formula $\hat{\pi_{i}}$
\end_inset

 wie folgt:
\begin_inset Formula 
\begin{eqnarray*}
\hat{\pi}_{0} & \coloneqq & \left(\begin{array}{c}
g_{0}\\
g_{0}
\end{array}\right)\\
\hat{\pi}_{i+1}\left(g\right) & \coloneqq & \begin{cases}
\hat{\pi}_{i}\left(g\right) & \mathrm{falls}\,g\in G_{i}\\
\hat{\pi}\left(g\right) & \mathrm{sonst}
\end{cases}
\end{eqnarray*}

\end_inset

Per Annahme sei 
\begin_inset Formula $\hat{\pi}_{i}$
\end_inset

 ein von 
\begin_inset Formula $\pi$
\end_inset

 induzierter Automorphismus in 
\begin_inset Formula $\mathcal{D}^{i}$
\end_inset

.
 So gilt in 
\begin_inset Formula $\mathcal{D}^{i+1}$
\end_inset

:
\end_layout

\begin_deeper
\begin_layout Enumerate
\begin_inset Formula $\left(\hat{\pi}_{i+1}\right)_{\mid G_{i}}=\hat{\pi}_{i}$
\end_inset

, und 
\begin_inset Formula $\left(\hat{\pi}_{i+1}\right)_{\mid G_{\psi}}=\hat{\pi}$
\end_inset

; damit sind die Bedingungen für 
\begin_inset Formula $W_{i}\cup W_{\psi}$
\end_inset

, 
\begin_inset Formula $\Sigma_{i}$
\end_inset

, 
\begin_inset Formula $\Omega_{i+1}=\Omega_{\psi}$
\end_inset

 und alle Gates 
\begin_inset Formula $g\in G_{\psi}$
\end_inset

 mit 
\begin_inset Formula $\Sigma_{\psi}\notin\left\{ R\bar{t}\mid\bar{t}\in U^{m}\right\} $
\end_inset

 bereits erfüllt.
\end_layout

\begin_layout Enumerate
Für die ehemaligen Inputs mit 
\begin_inset Formula $\Sigma\left(g\right)=R\bar{t}$
\end_inset

 gilt 
\begin_inset Formula $\Sigma_{i+1}\left(\hat{\pi}g\right)=\Sigma_{i+1}\left(g\right)=\mathtt{AND}$
\end_inset

.
\end_layout

\begin_layout Enumerate
Für jede neue Kante 
\begin_inset Formula $\left(\Omega_{i}\left(\bar{t}\right),g\right)\in W'$
\end_inset

 mit 
\begin_inset Formula $g\in G_{\psi}$
\end_inset

 und 
\begin_inset Formula $\Sigma_{\psi}\left(g\right)=R\bar{t}$
\end_inset

: 
\begin_inset Formula 
\begin{eqnarray*}
\left(\hat{\pi}_{i+1}\Omega_{i}\left(\bar{t}\right),\hat{\pi}_{i+1}g\right) & = & \left(\hat{\pi}_{i}\Omega_{i}\left(\bar{t}\right),\hat{\pi}g\right)\\
 & = & \left(\Omega_{i}\left(\pi\bar{t}\right),\hat{\pi}g\right)
\end{eqnarray*}

\end_inset

Per Definition ist 
\begin_inset Formula $\Sigma_{\psi}\left(\hat{\pi}g\right)=R\pi\bar{t}$
\end_inset

, und daher:
\begin_inset Formula 
\[
\left(\Omega_{i}\left(\pi\bar{t}\right),\hat{\pi}g\right)\in W'
\]

\end_inset


\end_layout

\begin_layout Standard
Daher ist 
\begin_inset Formula $\mathcal{D}^{i+1}$
\end_inset

 ebenfalls symmetrisch, und es folgt die Symmetrie von 
\begin_inset Formula $\mathcal{C}_{n}^{\varphi}=\mathcal{D}^{n^{k}}$
\end_inset

.
\end_layout

\end_deeper
\begin_layout Description
Größe: Es wird induktiv bewiesen, dass 
\begin_inset Formula $T\left(\mathcal{D}^{i}\right)\leqslant\left(\left\Vert \psi\right\Vert +1\right)i$
\end_inset

, und 
\begin_inset Formula $\left|\mathcal{D}^{i}\right|\leqslant i\cdot n^{\mathtt{MF}\left(\psi\right)}+1$
\end_inset

 
\begin_inset Formula 
\begin{eqnarray*}
T\left(\mathcal{D}^{0}\right) & = & 0\\
T\left(\mathcal{D}^{i+1}\right) & = & T\left(\mathcal{D}^{i}\right)+T\left(\mathcal{C}_{n}^{\psi}\right)+1\\
 & \leqslant & T\left(\mathcal{D}^{i}\right)+\left\Vert \psi\right\Vert +1\\
 & \overset{\mathrm{Ann.}}{\leqslant} & \left(\left\Vert \psi\right\Vert +1\right)i+\left\Vert \psi\right\Vert +1=\left(\left\Vert \varphi\right\Vert +1\right)\left(i+1\right)
\end{eqnarray*}

\end_inset


\begin_inset Formula 
\begin{eqnarray*}
\left|\mathcal{D}^{0}\right| & = & 1\\
\left|\mathcal{D}^{i+1}\right| & = & \left|\mathcal{D}^{i}\right|+\left|\mathcal{C}_{n}^{\psi}\right|\\
 & \leqslant & \left|\mathcal{D}^{i}\right|+n^{\mathtt{MF}\left(\psi\right)}\\
 & \overset{\mathrm{Ann.}}{\leqslant} & i\cdot n^{\mathtt{MF}\left(\psi\right)}+1+n^{\mathtt{MF}\left(\psi\right)}=\left(i+1\right)\cdot n^{\mathtt{MF}\left(\psi\right)}+1
\end{eqnarray*}

\end_inset

Damit gilt 
\begin_inset Formula $T\left(\mathcal{C}_{n}^{\varphi}\right)=T\left(\mathcal{D}^{n^{k}}\right)\leqslant n^{k}\left(\left\Vert \varphi\right\Vert +1\right)$
\end_inset

 und 
\begin_inset Formula $\left|\mathcal{C}_{n}^{\varphi}\right|=\left|\mathcal{D}^{n^{k}}\right|=n^{k+\mathtt{MF}\left(\varphi\right)}+1$
\end_inset

.
\end_layout

\end_deeper
\begin_layout Chapter
Partitionen und Träger
\end_layout

\begin_layout Standard
Es werden nun mehrere Begriffe aus der Gruppentheorie eingeführt, mit deren
 Hilfe wir eine symmetrische Schaltkreisfamilie logisch beschreiben werden.
\end_layout

\begin_layout Section
Partitionen
\end_layout

\begin_layout Standard
Sei 
\begin_inset Formula $U$
\end_inset

 ein beliebiges Universum.
\end_layout

\begin_layout Definition
Eine 
\series bold
Partition
\series default
 
\begin_inset Formula $\mathcal{P}$
\end_inset

 von 
\begin_inset Formula $U$
\end_inset

 sei eine Menge 
\begin_inset Formula $\mathcal{P}=\left\{ P_{1},\cdots,P_{k}\right\} $
\end_inset

 von disjunkten nicht-leeren Teilmengen 
\begin_inset Formula $P_{i}\subseteq U$
\end_inset

, so dass 
\begin_inset Formula $U=\biguplus_{i=1}^{k}P_{i}$
\end_inset

.
 Die Menge aller Partitionen von 
\begin_inset Formula $U$
\end_inset

 sei 
\begin_inset Formula $\mathrm{Part}_{U}$
\end_inset

.
\end_layout

\begin_layout Definition
Die Partition 
\begin_inset Formula $\mathcal{P}$
\end_inset

 induziert eine Äquivalenzrelation 
\begin_inset Formula $\sim_{\mathcal{P}}$
\end_inset

 auf 
\begin_inset Formula $U$
\end_inset

, wobei 
\begin_inset Formula $x\sim_{\mathcal{P}}y$
\end_inset

 genau dann wenn 
\begin_inset Formula $\left\{ x,y\right\} \subseteq P$
\end_inset

 für irgendein 
\begin_inset Formula $P\in\mathcal{P}$
\end_inset

.
\end_layout

\begin_layout Definition
Die Permutationen aus 
\begin_inset Formula $\mathrm{Sym}_{U}$
\end_inset

 werden auf natürliche Weise auf 
\begin_inset Formula $\mathcal{P}$
\end_inset

 erweitert.
 
\begin_inset Formula $\pi\mathcal{P}$
\end_inset

 ist ebenfalls eine Partition von 
\begin_inset Formula $U$
\end_inset

:
\begin_inset Formula 
\begin{eqnarray*}
\pi\mathcal{P} & \coloneqq & \left\{ \pi P_{i}\mid P_{i}\in\mathcal{P}\right\} \\
 & \coloneqq & \left\{ \left\{ \pi x\mid x\in P_{i}\right\} \mid P_{i}\in\mathcal{P}\right\} 
\end{eqnarray*}

\end_inset


\end_layout

\begin_layout --Separator--

\end_layout

\begin_layout Definition
\begin_inset CommandInset label
LatexCommand label
name "def:feinheit"

\end_inset

Die 
\series bold
Feinheit 
\series default
der Partitionen von 
\begin_inset Formula $U$
\end_inset

 sei eine Relation 
\begin_inset Formula $\preceq$
\end_inset

, so dass 
\begin_inset Formula $\mathcal{P}\preceq\mathcal{P}'$
\end_inset

 (
\begin_inset Quotes gld
\end_inset


\begin_inset Formula $\mathcal{P}$
\end_inset

 ist feiner als 
\begin_inset Formula $\mathcal{P}'$
\end_inset


\begin_inset Quotes grd
\end_inset

) genau dann wenn jedes 
\begin_inset Formula $P_{i}\in\mathcal{P}$
\end_inset

 eine Teilmenge eines 
\begin_inset Formula $P'_{j}\in\mathcal{P}'$
\end_inset

 ist.
\end_layout

\begin_layout Definition
Dies ist äquivalent zu der Teilmengenbeziehung von 
\begin_inset Formula $\sim$
\end_inset

: 
\begin_inset Formula 
\begin{eqnarray*}
\mathcal{P}\preceq\mathcal{P}' & \Leftrightarrow & \mathrm{für\,alle}\,P\in\mathcal{P}\,\mathrm{existiert\,}P'\in\mathcal{P}'\,\mathrm{so\,dass}\,P\subseteq P'\\
 & \Leftrightarrow & \mathrm{für\,alle}\,u,u'\in U\,\mathrm{gilt}\,u\sim_{\mathcal{P}}u'\,\Rightarrow u\sim_{\mathcal{P}'}u'\\
 & \Leftrightarrow & \left(\sim_{\mathcal{P}}\right)\subseteq\left(\sim_{\mathcal{P}'}\right)
\end{eqnarray*}

\end_inset


\end_layout

\begin_layout Definition
Die Relation 
\begin_inset Formula $\preceq$
\end_inset

 ist eine Halbordnung auf 
\begin_inset Formula $\mathrm{Part}_{U}$
\end_inset

: Sie ist offensichtlich reflexiv, transitiv und anti-symmetrisch (jedoch
 nicht vollständig).
\end_layout

\begin_layout Definition
Daher bilden die Partitionen von 
\begin_inset Formula $U$
\end_inset

 einen vollständigen Verband
\begin_inset CommandInset citation
LatexCommand cite
key "Klein-Barmen1935"

\end_inset

 mit den Infimum- und Supremum-Operationen 
\begin_inset Formula $\sqcap$
\end_inset

 und 
\begin_inset Formula $\sqcup$
\end_inset

:
\begin_inset Formula 
\begin{eqnarray*}
\mathcal{A}\sqcap\mathcal{B} & \coloneqq & \max_{\preceq}\left\{ \mathcal{P}\in\mathrm{Part}_{U}\mid\mathcal{P}\preceq\mathcal{A}\,\mathrm{und}\,\mathcal{P}\preceq\mathcal{B}\right\} \\
\mathcal{A}\sqcup\mathcal{B} & \coloneqq & \min_{\preceq}\left\{ \mathcal{P}\in\mathrm{Part}_{U}\mid\mathcal{A}\preceq\mathcal{P}\,\mathrm{und}\,\mathcal{B}\preceq\mathcal{P}\right\} 
\end{eqnarray*}

\end_inset


\end_layout

\begin_layout Definition
(
\begin_inset Formula $\mathcal{A}\sqcap\mathcal{B}$
\end_inset

 sei die gröbste feinere Partition als 
\begin_inset Formula $\mathcal{A}$
\end_inset

 und 
\begin_inset Formula $\mathcal{B}$
\end_inset

, und 
\begin_inset Formula $\mathcal{A}\sqcup\mathcal{B}$
\end_inset

 die feinste gröbere Partition als 
\begin_inset Formula $\mathcal{A}$
\end_inset

 und 
\begin_inset Formula $\mathcal{B}$
\end_inset

.)
\end_layout

\begin_layout Fact
Wenn 
\begin_inset Formula $\left[x\right]_{\sim}$
\end_inset

 die Äquivalenzklasse 
\begin_inset Formula $\left\{ y\mid x\sim y\right\} $
\end_inset

 ist, dann gilt: 
\begin_inset Formula 
\begin{eqnarray*}
\mathcal{A}\sqcap\mathcal{B}=\mathcal{P}_{1} & \coloneqq & \left\{ \left[x\right]_{\sim_{\mathcal{A}}\cap\sim_{\mathcal{B}}}\mid x\in U\right\} \\
\mathcal{A}\sqcup\mathcal{B}=\mathcal{P}_{2} & \coloneqq & \left\{ \left[x\right]_{\sim^{*}}\mid x\in U\right\} \\
 &  & \mathrm{wobei}\,\sim\coloneqq\left(\sim_{\mathcal{A}}\right)\cup\left(\sim_{\mathcal{B}}\right)
\end{eqnarray*}

\end_inset


\end_layout

\begin_layout Standard
Die Eigenschaft 
\begin_inset Formula $\mathcal{P}_{1}\preceq\mathcal{A},\mathcal{B}\preceq\mathcal{P}_{2}$
\end_inset

 folgt offensichtlich aus 
\begin_inset Formula $\left(\sim_{\mathcal{A}}\cap\sim_{\mathcal{B}}\right)\subseteq\sim_{\mathcal{A}},\sim_{\mathcal{B}}\subseteq\left(\sim_{\mathcal{A}}\cup\sim_{\mathcal{B}}\right)^{*}$
\end_inset

.
 Ferner muss jede Relation 
\begin_inset Formula $\sim_{\mathcal{P}}$
\end_inset

 mit 
\begin_inset Formula $\left(\sim_{\mathcal{P}}\right)\subseteq\left(\sim_{\mathcal{A}}\right)$
\end_inset

 und 
\begin_inset Formula $\left(\sim_{\mathcal{A}}\right)\subseteq\left(\sim_{\mathcal{B}}\right)$
\end_inset

 auch in 
\begin_inset Formula $\left(\sim_{\mathcal{A}}\right)\cap\left(\sim_{\mathcal{B}}\right)$
\end_inset

 enthalten sein, und jede mit 
\begin_inset Formula $\left(\sim_{\mathcal{P}}\right)\supseteq\left(\sim_{\mathcal{A}}\right)$
\end_inset

, 
\begin_inset Formula $\left(\sim_{\mathcal{P}}\right)\supseteq\left(\sim_{\mathcal{B}}\right)$
\end_inset

 muss auch 
\begin_inset Formula $\left(\sim_{\mathcal{A}}\right)\cup\left(\sim_{\mathcal{B}}\right)$
\end_inset

 (und dessen Abschluss) enthalten.
\end_layout

\begin_layout Definition
Die feinste und gröbste Partition von 
\begin_inset Formula $U$
\end_inset

 seien 
\begin_inset Formula $\mathcal{P}_{\min}\left(U\right)\coloneqq\left\{ \left\{ u_{1}\right\} ,\cdots,\left\{ u_{n}\right\} \right\} $
\end_inset

 und 
\begin_inset Formula $\mathcal{P}_{\max}\left(U\right)\coloneqq\left\{ U\right\} $
\end_inset

.
\end_layout

\begin_layout Standard
\begin_inset Newpage pagebreak
\end_inset


\end_layout

\begin_layout Section
Stabilisatoren
\end_layout

\begin_layout Definition
Sei 
\begin_inset Formula $x\in U$
\end_inset

.
 Der 
\series bold
Stabilisator
\series default
 von 
\begin_inset Formula $x$
\end_inset

 in 
\begin_inset Formula $U$
\end_inset

 sei die Untergruppe 
\begin_inset Formula $\mathrm{Stab}_{U}\left(x\right)\subseteq\mathrm{Sym}_{U}$
\end_inset

 aller Permutationen, die 
\begin_inset Formula $x$
\end_inset

 fixieren: 
\begin_inset Formula 
\[
\mathrm{Stab}_{U}\left(x\right)\coloneqq\left\{ \pi\in\mathrm{Sym}_{U}\mid\pi x=x\right\} 
\]

\end_inset


\end_layout

\begin_layout --Separator--

\end_layout

\begin_layout Definition
Die letzte Definition wird auf Teilmengen von 
\begin_inset Formula $U$
\end_inset

 erweitert.
 Sei 
\begin_inset Formula $X\subseteq U$
\end_inset

:
\end_layout

\begin_deeper
\begin_layout Itemize
Der 
\series bold
Punktstabilisator 
\series default
von 
\begin_inset Formula $X$
\end_inset

 in 
\begin_inset Formula $U$
\end_inset

 sei die Untergruppe 
\begin_inset Formula $\mathrm{Stab}_{U}\left(X\right)\subseteq\mathrm{Sym}_{U}$
\end_inset

 der Permutationen die jedes Element 
\begin_inset Formula $x\in X$
\end_inset

 fixieren:
\begin_inset Formula 
\[
\mathrm{Stab}_{U}\left(X\right)\coloneqq\left\{ \pi\in\mathrm{Sym}_{U}\mid\pi x=x\,\mathrm{für}\,\mathrm{alle}\,x\in X\right\} 
\]

\end_inset

Diese Gruppe ist der Schnitt der Stabilisatoren der Elemente von 
\begin_inset Formula $X$
\end_inset

.
\begin_inset Formula 
\[
\mathrm{Stab}_{U}\left(X\right)=\bigcap_{x\in X}\mathrm{Stab}_{U}\left(x\right)
\]

\end_inset


\end_layout

\begin_layout Itemize
Der 
\series bold
Mengenstabilisator
\series default
 von 
\begin_inset Formula $X$
\end_inset

 in 
\begin_inset Formula $U$
\end_inset

 sei die Untergruppe 
\begin_inset Formula $\mathrm{Stab}_{U}\left\{ X\right\} \subseteq\mathrm{Sym}_{U}$
\end_inset

 der Permutationen, die die Menge 
\begin_inset Formula $X$
\end_inset

 fixieren.
\begin_inset Formula 
\[
\mathrm{Stab}_{U}\left\{ X\right\} \coloneqq\left\{ \pi\in\mathrm{Sym}_{U}\mid\pi X=X\right\} 
\]

\end_inset

Diese Gruppe wird durch 
\begin_inset Formula $\mathrm{Stab}_{U}\left(X\right)$
\end_inset

 und 
\begin_inset Formula $\mathrm{Stab}_{U}\left(U\backslash X\right)$
\end_inset

 erzeugt: Jede Permutation 
\begin_inset Formula $\pi\in\mathrm{Stab}_{U}\left\{ X\right\} $
\end_inset

 kann in 
\begin_inset Formula $\pi_{1}\circ\pi_{2}$
\end_inset

 zerlegt werden, wobei 
\begin_inset Formula $\pi_{1}$
\end_inset

 nur Elemente von 
\begin_inset Formula $X$
\end_inset

, und 
\begin_inset Formula $\pi_{2}$
\end_inset

 nur Elemente von 
\begin_inset Formula $U\backslash X$
\end_inset

 permutiert.
 
\begin_inset Formula 
\begin{eqnarray*}
\mathrm{Stab}_{U}\left\{ X\right\}  & = & \left\langle \mathrm{Stab}_{U}\left(X\right)\cup\mathrm{Stab}_{U}\left(U\backslash X\right)\right\rangle 
\end{eqnarray*}

\end_inset


\end_layout

\end_deeper
\begin_layout --Separator--

\end_layout

\begin_layout Definition
Die letzte Definition wird auf Partitionen (Mengen von Teilmengen) 
\begin_inset Formula $\mathcal{P}$
\end_inset

 von 
\begin_inset Formula $U$
\end_inset

 erweitert:
\end_layout

\begin_deeper
\begin_layout Itemize
Der Punktstabilisator
\series bold
 
\series default
von 
\begin_inset Formula $\mathcal{P}$
\end_inset

 in 
\begin_inset Formula $U$
\end_inset

 sei die Untergruppe 
\begin_inset Formula $\mathrm{Stab}_{U}\left(\mathcal{P}\right)\subseteq\mathrm{Sym}_{U}$
\end_inset

 aller Permutationen, die jede Menge 
\begin_inset Formula $P_{i}\in\mathcal{P}$
\end_inset

 fixieren:
\begin_inset Formula 
\begin{eqnarray*}
\mathrm{Stab}_{U}\left(\mathcal{P}\right) & \coloneqq & \left\{ \pi\in\mathrm{Sym}_{U}\mid\pi P_{i}=P_{i}\,\mathrm{für}\,\mathrm{alle}\,P_{i}\in\mathcal{P}\right\} 
\end{eqnarray*}

\end_inset

Dies ist der Schnitt der Mengenstabilisatoren der Elemente von 
\begin_inset Formula $\mathcal{P}$
\end_inset

:
\begin_inset Formula 
\[
\mathrm{Stab}_{U}\left(\mathcal{P}\right)=\bigcap_{P_{i}\in\mathcal{P}}\mathrm{Stab}_{U}\left\{ P_{i}\right\} 
\]

\end_inset


\end_layout

\begin_layout Itemize
Der Mengenstabilisator von 
\begin_inset Formula $\mathcal{P}$
\end_inset

 in 
\begin_inset Formula $U$
\end_inset

 sei die Untergruppe 
\begin_inset Formula $\mathrm{Stab}_{U}\left\{ \mathcal{P}\right\} \subseteq\mathrm{Sym}_{U}$
\end_inset

 aller Permutationen, die die Partition als ganzes fixieren: 
\begin_inset Formula 
\[
\mathrm{Stab}_{U}\left\{ \mathcal{P}\right\} \coloneqq\left\{ \pi\in\mathrm{Sym}_{U}\mid\pi\mathcal{P}=\mathcal{P}\right\} 
\]

\end_inset

Diese Gruppe wird durch 
\begin_inset Formula $\mathrm{Stab}_{U}\left(\mathcal{P}\right)$
\end_inset

 und alle Permutationen von gleich-mächtigen Elementen von 
\begin_inset Formula $\mathcal{P}$
\end_inset

 erzeugt: Sei 
\begin_inset Formula $\mathcal{P}_{\mid i}\coloneqq\left\{ P_{j}\in\mathcal{P}\mid\left|P_{j}\right|=i\right\} $
\end_inset

 für 
\begin_inset Formula $i\in\left[1,\left|U\right|\right]$
\end_inset

, dann gilt: 
\begin_inset Formula 
\[
\mathrm{Stab}_{U}\left\{ \mathcal{P}\right\} =\left\langle \mathrm{Stab}_{U}\left(\mathcal{P}\right)\cup\bigcup_{i=1}^{\left|U\right|}\mathrm{Sym}_{\mathcal{P}_{\mid i}}\right\rangle 
\]

\end_inset


\end_layout

\end_deeper
\begin_layout Proposition
\begin_inset CommandInset label
LatexCommand label
name "prop:feinheit-stab"

\end_inset

Für zwei Partitionen 
\begin_inset Formula $\mathcal{P},\mathcal{P}'\in\mathrm{Part}_{U}$
\end_inset

 gilt 
\begin_inset Formula $\mathcal{P}\preceq\mathcal{P}'$
\end_inset

 genau dann wenn 
\begin_inset Formula $\mathrm{Stab}_{U}\left(\mathcal{P}\right)\subseteq\mathrm{Stab}_{U}\left(\mathcal{P}'\right)$
\end_inset

.
\end_layout

\begin_layout Proof
Sei 
\begin_inset Formula $\pi\in\mathrm{Stab}_{U}\left(\mathcal{P}\right)$
\end_inset

 beliebig, so besteht 
\begin_inset Formula $\pi$
\end_inset

 aus einer Folge von Transpositionen:
\begin_inset Formula 
\[
\pi=\left(u_{1}v_{1}\right)\circ\cdots\circ\left(u_{k}v_{k}\right)
\]

\end_inset


\end_layout

\begin_layout Proof
Jede Transposition 
\begin_inset Formula $\left(u_{i}v_{i}\right)$
\end_inset

 vertauscht Elemente einer Menge 
\begin_inset Formula $P_{i}\in\mathcal{P}$
\end_inset

; daher gilt 
\begin_inset Formula $u_{i}\sim_{\mathcal{P}}v_{i}$
\end_inset

.
 Per Definition 
\begin_inset CommandInset ref
LatexCommand ref
reference "def:feinheit"

\end_inset

 gilt außerdem 
\begin_inset Formula $\left(\sim_{\mathcal{P}}\right)\subseteq\left(\sim_{\mathcal{P}'}\right)$
\end_inset

, und daher 
\begin_inset Formula $\left(u_{i}v_{i}\right)\in\mathrm{Stab}_{U}\left(\mathcal{P}'\right)$
\end_inset

 und 
\begin_inset Formula $\pi\in\mathrm{Stab}_{U}\left(\mathcal{P}'\right)$
\end_inset

.
\end_layout

\begin_layout Proof
Umgekehrt impliziert auch 
\begin_inset Formula $\mathrm{Stab}_{U}\left(\mathcal{P}\right)\subseteq\mathrm{Stab}_{U}\left(\mathcal{P}'\right)$
\end_inset

, dass alle Transpositionen 
\begin_inset Formula $\left(u_{i}v_{i}\right)\in\mathrm{Stab}_{U}\left(\mathcal{P}\right)$
\end_inset

 in 
\begin_inset Formula $\mathrm{Stab}_{U}\left(\mathcal{P}'\right)$
\end_inset

 enthalten sind.
 Daraus folgt 
\begin_inset Formula $\left(\sim_{\mathcal{P}}\right)\subseteq\left(\sim_{\mathcal{P}'}\right)$
\end_inset

 und 
\begin_inset Formula $\mathcal{P}\preceq\mathcal{P}'$
\end_inset

.
\end_layout

\begin_layout Section
Träger
\end_layout

\begin_layout Definition
\begin_inset CommandInset label
LatexCommand label
name "def:traeger"

\end_inset

Sei 
\begin_inset Formula $G\subseteq\mathrm{\mathrm{Sym}}_{U}$
\end_inset

 eine Untergruppe und 
\begin_inset Formula $\mathcal{P}$
\end_inset

 eine Partition von 
\begin_inset Formula $U$
\end_inset

.
 
\begin_inset Formula $\mathcal{P}$
\end_inset

 ist ein 
\series bold
Träger
\series default
 von
\series bold
 
\series default

\begin_inset Formula $G$
\end_inset

 genau dann wenn 
\begin_inset Formula $\mathrm{Stab}_{U}\left(\mathcal{P}\right)\subseteq G$
\end_inset

.
\end_layout

\begin_layout Remark*
Wenn 
\begin_inset Formula $\mathcal{P}$
\end_inset

 ein Träger von 
\begin_inset Formula $G$
\end_inset

 ist, so ist 
\begin_inset Formula $\mathcal{P}$
\end_inset

 auch ein Träger jeder Obermenge 
\begin_inset Formula $G'\supseteq G$
\end_inset

.
\end_layout

\begin_layout Remark*
Außerdem sind per Satz 
\begin_inset CommandInset ref
LatexCommand ref
reference "prop:feinheit-stab"

\end_inset

 alle feineren Partitionen 
\begin_inset Formula $\mathcal{P}'\preceq\mathcal{P}$
\end_inset

 Träger von 
\begin_inset Formula $G$
\end_inset

.
\end_layout

\begin_layout Remark*
Somit ist 
\begin_inset Formula $\mathcal{P}_{\min}=\left\{ \left\{ u_{1}\right\} ,\cdots,\left\{ u_{n}\right\} \right\} $
\end_inset

 mit 
\begin_inset Formula $\mathrm{Stab}_{U}\left(\mathcal{P}_{\min}\right)=\left\{ \mathbf{id}\right\} $
\end_inset

 ein trivialer Träger jeder Untergruppe 
\begin_inset Formula $G\subseteq\mathrm{Sym}_{U}$
\end_inset

, und alle Partitionen 
\begin_inset Formula $\mathcal{P}\in\mathrm{Part}_{U}$
\end_inset

 sind Träger der Gruppe 
\begin_inset Formula $\mathrm{Sym}_{U}=\mathrm{Stab}_{U}\left(\mathcal{P}_{\max}\right)$
\end_inset

.
\end_layout

\begin_layout Lemma
\begin_inset CommandInset label
LatexCommand label
name "lem:traeger-abschluss"

\end_inset

Die Träger-Eigenschaft ist bezüglich den Operationen 
\begin_inset Formula $\sqcap$
\end_inset

 und 
\begin_inset Formula $\sqcup$
\end_inset

 abgeschlossen: Wenn 
\begin_inset Formula $\mathcal{A}$
\end_inset

 und 
\begin_inset Formula $\mathcal{B}$
\end_inset

 Träger von 
\begin_inset Formula $G$
\end_inset

 sind, so sind es auch 
\begin_inset Formula $\mathcal{A}\sqcap\mathcal{B}$
\end_inset

 und 
\begin_inset Formula $\mathcal{A}\sqcup\mathcal{B}$
\end_inset

.
\end_layout

\begin_layout Proof
Per Definition ist 
\begin_inset Formula $\mathcal{A}\sqcap\mathcal{B}\preceq\mathcal{A}$
\end_inset

 und 
\begin_inset Formula $\mathcal{A}\sqcap\mathcal{B}\preceq\mathcal{B}$
\end_inset

, und daher folgt die Tatsache direkt aus Satz 
\begin_inset CommandInset ref
LatexCommand ref
reference "prop:feinheit-stab"

\end_inset

.
\end_layout

\begin_layout Proof
Für 
\begin_inset Formula $\mathcal{P}\coloneqq\mathcal{A}\sqcup\mathcal{B}$
\end_inset

 gilt:
\end_layout

\begin_deeper
\begin_layout Enumerate
Jede Permutation 
\begin_inset Formula $\pi\in\mathrm{Stab}_{U}\left(\mathcal{P}\right)$
\end_inset

 ist eine Folge von Transpositionen 
\begin_inset Formula $\pi=\left(u_{1}v_{1}\right)\circ\cdots\circ\left(u_{k}v_{k}\right)$
\end_inset

, so dass wir nur Transpositionen betrachten müssen.
\end_layout

\begin_layout Enumerate
Die Äquivalenzrelation 
\begin_inset Formula $\sim_{\mathcal{P}}$
\end_inset

 ist die transitive Hülle von 
\begin_inset Formula $\sim\coloneqq\left(\sim_{\mathcal{A}}\cup\sim_{\mathcal{B}}\right)$
\end_inset

.
 Daher existiert für alle 
\begin_inset Formula $u\sim_{\mathcal{P}}v$
\end_inset

 eine Folge von 
\begin_inset Formula $\ell\leqslant\left|U\right|$
\end_inset

 Elementen 
\begin_inset Formula $\bar{w}\in U^{\ell}$
\end_inset

 mit
\begin_inset Formula 
\[
u\sim w_{1}\sim\cdots\sim w_{\ell}\sim v
\]

\end_inset


\end_layout

\end_deeper
\begin_layout Proof
Sei nun 
\begin_inset Formula $\left(uv\right)\in\mathrm{Stab}_{U}\left(\mathcal{P}\right)$
\end_inset

 eine beliebige Transposition.
 
\begin_inset Formula $\left(uv\right)$
\end_inset

 lässt sich mit dem entsprechenden 
\begin_inset Formula $\bar{w}\in\left(U\backslash\left\{ u,v\right\} \right)^{*}$
\end_inset

 in die folgenden Transpositionen zerlegen:
\begin_inset Formula 
\begin{eqnarray*}
\left(uv\right) & = & \left(uw_{1}\right)\left(w_{1}w_{2}\right)\cdots\left(w_{\ell-1}w_{\ell}\right)\left(w_{\ell}v\right)\\
 &  & \circ\left(w_{\ell-1}w_{\ell-2}\right)\cdots\left(w_{2}w_{1}\right)
\end{eqnarray*}

\end_inset


\end_layout

\begin_layout Proof
Insbesondere sei 
\begin_inset Formula $\bar{w}$
\end_inset

 so gewählt, dass 
\begin_inset Formula $u\sim w_{1}$
\end_inset

, 
\begin_inset Formula $\left(w_{i}\sim w_{i+1}\right)_{i\in\left[1,\ell-1\right]}$
\end_inset

 und 
\begin_inset Formula $w_{\ell}\sim v$
\end_inset

.
 Weil 
\begin_inset Formula $\sim=\left(\sim_{\mathcal{A}}\cup\sim_{\mathcal{B}}\right)$
\end_inset

, ist jede der Transpositionen entweder in 
\begin_inset Formula $\mathrm{Stab}_{U}\left(\mathcal{A}\right)$
\end_inset

 oder in 
\begin_inset Formula $\mathrm{Stab}_{U}\left(\mathcal{B}\right)$
\end_inset

 enthalten, und beide sind Teilmengen von 
\begin_inset Formula $G$
\end_inset

.
\end_layout

\begin_layout Proof
Also ist 
\begin_inset Formula $\left(uv\right)\in G$
\end_inset

, und es folgt 
\begin_inset Formula $\mathrm{Stab}_{U}\left(\mathcal{P}\right)\subseteq G$
\end_inset

.
\end_layout

\begin_layout Corollary
Jede Gruppe 
\begin_inset Formula $G\subseteq\mathrm{Sym}_{U}$
\end_inset

 besitzt eine eindeutigen gröbsten Träger.
\end_layout

\begin_layout Proof
Jede Gruppe wird mindestens von 
\begin_inset Formula $\mathcal{P}_{\min}\left(U\right)$
\end_inset

 mit 
\begin_inset Formula $\mathrm{Stab}_{U}\left(\mathcal{P}_{\min}\left(U\right)\right)=\left\{ \mathbf{id}\right\} \subseteq G$
\end_inset

 getragen.
\end_layout

\begin_layout Proof
Angenommen, 
\begin_inset Formula $\mathcal{P}$
\end_inset

 und 
\begin_inset Formula $\mathcal{P}'$
\end_inset

 seien zwei gröbste Träger von 
\begin_inset Formula $G$
\end_inset

.
 
\end_layout

\begin_layout Proof
Nun ist 
\begin_inset Formula $\mathcal{P}\sqcup\mathcal{P}'$
\end_inset

 nach Lemma 
\begin_inset CommandInset ref
LatexCommand ref
reference "lem:traeger-abschluss"

\end_inset

 ebenfalls ein Träger von 
\begin_inset Formula $G$
\end_inset

, und ist mindestens so grob wie 
\begin_inset Formula $\mathcal{P}$
\end_inset

 und 
\begin_inset Formula $\mathcal{P}'$
\end_inset

.
\end_layout

\begin_layout Proof
Da 
\begin_inset Formula $\mathcal{P}$
\end_inset

 und 
\begin_inset Formula $\mathcal{P}'$
\end_inset

 aber per Definition gröbste Träger von 
\begin_inset Formula $G$
\end_inset

 sind, muss 
\begin_inset Formula $\mathcal{P}=\mathcal{P}\sqcup\mathcal{P}'=\mathcal{P}'$
\end_inset

 gelten.
\end_layout

\begin_layout Definition
Für jede Gruppe 
\begin_inset Formula $G\subseteq\mathrm{Sym}_{U}$
\end_inset

 sei 
\begin_inset Formula $\mathrm{SP}\left(G\right)$
\end_inset

 der gröbste Träger von 
\begin_inset Formula $G$
\end_inset

.
\end_layout

\begin_layout Standard
Wir betrachten nun die Konjugations-Operation auf 
\begin_inset Formula $\mathrm{Sym}_{U}$
\end_inset

.
\end_layout

\begin_layout Lemma
\begin_inset CommandInset label
LatexCommand label
name "lem:konjugation"

\end_inset

Wenn eine Partition 
\begin_inset Formula $\mathcal{P}$
\end_inset

 ein Träger einer Gruppe 
\begin_inset Formula $G\subseteq\mathrm{Sym}_{U}$
\end_inset

 ist, dann ist 
\begin_inset Formula $\pi\mathcal{P}$
\end_inset

 ein Träger von 
\begin_inset Formula $\pi G\pi^{-1}$
\end_inset

 für alle 
\begin_inset Formula $\pi\in\mathrm{Sym}_{U}$
\end_inset

.
\end_layout

\begin_layout Proof
Seien 
\begin_inset Formula $\rho\in\mathrm{Stab}_{U}\left(\pi\mathcal{P}\right)$
\end_inset

 und 
\begin_inset Formula $P_{i}\in\mathcal{P}$
\end_inset

 beliebig.
 
\begin_inset Formula $\pi^{-1}\rho\pi$
\end_inset

 fixiert 
\begin_inset Formula $P_{i}$
\end_inset

:
\begin_inset Formula 
\begin{eqnarray*}
\left(\pi^{-1}\rho\pi\right)P_{i} & = & \pi^{-1}\left(\rho\left(\pi P_{i}\right)\right)\\
 & = & \pi^{-1}\pi P_{i}\\
 & = & P_{i}
\end{eqnarray*}

\end_inset


\end_layout

\begin_layout Proof
Daraus folgt 
\begin_inset Formula $\left(\pi^{-1}\rho\pi\right)\in\mathrm{Stab}_{U}\left(\mathcal{P}\right)\subseteq G$
\end_inset

, und schließlich gilt:
\begin_inset Formula 
\begin{eqnarray*}
\rho & = & \left(\pi\pi^{-1}\right)\rho\left(\pi\pi^{-1}\right)\\
 & = & \pi\left(\pi^{-1}\rho\pi\right)\pi^{-1}\\
 & \in & \pi G\pi^{-1}
\end{eqnarray*}

\end_inset


\end_layout

\begin_layout Proof
Damit 
\begin_inset Formula $\pi\mathcal{P}$
\end_inset

 ein Träger der konjugierten Gruppe 
\begin_inset Formula $\pi G\pi^{-1}$
\end_inset

.
\end_layout

\begin_layout Corollary
\begin_inset CommandInset label
LatexCommand label
name "cor:sp-konjugation"

\end_inset

Für jede Gruppe 
\begin_inset Formula $G\subseteq\mathrm{Sym}_{U}$
\end_inset

 und jede Permutation 
\begin_inset Formula $\pi\in\mathrm{Sym}_{U}$
\end_inset

 ist 
\begin_inset Formula $\pi\mathrm{SP}\left(G\right)=\mathrm{SP}\left(\pi G\pi^{-1}\right)$
\end_inset

.
\end_layout

\begin_layout Proof
Nach Lemma 
\begin_inset CommandInset ref
LatexCommand ref
reference "lem:konjugation"

\end_inset

 ist 
\begin_inset Formula $\pi\mathrm{SP}\left(G\right)$
\end_inset

 ein Träger von 
\begin_inset Formula $\pi G\pi^{-1}$
\end_inset

.
 Daher ist 
\begin_inset Formula $\pi\mathrm{SP}\left(G\right)$
\end_inset

 mindestens so fein wie der gröbste Träger:
\begin_inset Formula 
\[
\pi\mathrm{SP}\left(G\right)\preceq\mathrm{SP}\left(\pi G\pi^{-1}\right)
\]

\end_inset


\end_layout

\begin_layout Proof
Umgekehrt ist auch 
\begin_inset Formula $\pi^{-1}\mathrm{SP}\left(\pi G\pi^{-1}\right)$
\end_inset

 ein Träger von 
\begin_inset Formula $\pi^{-1}\pi G\pi\pi^{-1}=G$
\end_inset

.
 Es folgt:
\begin_inset Formula 
\[
\pi^{-1}\mathrm{SP}\left(\pi G\pi^{-1}\right)\preceq\mathrm{SP}\left(G\right)
\]

\end_inset


\end_layout

\begin_layout Proof
Die Relation 
\begin_inset Formula $\preceq$
\end_inset

 bleibt unter Permutation beider Seiten erhalten:
\begin_inset Formula 
\begin{eqnarray*}
\pi\pi^{-1}\mathrm{SP}\left(\pi G\pi^{-1}\right) & \preceq & \pi\mathrm{SP}\left(G\right)
\end{eqnarray*}

\end_inset


\end_layout

\begin_layout Proof
Daher ist 
\begin_inset Formula $\pi\mathrm{SP}\left(G\right)=\mathrm{SP}\left(\pi G\pi^{-1}\right)$
\end_inset

.
\end_layout

\begin_layout Lemma
Jede Gruppe 
\begin_inset Formula $G$
\end_inset

 ist Obermenge des Punkt- und Teilmenge des Mengenstabilisators von 
\begin_inset Formula $\mathrm{SP}\left(G\right)$
\end_inset

:
\begin_inset Formula 
\[
\mathrm{Stab}_{U}\left(\mathrm{SP}\left(G\right)\right)\subseteq G\subseteq\mathrm{Stab}_{U}\left\{ \mathrm{SP}\left(G\right)\right\} 
\]

\end_inset


\end_layout

\begin_layout Proof
Per Definition 
\begin_inset CommandInset ref
LatexCommand ref
reference "def:traeger"

\end_inset

 gilt bereits 
\begin_inset Formula $\mathrm{Stab}_{U}\left(\mathrm{SP}\left(G\right)\right)\subseteq G$
\end_inset

.
\end_layout

\begin_layout Proof
Sei nun 
\begin_inset Formula $\pi\in G$
\end_inset

 beliebig.
 Weil 
\begin_inset Formula $\pi G\pi^{-1}=G$
\end_inset

, folgt nach Korollar 
\begin_inset CommandInset ref
LatexCommand ref
reference "cor:sp-konjugation"

\end_inset

: 
\begin_inset Formula 
\[
\pi\mathrm{SP}\left(G\right)=\mathrm{SP}\left(\pi G\pi^{-1}\right)=\mathrm{SP}\left(G\right)
\]

\end_inset


\end_layout

\begin_layout Proof
Weil 
\begin_inset Formula $\pi$
\end_inset

 die Partition 
\begin_inset Formula $\mathrm{SP}\left(G\right)$
\end_inset

 auf sich selbst abbildet, gilt per Definition 
\begin_inset Formula $\pi\in\mathrm{Stab}_{U}\left\{ \mathrm{SP}\left(G\right)\right\} $
\end_inset

.
\end_layout

\begin_layout Lemma
\begin_inset CommandInset label
LatexCommand label
name "lem:lemma-19"

\end_inset

(Lemma 19 aus 
\begin_inset CommandInset citation
LatexCommand cite
key "anderson_et_al:LIPIcs:2014:4445"

\end_inset

)
\end_layout

\begin_layout Lemma
Für 
\begin_inset Formula $\epsilon\in\mathbb{R}_{\left[0,1\right[}$
\end_inset

, jedes hinreichend große Universum 
\begin_inset Formula $U=\left[1,n\right]$
\end_inset

 mit 
\begin_inset Formula $n\geqslant\exp\frac{4}{\epsilon}$
\end_inset

 und jede Partition 
\begin_inset Formula $\mathcal{P}\in\mathrm{Part}_{U}$
\end_inset

 gilt:
\end_layout

\begin_layout Lemma
Falls der Index des Mengenstabilisators von 
\begin_inset Formula $\mathcal{P}$
\end_inset

 subexponentiell in 
\begin_inset Formula $n$
\end_inset

 ist,
\begin_inset Formula 
\[
s\coloneqq\frac{\left|\mathrm{Sym}_{U}\right|}{\left|\mathrm{Stab}_{U}\left\{ \mathcal{P}\right\} \right|}
\]

\end_inset


\begin_inset Formula 
\[
n\leqslant s\leqslant2^{n^{1-\epsilon}}
\]

\end_inset

dann enthält 
\begin_inset Formula $\mathcal{P}$
\end_inset

 entweder 
\begin_inset Formula $\mathcal{O}\left(n^{1-\epsilon}\right)$
\end_inset

 oder 
\begin_inset Formula $n-\mathcal{O}\left(n^{1-\epsilon}\right)$
\end_inset

 viele Elemente.
\begin_inset Formula 
\[
\min\left\{ \left|\mathcal{P}\right|,n-\left|\mathcal{P}\right|\right\} \leqslant\frac{8}{\epsilon}\frac{\log s}{\log n}
\]

\end_inset


\end_layout

\begin_layout Standard
Diese Beziehung ist an der Repräsentation des Mengenstabilisators als Erzeugnis
 erkennbar: 
\begin_inset Formula 
\begin{eqnarray*}
\mathrm{Stab}_{U}\left\{ \mathcal{P}\right\}  & = & \left\langle \mathrm{Stab}_{U}\left(\mathcal{P}\right)\cup\bigcup_{i=1}^{\left|U\right|}\mathrm{Sym}_{\mathcal{P}_{\mid i}}\right\rangle \\
\left|\mathrm{Stab}_{U}\left\{ \mathcal{P}\right\} \right| & = & \left|\mathrm{Stab}_{U}\left(\mathcal{P}\right)\right|\cdot\prod_{i=1}^{U}\left|\mathcal{P}_{\mid i}\right|!
\end{eqnarray*}

\end_inset

Damit der Index klein ist, muss die Gruppe selbst groß sein, was entweder
 einen großen Punktstabilisator oder eine große Anzahl gleich-mächtiger
 Elemente von 
\begin_inset Formula $\mathcal{P}$
\end_inset

 erfordert.
\end_layout

\begin_layout Proof
Sei 
\begin_inset Formula $\epsilon\in\mathbb{R}_{\left[0,1\right[}$
\end_inset

, 
\begin_inset Formula $n\geqslant\exp\frac{4}{\epsilon}$
\end_inset

, 
\begin_inset Formula $U\coloneqq\left[1,n\right]$
\end_inset

 und 
\begin_inset Formula $\mathcal{P}\in\mathrm{Part}_{U}$
\end_inset

 mit der folgenden Bedingung:
\begin_inset Formula 
\[
n\leqslant\frac{\left|\mathrm{Sym}_{U}\right|}{\left|\mathrm{Stab}_{U}\left\{ \mathcal{P}\right\} \right|}\leqslant2^{n^{1-\epsilon}}
\]

\end_inset


\end_layout

\begin_deeper
\begin_layout Enumerate
Die Definition des Mengenstabilisators liefert eine kombinatorische Schranke
 für dessen Größe: Jede Permutation 
\begin_inset Formula $\pi\in\mathrm{Stab}_{U}\left\{ \mathcal{P}\right\} $
\end_inset

 besteht aus einer Permutation der Elemente von 
\begin_inset Formula $\mathcal{P}$
\end_inset

, und einer Permutation 
\begin_inset Formula $\pi_{i}\in\mathrm{Sym}_{P}$
\end_inset

 für jedes Element 
\begin_inset Formula $P\in\mathcal{P}$
\end_inset

.
 
\begin_inset Formula 
\[
\left|\mathrm{Stab}_{U}\left\{ \mathcal{P}\right\} \right|\leqslant\left|\mathcal{P}\right|!\prod_{P\in\mathcal{P}}\left|P\right|!
\]

\end_inset


\end_layout

\begin_layout Enumerate
Sei 
\begin_inset Formula $k\coloneqq\left|\mathcal{P}\right|$
\end_inset

, seien 
\begin_inset Formula $P_{1},\cdots,P_{k}\in\mathcal{P}$
\end_inset

 die nach aufsteigender Mächtigkeit geordneten Elemente von 
\begin_inset Formula $\mathcal{P}$
\end_inset

, und seien 
\begin_inset Formula $p_{1}\leqslant\cdots\leqslant p_{k}$
\end_inset

 ihre Größen (
\begin_inset Formula $\sum_{i=1}^{k}p_{i}=n$
\end_inset

).
 
\begin_inset Formula 
\[
\left|\mathrm{Stab}_{U}\left\{ P\right\} \right|\leqslant k!\prod_{i=1}^{k}p_{i}!
\]

\end_inset

.
\end_layout

\begin_layout Enumerate
Für zwei beliebige 
\begin_inset Formula $p_{i},p_{j}$
\end_inset

 mit 
\begin_inset Formula $i\leqslant j$
\end_inset

 gilt 
\begin_inset Formula $p_{i}\leqslant p_{j}$
\end_inset

 und daher 
\begin_inset Formula $\frac{p_{j}+1}{p_{i}}\geqslant1$
\end_inset

.
 Es folgt:
\begin_inset Formula 
\begin{eqnarray*}
\left|\mathrm{Stab}_{U}\left\{ P\right\} \right| & \leqslant & k!\prod_{i=1}^{k}p_{i}!\\
 & = & k!p_{1}!\cdots p_{i}!\cdots p_{j}!\cdots p_{k}!\\
 & \leqslant & k!p_{1}!\cdots p_{i}!\cdots p_{j}!\cdots p_{k}!\cdot\frac{p_{j}+1}{p_{i}}\\
 & = & k!p_{1}!\cdots\left(p_{i}-1\right)!\cdots\left(p_{j}+1\right)!\cdots p_{k}!
\end{eqnarray*}

\end_inset


\end_layout

\begin_layout Enumerate
Durch wiederholte Anwendung werden die ersten 
\begin_inset Formula $k-1$
\end_inset

 Fakultätsterme auf 
\begin_inset Formula $1!$
\end_inset

 reduziert.
 Der letzte wächst auf 
\begin_inset Formula $\left(n-\left(k-1\right)\right)!$
\end_inset

 an: 
\begin_inset Formula 
\begin{eqnarray*}
\left|\mathrm{Stab}_{U}\left\{ P\right\} \right| & \leqslant & k!\cdot\underset{k-1}{\underbrace{1!\cdots1!}}\cdot\left(n-\left(k-1\right)\right)!\\
 & = & k!\left(n+1-k\right)!
\end{eqnarray*}

\end_inset

.
\end_layout

\begin_layout Enumerate
Daher ist 
\begin_inset Formula $s$
\end_inset

 von unten durch einen Binomialkoeffizienten beschränkt:
\begin_inset Formula 
\begin{eqnarray*}
s=\frac{\left|\mathrm{Sym}_{U}\right|}{\left|\mathrm{Stab}_{U}\left\{ \mathcal{P}\right\} \right|} & = & \frac{n!}{\left|\mathrm{Stab}_{U}\left\{ \mathcal{P}\right\} \right|}\\
 & \geqslant & \frac{n!}{k!\left(n+1-k\right)!}\\
 & = & \frac{1}{n+1}\frac{\left(n+1\right)!}{k!\left(n+1-k\right)!}\\
 & = & \frac{1}{n+1}\binom{n+1}{k}\\
 & \geqslant & \frac{1}{n+1}\binom{n}{k}\\
 & = & \frac{1}{n+1}\binom{n}{\min\left(n,n-k\right)}
\end{eqnarray*}

\end_inset


\end_layout

\begin_layout Enumerate
Für den Binomialkoeffizienten gibt es auch eine untere Schranke: 
\begin_inset Formula 
\[
\binom{n}{k}=\frac{n!}{k!\left(n-k\right)!}=\frac{\prod_{i=n-k+1}^{n}i}{\prod_{i=1}^{k}i}=\prod_{i=1}^{k}\frac{n-k+i}{i}
\]

\end_inset


\begin_inset Formula 
\[
\left(n-k+1\right)>\frac{\left(n-k+2\right)}{2}>\cdots>\frac{n}{k}
\]

\end_inset

 
\begin_inset Formula 
\[
\binom{n}{k}\geqslant\left(\frac{n}{k}\right)^{k}
\]

\end_inset


\end_layout

\begin_layout Enumerate
Daher hat 
\begin_inset Formula $s$
\end_inset

 die folgende untere Schranke mit 
\begin_inset Formula $k'\coloneqq\min\left(k,n-k\right)$
\end_inset

:
\begin_inset Formula 
\[
s\geqslant\frac{1}{n+1}\left(\frac{n}{k'}\right)^{k'}
\]

\end_inset


\end_layout

\begin_layout Enumerate
Es folgt:
\begin_inset Formula 
\begin{eqnarray*}
\log s & \geqslant & k'\left(\log n-\log k'\right)-\log\left(n+1\right)\\
\log s+\log\left(n+1\right) & \geqslant & k'\left(\log n-\log k'\right)
\end{eqnarray*}

\end_inset


\end_layout

\begin_layout Enumerate
Weil 
\begin_inset Formula $s\geqslant n$
\end_inset

 und 
\begin_inset Formula $\log n\geqslant1$
\end_inset

, folgt: 
\begin_inset Formula 
\begin{eqnarray*}
4\log s & = & \log s+3\log s\\
 & \geqslant & \log s+3\log n\\
 & \geqslant & \log s+\log\left(n+1\right)\\
 & \geqslant & k'\left(\log n-\log k'\right)
\end{eqnarray*}

\end_inset


\end_layout

\begin_layout Enumerate
Weil 
\begin_inset Formula $n\geqslant k'$
\end_inset

, folgt 
\begin_inset Formula $\log n\geqslant\log k'$
\end_inset

:
\begin_inset Formula 
\begin{eqnarray*}
4\log s & \geqslant & k'\left(\log n-\log k'\right)\\
 & \geqslant & k'
\end{eqnarray*}

\end_inset


\end_layout

\begin_layout Enumerate
Aus der Bedingung 
\begin_inset Formula $s\leqslant2^{n^{1-\epsilon}}$
\end_inset

 folgt:
\begin_inset Formula 
\begin{eqnarray*}
\log k' & \leqslant & \log(4\log s)\\
 & = & \log\log s+2\\
 & \leqslant & \log\log2^{n^{1-\epsilon}}+2\\
 & = & \log n^{1-\epsilon}+2\\
 & = & \left(1-\epsilon\right)\log n+2
\end{eqnarray*}

\end_inset


\end_layout

\begin_layout Enumerate
Schließlich folgt:
\begin_inset Formula 
\begin{eqnarray*}
4\log s & \geqslant & k'\left(\log n-\log k'\right)\\
 & \geqslant & k'\left(\log n-\left(\left(1-\epsilon\right)\log n+2\right)\right)\\
 & \geqslant & k'\left(\epsilon\log n-2\right)\\
 & \geqslant & k'\frac{\epsilon\log n}{2}\\
\frac{8\log s}{\epsilon\log n} & \geqslant & k'
\end{eqnarray*}

\end_inset


\end_layout

\end_deeper
\begin_layout Standard
Eine Partition, die höchstens 
\begin_inset Formula $\frac{n}{2}$
\end_inset

 Elemente enthält (und deren Stabilisator einen subexponentiellen Index
 
\begin_inset Formula $\left[\mathrm{Sym}_{U}:\mathrm{Stab}_{U}\left\{ \mathcal{P}\right\} \right]\leqslant2^{n^{1-\epsilon}}$
\end_inset

 hat) muss ein sehr großes Element enthalten.
\end_layout

\begin_layout Lemma
\begin_inset CommandInset label
LatexCommand label
name "lem:lemma-20"

\end_inset

(Lemma 20 aus 
\begin_inset CommandInset citation
LatexCommand cite
key "anderson_et_al:LIPIcs:2014:4445"

\end_inset

)
\end_layout

\begin_layout Lemma
Für 
\begin_inset Formula $\epsilon\in\mathbb{R}_{\left[0,1\right[}$
\end_inset

, jedes hinreichend große Universum 
\begin_inset Formula $U\coloneqq\left[1,n\right]$
\end_inset

 mit 
\begin_inset Formula $n\geqslant\exp\frac{8}{\epsilon^{2}}$
\end_inset

 und jede Partition 
\begin_inset Formula $\mathcal{P}$
\end_inset

 mit mit 
\begin_inset Formula $\left|\mathcal{P}\right|\leqslant\frac{n}{2}$
\end_inset

 gilt:
\end_layout

\begin_layout Lemma
Falls der Index des Mengenstabilisators von 
\begin_inset Formula $\mathcal{P}$
\end_inset

 subexponentiell in 
\begin_inset Formula $n$
\end_inset

 ist, 
\begin_inset Formula 
\[
s\coloneqq\frac{\left|\mathrm{Sym}_{U}\right|}{\left|\mathrm{Stab}_{U}\left\{ \mathcal{P}\right\} \right|}
\]

\end_inset


\begin_inset Formula 
\[
n\leqslant s\leqslant2^{n^{1-\epsilon}}
\]

\end_inset

dann enthält das mächtigste Element von 
\begin_inset Formula $\mathcal{P}$
\end_inset

 alles bis auf einen sublinearen Teil des Universums: 
\begin_inset Formula 
\[
\max\left\{ \left|P\right|\mid P\in\mathcal{P}\right\} \geqslant n-\frac{33}{\epsilon}\cdot\frac{\log s}{\log n}\geqslant n-\frac{33}{\epsilon}n^{1-\epsilon}
\]

\end_inset


\end_layout

\begin_layout Proof
Sei wieder 
\begin_inset Formula $\mathcal{P}=\left\{ P_{1},\cdots,P_{k}\right\} $
\end_inset

 mit 
\begin_inset Formula $p_{i}=\left|P_{i}\right|$
\end_inset

 und 
\begin_inset Formula $p_{1}<\cdots<p_{k}$
\end_inset

.
 
\begin_inset Formula 
\begin{eqnarray*}
\left|\mathrm{Stab}_{U}\left\{ \mathcal{P}\right\} \right| & \leqslant & k!\prod_{P\in\mathcal{P}}\left|P\right|!\\
 & = & k!p_{1}!\cdots p_{k}!
\end{eqnarray*}

\end_inset


\end_layout

\begin_layout Proof
Ohne Beschränkung der Annahme ist 
\begin_inset Formula $p_{k-1}>1$
\end_inset

, denn sonst ist 
\begin_inset Formula $p_{k}=n-\left(k-1\right)$
\end_inset

, und einer der folgenden Fälle tritt nach 
\begin_inset Formula $\min\left\{ k,n-k\right\} <\frac{8}{\epsilon}\frac{\log s}{\log n}$
\end_inset

 ein:
\end_layout

\begin_deeper
\begin_layout Case
\begin_inset Formula $k<\frac{8}{\epsilon}\frac{\log s}{\log n}<\frac{33}{\epsilon}\frac{\log s}{\log n}$
\end_inset

, so ist 
\begin_inset Formula $p_{k}=n-\left(k-1\right)\geqslant n-\frac{33}{\epsilon}\frac{\log s}{\log n}$
\end_inset

.
\end_layout

\begin_layout Case
\begin_inset Formula $k>n-\frac{8}{\epsilon}\frac{\log s}{\log n}\geqslant n-\frac{8}{\epsilon}\frac{n^{1-\epsilon}}{\log n}$
\end_inset

, und es folgt für hinreichend große 
\begin_inset Formula $n\geqslant\exp\frac{8}{\epsilon^{2}}$
\end_inset

 ein Widerspruch zu der Annahme 
\begin_inset Formula $\left|\mathcal{P}\right|\leqslant\frac{n}{2}$
\end_inset

:
\begin_inset Formula 
\begin{eqnarray*}
\left|\mathcal{P}\right|=k & > & n-\epsilon n^{1-\epsilon}\\
 & = & n-\frac{\epsilon}{n^{\epsilon}}n\\
 & > & \frac{n}{2}
\end{eqnarray*}

\end_inset


\end_layout

\end_deeper
\begin_layout Proof
Die Umverteilung aus dem vorhergehenden Beweis wird nun wiederholt verwendet,
 um jeweils das erste Element mit 
\begin_inset Formula $p_{i}>1$
\end_inset

 zu Gunsten des letzten Elements mit 
\begin_inset Formula $p_{j}<p_{k-1}$
\end_inset

 zu verkleinern, so dass alle Terme 
\begin_inset Formula $p_{1}\cdots p_{k-1}$
\end_inset

 entweder den Wert 
\begin_inset Formula $1$
\end_inset

 oder 
\begin_inset Formula $p_{k-1}$
\end_inset

 bekommen.
 Der letzte Term 
\begin_inset Formula $p_{i}$
\end_inset

 mit 
\begin_inset Formula $1<p_{i}<p_{k-1}$
\end_inset

 wird zu 
\begin_inset Formula $p_{k-1}$
\end_inset

 aufgerundet.
\begin_inset Formula 
\[
p\coloneqq p_{k-1}
\]

\end_inset

 
\begin_inset Formula 
\begin{eqnarray*}
\left|\mathrm{Stab}_{U}\left\{ \mathcal{P}\right\} \right| & \leqslant & k!p_{1}!\cdots p!p_{k}!\\
 & \leqslant & k!\underset{k-\ell-1}{\underbrace{1!\cdots1!}}p_{i}!\underset{\ell-1}{\underbrace{p!\cdots p!}}p_{k}!\\
 & \leqslant & k!\left(p!\right)^{\ell}p_{k}!
\end{eqnarray*}

\end_inset


\end_layout

\begin_layout Proof
Hierbei ist 
\begin_inset Formula $\ell$
\end_inset

 wie folgt beschränkt:
\begin_inset Formula 
\begin{eqnarray*}
k-\ell-1+\ell p\leqslant & \sum_{i=1}^{k-1}p_{i} & \leqslant k-1+\left(\ell+1\right)\left(p-1\right)
\end{eqnarray*}

\end_inset


\end_layout

\begin_layout Proof
Daher gilt:
\begin_inset Formula 
\begin{eqnarray*}
\left|\mathrm{Stab}_{U}\left\{ \mathcal{P}\right\} \right| & \leqslant & k!\left(p!\right)^{\ell}p_{k}\\
 & = & k!\left(p!\right)^{\ell}\left(n-\sum_{i=1}^{k-1}p_{i}\right)\\
 & \leqslant & k!\left(p!\right)^{\ell}\left(n-\left(k-1-\ell+\ell p\right)\right)!\\
 & = & k!\left(p!\right)^{\ell}\left(n-k-\ell\left(p-1\right)+1\right)!\\
 & \leqslant & \left(p!\right)^{\ell}\left(n-\ell\left(p-1\right)+1\right)!
\end{eqnarray*}

\end_inset


\end_layout

\begin_layout Proof
Die Stirling-Approximation 
\begin_inset Formula $x!\leqslant e\sqrt{x}\left(\frac{x}{e}\right)^{x}$
\end_inset

 erlaubt die folgende Abschätzung:
\begin_inset Formula 
\begin{eqnarray*}
\left|\mathrm{Stab}_{U}\left\{ \mathcal{P}\right\} \right| & \leqslant & \left(p!\right)^{\ell}e\sqrt{n}\left(\frac{n}{e}\right)^{n-\ell\left(p-1\right)+1}\\
 & \leqslant & \left(e\sqrt{p}\left(\frac{p}{e}\right)^{p}\right)^{\ell}e\sqrt{n}\left(\frac{n}{e}\right)^{n-\ell\left(p-1\right)+1}
\end{eqnarray*}

\end_inset


\end_layout

\begin_layout Proof
Wenn diese Abschätzung in 
\begin_inset Formula $s$
\end_inset

 eingesetzt wird, erhalten wir die folgende Ungleichung:
\begin_inset Formula 
\begin{eqnarray*}
s & = & \frac{n!}{\left|\mathrm{Stab}_{U}\left\{ \mathcal{P}\right\} \right|}\\
 & \geqslant & \frac{\left(\frac{n}{e}\right)^{n}}{\left(e\sqrt{p}\left(\frac{p}{e}\right)^{p}\right)^{\ell}e\sqrt{n}\left(\frac{n}{e}\right)^{n-\ell\left(p-1\right)+1}}\\
 & = & \frac{e^{p\ell}\cdot e^{n-\ell\left(p-1\right)+1}}{e^{n}\cdot e^{\ell}\cdot e}\cdot\frac{n^{n}}{\left(\sqrt{p}p^{p}\right)^{\ell}\sqrt{n}n^{n-\ell\left(p-1\right)+1}}\\
 & = & \frac{n^{\ell\left(p-1\right)-\frac{3}{2}}}{p^{\ell\left(p+\frac{1}{2}\right)}}
\end{eqnarray*}

\end_inset


\end_layout

\begin_layout Proof
Für den Logarithmus 
\begin_inset Formula $\log s$
\end_inset

 gilt dann:
\begin_inset Formula 
\begin{eqnarray*}
\log s & \geqslant & \log\frac{n^{\ell\left(p-1\right)-\frac{3}{2}}}{p^{\ell\left(p+\frac{1}{2}\right)}}\\
 & \geqslant & \left(\ell\left(p-1\right)-\frac{3}{2}\right)\log n-\ell\left(p+\frac{1}{2}\right)\log p\\
 & \geqslant & \left(\ell\left(p-1\right)-\frac{3}{2}\right)\log n-\ell\left(p+\frac{1}{2}\right)\log p\\
 & = & \ell\left(p+\frac{1}{2}\right)\left(\log n-\log p\right)-\frac{3}{2}\left(\ell-1\right)\log n\\
 & \geqslant & \ell p\log\frac{n}{p}-\frac{3}{2}\left(\ell-1\right)\log n
\end{eqnarray*}

\end_inset


\end_layout

\begin_layout Proof
Weil 
\begin_inset Formula $n<s$
\end_inset

 und 
\begin_inset Formula $\ell\geqslant1$
\end_inset

, folgt:
\begin_inset Formula 
\begin{eqnarray*}
\frac{5}{2}\log s & \geqslant & \ell p\log\frac{n}{p}-\frac{3}{2}\ell\log n\\
 & \geqslant & p\log\frac{n}{p}-\frac{3}{2}\log n\\
\frac{8}{2}\log s & \geqslant & p\log\frac{n}{p}
\end{eqnarray*}

\end_inset


\end_layout

\begin_layout Proof
Und weil 
\begin_inset Formula $p<p_{k}$
\end_inset

 und 
\begin_inset Formula $p+p_{k}<n$
\end_inset

 folgt 
\begin_inset Formula $\frac{n}{p}\geqslant2$
\end_inset

, und daher 
\begin_inset Formula $\log\frac{n}{p}\geqslant1$
\end_inset

:
\begin_inset Formula 
\begin{eqnarray*}
p & \leqslant & 4\log s
\end{eqnarray*}

\end_inset


\end_layout

\begin_layout Proof
Mit 
\begin_inset Formula $p\leqslant4\log s\leqslant4n^{\left(1-\epsilon\right)}$
\end_inset

 und 
\begin_inset Formula $\log p\leqslant\left(1-\epsilon\right)\log n+2$
\end_inset

 folgt dann:
\begin_inset Formula 
\begin{eqnarray*}
\frac{5}{2}\log s & \geqslant & \ell p\left(\log n-\left(1-\epsilon\right)\log n-2\right)-\frac{3}{2}\ell\log n\\
 & \geqslant & \frac{\epsilon\ell p}{2}\log n-\frac{3}{2}\ell\log n\\
5\frac{\log s}{\log n} & \geqslant & \ell\left(p\epsilon-3\right)
\end{eqnarray*}

\end_inset


\end_layout

\begin_deeper
\begin_layout Case
Wenn 
\begin_inset Formula $3\leqslant\frac{p\epsilon}{2}$
\end_inset

, dann folgt 
\begin_inset Formula $\frac{10}{\epsilon}\frac{\log s}{\log n}\geqslant\ell p$
\end_inset

.
 Es gilt: 
\begin_inset Formula 
\begin{eqnarray*}
\sum_{i=1}^{k-1}p_{i} & \leqslant & k-1+\left(\ell+1\right)\left(p-1\right)\\
 & \leqslant & k-1+2\ell p\\
 & \leqslant & \frac{8}{\epsilon}\frac{\log s}{\log n}+\frac{20}{\epsilon}\frac{\log s}{\log n}<\frac{33}{\epsilon}\frac{\log s}{\log n}
\end{eqnarray*}

\end_inset


\end_layout

\begin_layout Case
Sonst ist 
\begin_inset Formula $p<\frac{6}{\epsilon}$
\end_inset

, und es folgt 
\begin_inset Formula $\log p<3-\log\epsilon$
\end_inset

.
 Es gilt:
\begin_inset Formula 
\begin{eqnarray*}
\frac{5}{2}\log s & \geqslant & \ell p\left(\log n-\log p\right)-\frac{3}{2}\ell\log n\\
 & \geqslant & \ell p\left(\log n-\left(3-\log\epsilon\right)\right)-\frac{3}{2}\ell\log n
\end{eqnarray*}

\end_inset

Und nach 
\begin_inset Formula $\log n\geqslant\frac{8}{\epsilon^{2}}\geqslant2\left(3-\log\epsilon\right)$
\end_inset

 folgt:
\begin_inset Formula 
\begin{eqnarray*}
\frac{5}{2}\log s & \geqslant & \frac{\ell p}{2}\log n-\frac{3}{2}\ell\log n\\
 & = & \frac{\ell\left(p-3\right)}{2}\log n
\end{eqnarray*}

\end_inset


\end_layout

\begin_deeper
\begin_layout Case
Falls 
\begin_inset Formula $p\geqslant5$
\end_inset

, dann folgt 
\begin_inset Formula $\frac{25}{2\epsilon}\frac{\log s}{\log n}\geqslant\ell p$
\end_inset

 und damit:
\begin_inset Formula 
\[
\sum_{i=1}^{k-1}p_{i}\leqslant\frac{8}{\epsilon}\frac{\log s}{\log n}+\frac{25}{\epsilon}\frac{\log s}{\log n}=\frac{33}{\epsilon}\frac{\log s}{\log n}
\]

\end_inset


\end_layout

\begin_layout Case
Sonst ist 
\begin_inset Formula $p<4$
\end_inset

, und damit:
\begin_inset Formula 
\begin{eqnarray*}
\sum_{i=1}^{k-1}p_{i} & \leqslant & p\left(k-1\right)\\
 & \leqslant & 4\cdot\frac{8}{\epsilon}\frac{\log s}{\log n}\leqslant\frac{33}{\epsilon}\frac{\log s}{\log n}
\end{eqnarray*}

\end_inset


\end_layout

\end_deeper
\end_deeper
\begin_layout Section
Träger im Schaltkreis
\end_layout

\begin_layout Definition
Sei 
\begin_inset Formula $\mathcal{C}=\left(G,W,\Sigma,\Omega,U\right)$
\end_inset

 ein rigider, symmetrischer Schaltkreis über dem Universum 
\begin_inset Formula $U$
\end_inset

.
 
\end_layout

\begin_deeper
\begin_layout Enumerate
Der 
\series bold
Stabilisator
\series default
 eines Gates 
\begin_inset Formula $g\in G$
\end_inset

 sei die Gruppe aller Permutationen von 
\begin_inset Formula $U$
\end_inset

, deren induzierter Automorphismus 
\begin_inset Formula $v$
\end_inset

 fixiert: 
\begin_inset Formula 
\[
\mathrm{Stab}_{\mathcal{C}}\left(g\right)\coloneqq\left\{ \pi\in\mathrm{Sym}_{U}\mid\hat{\pi}g=g\right\} 
\]

\end_inset


\end_layout

\begin_layout Enumerate
Eine Partition 
\begin_inset Formula $\mathcal{P}$
\end_inset

 von 
\begin_inset Formula $U$
\end_inset

 sei 
\series bold
Träger
\series default
 von 
\begin_inset Formula $g\in G$
\end_inset

, wenn sie ein Träger von 
\begin_inset Formula $\mathrm{Stab}_{\mathcal{C}}\left(g\right)$
\end_inset

 ist.
 Sei 
\begin_inset Formula $\mathrm{SP}\left(g\right)\coloneqq\mathrm{SP}\left(\mathrm{Stab}_{\mathcal{C}}\left(g\right)\right)$
\end_inset

 der gröbste Träger von 
\begin_inset Formula $g$
\end_inset

.
 (Wenn 
\begin_inset Formula $g$
\end_inset

 zum Beispiel von allen induzierten Automorphismen fixiert wird, dann ist
 
\begin_inset Formula $\mathrm{SP}\left(g\right)=\mathcal{P}_{\max}=\left\{ U\right\} $
\end_inset

.)
\end_layout

\begin_layout Enumerate
Der 
\series bold
Orbit
\series default
 von 
\begin_inset Formula $g\in G$
\end_inset

 sei die Menge der Gates, auf die 
\begin_inset Formula $g$
\end_inset

 durch einen Automorphismus abgebildet wird:
\begin_inset Formula 
\[
\mathrm{Orb}_{\mathcal{C}}\left(g\right)\coloneqq\left\{ \hat{\pi}g\mid\pi\in\mathrm{Sym}_{U}\right\} 
\]

\end_inset

 
\end_layout

\end_deeper
\begin_layout --Separator--

\end_layout

\begin_layout Definition
Für 
\begin_inset Formula $X=\left\{ x_{1},\cdots,x_{k}\right\} \subseteq U$
\end_inset

 sei 
\begin_inset Formula $\mathcal{P}_{X}\coloneqq\left\{ \left\{ x_{1}\right\} ,\cdots,\left\{ x_{k}\right\} ,U\backslash X\right\} $
\end_inset

 die gröbste Partition, die jedes Element 
\begin_inset Formula $x\in X$
\end_inset

 von jedem anderen Element 
\begin_inset Formula $u\in U$
\end_inset

 trennt.
\end_layout

\begin_layout Definition
Für eine Partition 
\begin_inset Formula $\mathcal{P}\in\mathrm{Part}_{U}$
\end_inset

 und jede Menge 
\begin_inset Formula $P\in\mathcal{P}$
\end_inset

 ist offensichtlich 
\begin_inset Formula $\mathcal{P}_{U\backslash P}\preceq\mathcal{P}$
\end_inset

 eine feinere Partition als 
\begin_inset Formula $\mathcal{P}$
\end_inset

: Es bleibt 
\begin_inset Formula $P=U\backslash\left(U\backslash P\right)\in\mathcal{P}\cap\mathcal{P}_{P}$
\end_inset

 erhalten, und alle übrigen Mengen werden in einzelne Elemente aufgeteilt.
\end_layout

\begin_layout Definition
Sei 
\begin_inset Formula $\left\Vert \mathcal{P}\right\Vert \coloneqq\left|U\right|-\max_{P\in\mathcal{P}}\left(P\right)$
\end_inset

 die Summe der Größen aller Mengen außer der größten.
 Somit ist 
\begin_inset Formula $1+\left\Vert \mathcal{P}\right\Vert $
\end_inset

 die minimale Größe einer Partition 
\begin_inset Formula $\mathcal{P}_{P}$
\end_inset

, die aus 
\begin_inset Formula $\mathcal{P}$
\end_inset

 entsteht: Die größte Partition bleibt unverändert, während alle kleineren
 aufgeteilt werden.
\end_layout

\begin_layout Definition
Wir benutzen die Abkürzung 
\begin_inset Formula $\mathrm{SP}\left(\mathcal{C}\right)$
\end_inset

 für einen Schaltkreis 
\begin_inset Formula $\mathcal{C}=\left(G,W,\Sigma,\Omega,U\right)$
\end_inset

 wie folgt:
\begin_inset Formula 
\[
\mathrm{SP}\left(\mathcal{C}\right)\coloneqq\max_{g\in G}\left(\left\Vert \mathrm{SP}\left(g\right)\right\Vert \right)
\]

\end_inset


\end_layout

\begin_layout Definition
Für 
\begin_inset Formula $X,X'\subseteq U$
\end_inset

 gilt 
\begin_inset Formula $X\subseteq X'\Leftrightarrow\mathcal{P}_{X'}\preceq\mathcal{P}_{X}$
\end_inset

.
 Die größere Teilmenge 
\begin_inset Formula $X'$
\end_inset

 trennt mehr Elemente von 
\begin_inset Formula $U$
\end_inset

 voneinander, und ist somit feiner.
\end_layout

\begin_layout Standard
Anderson und Dawar verwenden die beschriebenen Lemmata (
\begin_inset CommandInset ref
LatexCommand ref
reference "lem:lemma-19"

\end_inset

 und 
\begin_inset CommandInset ref
LatexCommand ref
reference "lem:lemma-20"

\end_inset

), um eine obere Schranke für den Träger jedes Gates 
\begin_inset Formula $g$
\end_inset

 nachzuweisen:
\end_layout

\begin_layout Lemma
(Theorem 21 aus 
\begin_inset CommandInset citation
LatexCommand cite
key "anderson_et_al:LIPIcs:2014:4445"

\end_inset

)
\end_layout

\begin_layout Lemma
Für 
\begin_inset Formula $\epsilon\in\mathbb{R}_{\left[\frac{2}{3},1\right]}$
\end_inset

, 
\begin_inset Formula $n>2^{\frac{56}{\epsilon^{2}}}$
\end_inset

, 
\begin_inset Formula $U=\left[1,n\right]$
\end_inset

 und einen rigiden (siehe Definition 
\begin_inset CommandInset ref
LatexCommand ref
reference "def:Rigidität"

\end_inset

) symmetrischen Schaltkreis 
\begin_inset Formula $\mathcal{C}$
\end_inset

 über 
\begin_inset Formula $U$
\end_inset

 gilt:
\end_layout

\begin_layout Lemma
Wenn der Orbit jedes Gates subexponentiell ist (für ein 
\begin_inset Formula $\mathcal{C}$
\end_inset

 mit 
\begin_inset Formula $\mathrm{poly}\left(n\right)$
\end_inset

-Größe garantiert),
\begin_inset Formula 
\[
s\coloneqq\max_{g\in G}\left(\mathrm{Orb}_{\mathcal{C}}\left(g\right)\right)\leqslant2^{n^{1-\epsilon}}
\]

\end_inset

dann gilt 
\begin_inset Formula $\mathrm{SP}\left(\mathcal{C}\right)\leqslant\frac{33}{\epsilon}\frac{\log s}{\log n}$
\end_inset

.
 
\end_layout

\begin_layout Corollary
\begin_inset CommandInset label
LatexCommand label
name "cor:korollar-23"

\end_inset

(Korollar 23 aus 
\begin_inset CommandInset citation
LatexCommand cite
key "anderson_et_al:LIPIcs:2014:4445"

\end_inset

) Für jede symmetrische, rigide 
\begin_inset Formula $\left(\sigma,\mathbb{B}\right)$
\end_inset

-Schaltkreisfamilie mit 
\begin_inset Formula $\mathrm{poly}\left(n\right)$
\end_inset

-Größe gilt 
\begin_inset Formula $\mathrm{SP}\left(\mathcal{C}_{n}\right)\in\mathcal{O}\left(1\right)$
\end_inset

.
\end_layout

\begin_layout Chapter
Von Schaltkreisfamilien zu Formeln
\end_layout

\begin_layout Section
Berechnung von rigiden Schaltkreisen
\end_layout

\begin_layout Standard
Um die Orbits und Träger jedes Gates eines Schaltkreises zu berechnen, wird
 nun gefordert, dass der Schaltkreis 
\emph on
rigide 
\emph default
gemäß Definition 
\begin_inset CommandInset ref
LatexCommand ref
reference "def:Rigidität"

\end_inset

 ist.
\end_layout

\begin_layout Standard
Die Rigidität kann nicht in jeder booleschen Basis 
\begin_inset Formula $\mathbb{B}$
\end_inset

 problemlos hergestellt werden, ohne die Tiefe zu verändern - während redundante
 Vorgänger von 
\begin_inset Formula $\mathtt{AND}$
\end_inset

- und 
\begin_inset Formula $\mathtt{OR}$
\end_inset

-Gates ohne Beschränkung der Annahme entfernt werden können, ist dies zum
 Beispiel bei 
\begin_inset Formula $\mathtt{MAJ}$
\end_inset

- und 
\begin_inset Formula $\mathtt{XOR}$
\end_inset

-Gates nicht möglich.
\end_layout

\begin_layout Standard
In 
\begin_inset CommandInset citation
LatexCommand cite
key "anderson_et_al:LIPIcs:2014:4445"

\end_inset

 werden redundante Gates 
\begin_inset Formula $H=\left(g_{1},\cdots,g_{k}\right)$
\end_inset

 
\begin_inset Quotes gld
\end_inset

in Reihe
\begin_inset Quotes grd
\end_inset

 geschaltet, so dass jedes Gate 
\begin_inset Formula $g_{i}\in H\backslash\left\{ g_{1}\right\} $
\end_inset

 durch ein 
\begin_inset Formula $\mathtt{AND}$
\end_inset

-Gate mit dem Vorgänger 
\begin_inset Formula $g_{i-1}$
\end_inset

 ersetzt wird.
 Dies vergrößert jedoch die Tiefe des Schaltkreises unbeschränkt.
\end_layout

\begin_layout Standard
Um die Tiefe als Parameter zu erhalten, werden wir stattdessen die Definition
 des Schaltkreises auf Multigraphen erweitern:
\end_layout

\begin_layout Definition

\series bold
Multimenge
\end_layout

\begin_layout Definition
Eine Multimenge 
\begin_inset Formula $\mathcal{W}:W\rightarrow\mathbb{N}$
\end_inset

 sei eine Abbildung einer Menge auf 
\begin_inset Formula $\mathbb{N}$
\end_inset

, wobei 
\begin_inset Formula $\mathcal{W}\left(x\right)$
\end_inset

 die Vielfachheit von 
\begin_inset Formula $x$
\end_inset

 in 
\begin_inset Formula $\mathcal{W}$
\end_inset

 angibt.
\end_layout

\begin_layout Standard
Nach der in Definition 
\begin_inset CommandInset ref
LatexCommand ref
reference "def:Relation"

\end_inset

 eingeführten Notation entspricht für eine gewöhnliche Relation 
\begin_inset Formula $W\subseteq G^{2}$
\end_inset

 die Funktion 
\begin_inset Formula $\left[W\right]:G^{2}\rightarrow\left\{ 0,1\right\} $
\end_inset

 gerade der äquivalenten Multimenge.
 Die Größe der Multimenge 
\begin_inset Formula $\left|\mathcal{W}\right|\coloneqq\sum_{w\in\mathcal{W}}\mathcal{W}\left(x\right)$
\end_inset

 sei die Summe der Vielfachheiten aller Elemente.
\end_layout

\begin_layout Definition

\series bold
Multischaltkreis
\end_layout

\begin_layout Definition
Ein 
\begin_inset Formula $\left(\sigma,\mathbb{B}_{\mathrm{std}}\right)$
\end_inset

-Multischaltkreis 
\begin_inset Formula $\mathcal{C}=\left(G,\mathcal{W},\Sigma,\Omega,U\right)$
\end_inset

 ist analog zum 
\begin_inset Formula $\left(\sigma,\mathbb{B}\right)$
\end_inset

-Schaltkreis definiert, aber 
\begin_inset Formula $\left(G,\mathcal{W}\right)$
\end_inset

 bildet einen azyklischen Multigraphen:
\begin_inset Formula 
\[
\mathcal{W}:G\times G\rightarrow\mathbb{N}
\]

\end_inset


\end_layout

\begin_layout Definition
Formal beschreiben wir den Multischaltkreis durch eine 
\begin_inset Formula $\tau_{\sigma,\mathbb{B},k}$
\end_inset

-Struktur 
\begin_inset Formula $\mathcal{C}$
\end_inset

 über einem Universum 
\begin_inset Formula $G\uplus U\uplus\left[0,\left|\mathcal{W}\right|\right]$
\end_inset

 ausgewertet:
\begin_inset Formula 
\begin{eqnarray*}
\tau_{\sigma,\mathbb{B},k}' & \coloneqq & \left\{ W/3,\left(\Sigma_{s}/1\right)_{s\in\mathbb{B}\uplus\left\{ \mathbf{0},\mathbf{1},\mathtt{NOT}\right\} },\left(\Sigma_{R}/1+k\right)_{R/k\in\sigma},\Omega/k+1\right\} \\
\mathrm{ar}\left(W\right) & \coloneqq & 3\\
W^{\mathcal{C}} & = & \left\{ \left(g,g',n\right)\in G^{2}\times\left[0,\left|\mathcal{W}\right|\right]\mid\mathcal{W}\left(g,g'\right)=n\right\} 
\end{eqnarray*}

\end_inset


\end_layout

\begin_layout Definition
Für die Auswertung eines internen Gates gilt analog zu 
\begin_inset CommandInset ref
LatexCommand ref
reference "def:Auswertung-von-Schaltkreisen"

\end_inset

:
\begin_inset Formula 
\begin{eqnarray*}
j_{1} & \coloneqq & \sum_{h\in G}\left(\mathcal{C}\left[\mathfrak{A}\right]\left(h\right)\cdot\mathcal{W}\left(h,g\right)\right)\\
j_{0} & \coloneqq & \sum_{h\in G}\mathcal{W}\left(h,g\right)-j_{1}\\
\mathcal{C}\left[\mathfrak{A}\right]\left(g\right) & \coloneqq & \left[\Sigma\left(g\right)\right]\left(j_{0},j_{1}\right)
\end{eqnarray*}

\end_inset


\end_layout

\begin_layout Standard
Die Größe 
\begin_inset Formula $\left|\mathcal{C}\right|$
\end_inset

 eines Multischaltkreises 
\begin_inset Formula $\mathcal{C}$
\end_inset

 sei die Summe seiner Gates und Kanten:
\begin_inset Formula 
\[
\left|\mathcal{C}\right|\coloneqq\left|G\right|+\sum_{g,g'\in G^{2}}\mathcal{W}\left(g,g'\right)
\]

\end_inset


\end_layout

\begin_layout Standard
Die Symmetrie wird auf natürliche Weise angepasst: Der von 
\begin_inset Formula $\pi$
\end_inset

 induzierte Automorphismus 
\begin_inset Formula $\hat{\pi}\in\mathrm{Aut}_{\mathcal{C}}$
\end_inset

 bildet 
\begin_inset Formula $\left(G,\mathcal{W}\right)$
\end_inset

 auf den isomorphen Multigraphen 
\begin_inset Formula $\left(\hat{\pi}G,\hat{\pi}\mathcal{W}\right)$
\end_inset

 mit 
\begin_inset Formula $\mathcal{W}\left(\hat{\pi}g,\hat{\pi}g'\right)=\mathcal{W}\left(g,g'\right)$
\end_inset

 ab.
\end_layout

\begin_layout Standard
Die Rigidität wird ebenfalls angepasst: Ein rigider Schaltkreis enthält
 keine Gates 
\begin_inset Formula $g,g'$
\end_inset

 mit 
\begin_inset Formula $\Sigma\left(g\right)=\Sigma\left(g'\right)$
\end_inset

 und 
\begin_inset Formula $\mathcal{W}\left(h,g\right)=\mathcal{W}\left(h,g'\right)$
\end_inset

 für alle 
\begin_inset Formula $h\in G$
\end_inset

.
\end_layout

\begin_layout Lemma
\begin_inset CommandInset label
LatexCommand label
name "lem:algo-rigide"

\end_inset

(nach Lemma 24 aus 
\begin_inset CommandInset citation
LatexCommand cite
key "anderson_et_al:LIPIcs:2014:4445"

\end_inset

)
\end_layout

\begin_layout Lemma
Es existiert ein Algorithmus, der einen beliebigen 
\begin_inset Formula $\left(\sigma,\mathbb{B}\right)$
\end_inset

-Schaltkreis 
\begin_inset Formula $\mathcal{C}$
\end_inset

 in einen rigiden Multischaltkreis 
\begin_inset Formula $\hat{\mathcal{C}}$
\end_inset

 umwandelt, wobei 
\begin_inset Formula $T\left(\hat{\mathcal{C}}\right)=T\left(\mathcal{C}\right)$
\end_inset

 und 
\begin_inset Formula $\left|\hat{\mathcal{C}}\right|\leqslant\left|\mathcal{C}\right|+\left|\mathcal{C}\right|^{2}$
\end_inset

.
 Der Algorithmus ist 
\begin_inset Formula $\mathrm{poly}\left(\left|G\right|+\left|U\right|\right)$
\end_inset

-zeitbeschränkt.
\end_layout

\begin_layout Proof
Sei 
\begin_inset Formula $\mathcal{C}''=\left(G,W,\Sigma,\Omega,U\right)$
\end_inset

 ein beliebiger 
\begin_inset Formula $k$
\end_inset

-stelliger Schaltkreis.
 Wir erzeugen zunächst den äquivalenten Multischaltkreis 
\begin_inset Formula $\mathcal{C}\coloneqq\left(G,\mathcal{W},\Sigma,\Omega,U\right)$
\end_inset

 mit 
\begin_inset Formula $\mathcal{W}\coloneqq\left[W\right]$
\end_inset

, wobei die Tiefe unverändert bleibt und die Größe zu 
\begin_inset Formula $\left|\mathcal{C}\right|=\left|G\right|+\left|W\right|\leqslant\left|\mathcal{C}''\right|+\left|\mathcal{C}''\right|^{2}$
\end_inset

 wird.
\end_layout

\begin_layout Proof
Der Multischaltkreis 
\begin_inset Formula $\mathcal{C}$
\end_inset

 wird nun wiederholt reduziert, bis er rigide ist: Berechne dazu die Äquivalenzr
elation 
\begin_inset Formula $\sim_{\mathcal{C}}\subseteq G\times G$
\end_inset

, so dass 
\begin_inset Formula $g\sim_{\mathcal{C}}g'$
\end_inset

 genau dann wenn
\end_layout

\begin_deeper
\begin_layout Enumerate
\begin_inset Formula $\Sigma\left(g\right)=\Sigma\left(g'\right)$
\end_inset

, und
\end_layout

\begin_layout Enumerate
für alle 
\begin_inset Formula $h\in W$
\end_inset

 gilt 
\begin_inset Formula $\mathcal{W}\left(h,g\right)=\mathcal{W}\left(h,g'\right)$
\end_inset

.
\end_layout

\end_deeper
\begin_layout Proof
Wenn keine Gates 
\begin_inset Formula $g,g'\in G$
\end_inset

 mit 
\begin_inset Formula $g\sim_{\mathcal{C}}g'$
\end_inset

 mehr existieren, so ist der Schaltkreis rigide, und der Algorithmus ist
 fertig.
\end_layout

\begin_layout Proof
Ansonsten sei 
\begin_inset Formula $E\subseteq G$
\end_inset

 eine Äquivalenzklasse von 
\begin_inset Formula $\sim_{\mathcal{C}}$
\end_inset

 mit mindestens zwei Gates und minimaler Tiefe 
\begin_inset Formula $T\left(E\right)$
\end_inset

.
 
\end_layout

\begin_layout Proof
Wir berechnen die Funktion 
\begin_inset Formula $c:G\rightarrow\left[0,\left|E\right|\right]$
\end_inset

, die für jedes Gate 
\begin_inset Formula $h\in G$
\end_inset

 die Vorgänger in 
\begin_inset Formula $E$
\end_inset

 zählt:
\begin_inset Formula 
\[
c\left(h\right)\coloneqq\sum_{g'\in E}\mathcal{W}\left(g',h\right)
\]

\end_inset


\end_layout

\begin_layout Proof
Sei 
\begin_inset Formula $g\in E$
\end_inset

 beliebig, und sei 
\begin_inset Formula $f_{g,E}\left(\mathcal{C}\right)\coloneqq\left(G',\mathcal{W}',\Sigma',\Omega',U\right)$
\end_inset

 der folgende Multischaltkreis:
\begin_inset Formula 
\begin{eqnarray*}
G' & \coloneqq & G\backslash\left(E\backslash\left\{ g\right\} \right)\\
\Sigma' & \coloneqq & \Sigma_{\backslash E\backslash\left\{ g\right\} }
\end{eqnarray*}

\end_inset


\end_layout

\begin_deeper
\begin_layout Enumerate
Es werden die eingehenden Kanten der Gates 
\begin_inset Formula $E\backslash\left\{ g\right\} $
\end_inset

 entfernt.
 Außerdem werden die von 
\begin_inset Formula $E$
\end_inset

 ausgehenden Kanten entfernt und durch Kanten von 
\begin_inset Formula $g$
\end_inset

 ersetzt:
\begin_inset Formula 
\[
\mathcal{W}'\left(h,i\right)\coloneqq\begin{cases}
c\left(i\right) & \mathrm{falls}\,h=g\\
0 & \mathrm{falls}\,h\in E\backslash\left\{ g\right\} \\
0 & \mathrm{falls}\,i\in E\backslash\left\{ g\right\} \\
\mathcal{W}\left(h,i\right) & \mathrm{sonst}
\end{cases}
\]

\end_inset


\end_layout

\begin_layout Enumerate
Die Output-Funktion wird wie folgt angepasst:
\begin_inset Formula 
\[
\Omega'\left(\bar{t}\right)\coloneqq\begin{cases}
g & \mathrm{falls}\,\Omega\left(t\right)\in E\backslash\left\{ g\right\} \\
\Omega\left(t\right) & \mathrm{sonst}
\end{cases}
\]

\end_inset


\end_layout

\end_deeper
\begin_layout Proof
Der Schaltkreis 
\begin_inset Formula $\mathcal{C}'\coloneqq f_{g,E}\left(\mathcal{C}\right)$
\end_inset

 ist äquivalent zu dem Schaltkreis 
\begin_inset Formula $\mathcal{C}$
\end_inset

 über jeder Struktur 
\begin_inset Formula $\mathfrak{A}\in\mathbf{FIN}^{U}\left(\sigma\right)$
\end_inset

, was induktiv über die Tiefe (ausgehend von 
\begin_inset Formula $g$
\end_inset

) nachgewiesen wird:
\end_layout

\begin_deeper
\begin_layout Enumerate
Offensichtlich gilt 
\begin_inset Formula $\mathcal{C}'\left[\mathfrak{A}\right]\left(g\right)=\mathcal{C}\left[\mathfrak{A}\right]\left(g\right)=\mathcal{C}\left[\mathfrak{A}\right]\left(g'\right)$
\end_inset

 für alle 
\begin_inset Formula $g'\in E$
\end_inset

, da die Gates die gleichen Vorgänger und die gleiche Beschriftung 
\begin_inset Formula $\Sigma'\left(g\right)=\Sigma\left(g\right)=\Sigma\left(g'\right)$
\end_inset

 besitzen.
\end_layout

\begin_layout Enumerate
Für jeden direkten Nachfolger 
\begin_inset Formula $h\in G$
\end_inset

 eines Gates 
\begin_inset Formula $g'\in E$
\end_inset

 gilt:
\begin_inset Formula 
\begin{eqnarray*}
j_{1} & \coloneqq & \sum_{i\in G'}\mathcal{W}\left(i,h\right)\cdot\mathcal{C}\left[\mathfrak{A}\right]\\
j_{0} & \coloneqq & \sum_{i\in G'}\mathcal{W}\left(i,h\right)-j_{1}\\
j_{1}' & \coloneqq & \sum_{i\in G'}\mathcal{W}'\left(i,h\right)\cdot\mathcal{C}'\left[\mathfrak{A}\right]\\
j_{0}' & \coloneqq & \sum_{i\in G'}\mathcal{W}'\left(i,h\right)-j_{1}'
\end{eqnarray*}

\end_inset

Aus der Definition von 
\begin_inset Formula $\mathcal{W}'$
\end_inset

 folgt 
\begin_inset Formula $j_{1}=j_{1}'$
\end_inset

 und 
\begin_inset Formula $j_{0}=j_{0}'$
\end_inset

, da die 
\begin_inset Formula $c\left(h\right)-1$
\end_inset

 entfernten Vorgänger 
\begin_inset Formula $g'\in E\backslash\left\{ g\right\} $
\end_inset

 durch 
\begin_inset Formula $c\left(h\right)-1$
\end_inset

 zusätzliche 
\begin_inset Formula $\left(g,h\right)$
\end_inset

-Kanten ersetzt wurden, und 
\begin_inset Formula $\mathcal{C}\left[\mathfrak{A}\right]\left(g\right)=\mathcal{C}\left[\mathfrak{A}\right]\left(g'\right)$
\end_inset

.
 Daher gilt: 
\begin_inset Formula 
\begin{eqnarray*}
\mathcal{C}'\left[\mathfrak{A}\right]\left(g\right) & \coloneqq & \left[\Sigma'\left(g\right)\right]\left(j_{0}',j_{1}'\right)\\
 & = & \left[\Sigma\left(g\right)\right]\left(j_{0},j_{1}\right)\\
 & = & \mathcal{C}\left[\mathfrak{A}\right]
\end{eqnarray*}

\end_inset


\end_layout

\begin_layout Enumerate
Für jedes übrige Gate 
\begin_inset Formula $h\in G$
\end_inset

 folgt die Äquivalenz aus der Induktionsannahme und der Tatsache, dass die
 Vorgänger von 
\begin_inset Formula $h$
\end_inset

 unverändert bleiben.
\end_layout

\begin_layout Standard
Für jedes Tupel 
\begin_inset Formula $\bar{t}\in U^{k}$
\end_inset

 mit 
\begin_inset Formula $\Omega\left(\bar{t}\right)=g'\in E$
\end_inset

 gilt nun:
\begin_inset Formula 
\begin{eqnarray*}
\left\llbracket \mathcal{C}'\right\rrbracket \left(\mathfrak{A},\bar{t}\right) & = & \mathcal{C}'\left[\mathfrak{A}\right]\left(\Omega'\left(\bar{t}\right)\right)\\
 & = & \mathcal{C}'\left[\mathfrak{A}\right]\left(g\right)\\
 & = & \mathcal{C}\left[\mathfrak{A}\right]\left(g\right)\\
 & = & \mathcal{C}\left[\mathfrak{A}\right]\left(g'\right)\\
 & = & \mathcal{C}\left[\mathfrak{A}\right]\left(\Omega\left(\bar{t}\right)\right)=\left\llbracket \mathcal{C}\right\rrbracket \left(\mathfrak{A},\bar{t}\right)
\end{eqnarray*}

\end_inset


\end_layout

\begin_layout Description
Größe: Die Umrechnung von 
\begin_inset Formula $\mathcal{C}$
\end_inset

 zu 
\begin_inset Formula $f_{g,E}\left(\mathcal{C}\right)$
\end_inset

 lässt die Tiefe unverändert, und vergrößert den Schaltkreis nicht: Es werden
 
\begin_inset Formula $\sum_{h\in G}c\left(h\right)$
\end_inset

 Kanten eingefügt und mindestens 
\begin_inset Formula $\sum_{g',h'\in E\times G}$
\end_inset

 Kanten entfernt, wobei gilt:
\begin_inset Formula 
\[
\sum_{h\in G}c\left(h\right)=\sum_{h\in G}\sum_{g'\in E}\mathcal{W}\left(g',h\right)=\sum_{g',h'\in E\times G}
\]

\end_inset


\end_layout

\begin_layout Description
Symmetrie: Wenn alle Äquivalenzklassen 
\begin_inset Formula $\bar{E}=\left(E_{1},\cdots,E_{m}\right)$
\end_inset

 der gleichen Tiefe reduziert werden, dann bewahrt der neue Schaltkreis
 
\begin_inset Formula $f_{g_{1,}E_{1}}\cdots f_{g_{m},E_{m}}\left(\mathcal{C}\right)=\mathcal{C}'$
\end_inset

 die Symmetrie von 
\begin_inset Formula $\mathcal{C}$
\end_inset

:
\end_layout

\begin_deeper
\begin_layout Standard
Sei 
\begin_inset Formula $\pi\in\mathrm{Sym}_{U}$
\end_inset

 eine beliebige Permutation, und 
\begin_inset Formula $\hat{\pi}$
\end_inset

 ein induzierter Automorphismus.
 Offensichtlich muss 
\begin_inset Formula $\hat{\pi}$
\end_inset

 die Äquivalenzklassen 
\begin_inset Formula $\bar{E}$
\end_inset

 aufeinander abbilden, da 
\begin_inset Formula $\hat{\pi}g\sim_{\mathcal{C}}\hat{\pi}g'$
\end_inset

 für alle 
\begin_inset Formula $g\sim_{\mathcal{C}}g'$
\end_inset

 gilt.
\end_layout

\begin_layout Standard
Der Automorphismus 
\begin_inset Formula $\hat{\pi}$
\end_inset

 auf 
\begin_inset Formula $\mathcal{C}$
\end_inset

 wird wie folgt zu einem auf 
\begin_inset Formula $\mathcal{C}'$
\end_inset

 angepasst:
\begin_inset Formula 
\[
\hat{\pi}'g\coloneqq\begin{cases}
g_{i} & \mathrm{falls}\,\hat{\pi}g\in E_{i}\\
\hat{\pi}g & \mathrm{sonst}
\end{cases}
\]

\end_inset


\end_layout

\begin_layout Standard
Da 
\begin_inset Formula $\mathcal{W}\left(\hat{\pi}g,\hat{\pi}g'\right)=\mathcal{W}\left(g,g'\right)$
\end_inset

, folgt 
\begin_inset Formula $\mathcal{W}'\left(\hat{\pi}g,\hat{\pi}g'\right)$
\end_inset

.
\end_layout

\end_deeper
\end_deeper
\begin_layout Proof
Die Umrechnung von 
\begin_inset Formula $\mathcal{C}$
\end_inset

 zu 
\begin_inset Formula $\mathcal{C}'$
\end_inset

 verkleinert die Äquivalenzklasse des Gates 
\begin_inset Formula $g$
\end_inset

 zu 
\begin_inset Formula $\left\{ g\right\} $
\end_inset

, da alle äquivalenten Gates entfernt werden, und lässt alle anderen Äquivalenzk
lassen der Tiefe 
\begin_inset Formula $i\leqslant T\left(g\right)$
\end_inset

 unverändert.
\end_layout

\begin_layout Proof
Daher haben nach höchstens 
\begin_inset Formula $\left|G\right|$
\end_inset

 Wiederholungen alle Äquivalenzklassen der Tiefe 
\begin_inset Formula $i\leqslant T\left(g\right)$
\end_inset

 die Größe 
\begin_inset Formula $1$
\end_inset

, und nach höchstens 
\begin_inset Formula $T\left(\mathcal{C}\right)\cdot\left|G\right|$
\end_inset

 Wiederholungen wird ein äquivalenter, rigider Schaltkreis erzeugt.
\end_layout

\begin_layout Proposition
Die beschriebene Konstruktion kann mit 
\begin_inset Formula $\mathcal{O}\left(T\left(\mathcal{C}\right)\log n\right)$
\end_inset

 Speicherplatz berechnet werden, und ist für Schaltkreisfamilien konstanter
 Tiefe daher in 
\begin_inset Formula $\mathrm{LOGSPACE}$
\end_inset

.
\end_layout

\begin_layout Proof
Der Algorithmus 
\begin_inset CommandInset ref
LatexCommand ref
reference "alg:rigid"

\end_inset

 gibt die Kanten und Markierungen des rigiden Multischaltkreises aus, wobei
 eine natürliche Ordnung der Gates 
\begin_inset Formula $G$
\end_inset

 vorausgesetzt wird.
\end_layout

\begin_layout Proof
\begin_inset Float algorithm
wide false
sideways false
status open

\begin_layout LyX-Code
Input: 
\begin_inset Formula $\left(G,W,\Sigma,\Omega,U\right)$
\end_inset

.
\end_layout

\begin_layout LyX-Code
Main:
\end_layout

\begin_deeper
\begin_layout LyX-Code
Für jedes Gate 
\begin_inset Formula $g\in G$
\end_inset

:
\end_layout

\begin_deeper
\begin_layout LyX-Code
Falls kein Gate 
\begin_inset Formula $g'<g$
\end_inset

 mit Equiv(
\begin_inset Formula $g,g'$
\end_inset

) existiert:
\end_layout

\begin_deeper
\begin_layout LyX-Code
Rigid(
\begin_inset Formula $g$
\end_inset

).
\end_layout

\end_deeper
\end_deeper
\end_deeper
\begin_layout LyX-Code
Rigid(
\begin_inset Formula $g$
\end_inset

):
\end_layout

\begin_deeper
\begin_layout LyX-Code
Gib 
\begin_inset Formula $g$
\end_inset

 und 
\begin_inset Formula $\Sigma\left(g\right)$
\end_inset

 aus.
\end_layout

\begin_layout LyX-Code
Für alle 
\begin_inset Formula $\bar{t}\in U^{k}$
\end_inset

 mit 
\begin_inset Formula $\Omega\left(\bar{t}\right)=g$
\end_inset

:
\end_layout

\begin_deeper
\begin_layout LyX-Code
Gib 
\begin_inset Formula $\Omega\left(\bar{t}\right)=g$
\end_inset

 aus.
\end_layout

\end_deeper
\begin_layout LyX-Code
Für jedes Gate 
\begin_inset Formula $h\in G$
\end_inset

:
\end_layout

\begin_deeper
\begin_layout LyX-Code
Falls kein Gate 
\begin_inset Formula $h'<h$
\end_inset

 mit Equiv(
\begin_inset Formula $h,h'$
\end_inset

) existiert:
\end_layout

\begin_deeper
\begin_layout LyX-Code
\begin_inset Formula $i\leftarrow0$
\end_inset

.
\end_layout

\begin_layout LyX-Code
Für alle Vorgänger 
\begin_inset Formula $h''$
\end_inset

 von 
\begin_inset Formula $g$
\end_inset

 mit Equiv(
\begin_inset Formula $h,h'')$
\end_inset

.
\end_layout

\begin_deeper
\begin_layout LyX-Code
\begin_inset Formula $i\leftarrow i+1$
\end_inset

.
\end_layout

\end_deeper
\begin_layout LyX-Code
Gib 
\begin_inset Formula $\mathcal{W}\left(h,g\right)=i$
\end_inset

 aus.
\end_layout

\end_deeper
\end_deeper
\end_deeper
\begin_layout LyX-Code
Equiv(
\begin_inset Formula $g,g'$
\end_inset

):
\end_layout

\begin_deeper
\begin_layout LyX-Code
Falls nicht 
\begin_inset Formula $\Sigma\left(g\right)=\Sigma\left(g'\right)$
\end_inset

: 
\begin_inset Formula $\textsc{False}$
\end_inset


\end_layout

\begin_layout LyX-Code
Für jeden Vorgänger 
\begin_inset Formula $h$
\end_inset

 von 
\begin_inset Formula $g$
\end_inset

:
\end_layout

\begin_deeper
\begin_layout LyX-Code
\begin_inset Formula $i\leftarrow0$
\end_inset


\end_layout

\begin_layout LyX-Code
Für jeden Vorgänger 
\begin_inset Formula $h'$
\end_inset

 von 
\begin_inset Formula $g$
\end_inset

 mit Equiv(
\begin_inset Formula $h$
\end_inset

,
\begin_inset Formula $h'$
\end_inset

):
\end_layout

\begin_deeper
\begin_layout LyX-Code
\begin_inset Formula $i\leftarrow i+1$
\end_inset

.
\end_layout

\end_deeper
\begin_layout LyX-Code
Für jeden Vorgänger 
\begin_inset Formula $h'$
\end_inset

 von 
\begin_inset Formula $g'$
\end_inset

 mit Equiv(
\begin_inset Formula $h,h'$
\end_inset

):
\end_layout

\begin_deeper
\begin_layout LyX-Code
\begin_inset Formula $i\leftarrow i-1$
\end_inset


\end_layout

\end_deeper
\begin_layout LyX-Code
Falls 
\begin_inset Formula $i\neq0$
\end_inset

: 
\begin_inset Formula $\textsc{False}$
\end_inset

.
\end_layout

\end_deeper
\begin_layout LyX-Code
\begin_inset Formula $\textsc{True}$
\end_inset


\end_layout

\end_deeper
\begin_layout LyX-Code

\end_layout

\begin_layout Plain Layout
\begin_inset Caption Standard

\begin_layout Plain Layout
\begin_inset CommandInset label
LatexCommand label
name "alg:rigid"

\end_inset

Rigider Schaltkreis in 
\begin_inset Formula $\mathrm{LOGSPACE}$
\end_inset


\end_layout

\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Proof
Sei 
\begin_inset Formula $\sim^{*}$
\end_inset

 eine rekursive Erweiterung von 
\begin_inset Formula $\sim$
\end_inset

, die alle Paare von Gates 
\begin_inset Formula $g,g'$
\end_inset

 enthält, die aus jeder Äquivalenzklasse bezüglich 
\begin_inset Formula $\sim^{*}$
\end_inset

 die gleiche Anzahl Vorgänger besitzen.
 Ferner sei 
\begin_inset Formula $\leqslant$
\end_inset

 eine implizite Ordnung der Gates 
\begin_inset Formula $G$
\end_inset

.
 Ein Gate 
\begin_inset Formula $g\in G$
\end_inset

, für das 
\begin_inset Formula $g\not\sim^{*}g'$
\end_inset

 für alle 
\begin_inset Formula $g'<g$
\end_inset

 gilt, nennen wir den Repräsentanten seiner Äquivalenzklasse.
\end_layout

\begin_layout Proof
Der beschriebene Algorithmus wird 
\begin_inset Formula $\mathtt{Rigid}\left(g\right)$
\end_inset

 für jeden Repräsentanten 
\begin_inset Formula $g\in G$
\end_inset

 aufrufen.
 
\begin_inset Formula $\mathtt{Rigid}\left(g\right)$
\end_inset

 gibt dann 
\begin_inset Formula $g$
\end_inset

 mit seinen Markierungen aus, findet dann jeden Repräsentanten 
\begin_inset Formula $h\in G$
\end_inset

, zählt die zu 
\begin_inset Formula $h$
\end_inset

 äquivalenten Vorgänger von 
\begin_inset Formula $g$
\end_inset

 und gibt die entsprechende Multikante 
\begin_inset Formula $\mathcal{W}\left(h,g\right)\in\mathbb{N}$
\end_inset

 aus.
\end_layout

\begin_layout Proof
Da die Funktionen 
\begin_inset Formula $\mathtt{Rigid}$
\end_inset

 und 
\begin_inset Formula $\mathtt{Equiv}$
\end_inset

 jeweils nur konstant viele lokale Variablen der Größe 
\begin_inset Formula $\mathcal{O}\left(\log n\right)$
\end_inset

 verwenden, ist der Algorithmus platzbeschränkt durch 
\begin_inset Formula $T\cdot\mathcal{O}\left(\log n\right)$
\end_inset

, wobei 
\begin_inset Formula $T$
\end_inset

 die maximale Rekursionstiefe von 
\begin_inset Formula $\mathtt{Equiv}$
\end_inset

 ist.
 Weil jeder Aufruf 
\begin_inset Formula $\mathtt{Equiv}\left(g\right)$
\end_inset

 nur Aufrufe 
\begin_inset Formula $\mathtt{Equiv}\left(h,h'\right)$
\end_inset

 für Vorgänger 
\begin_inset Formula $h,h'$
\end_inset

 von 
\begin_inset Formula $g$
\end_inset

 auslöst, ist 
\begin_inset Formula $T=T\left(\mathcal{C}\right)$
\end_inset

 die Tiefe des Schaltkreises 
\begin_inset Formula $\mathcal{C}$
\end_inset

.
\end_layout

\begin_layout Standard
\begin_inset Newpage pagebreak
\end_inset


\end_layout

\begin_layout Section
Berechnung der Orbits und Träger
\end_layout

\begin_layout Lemma
\begin_inset CommandInset label
LatexCommand label
name "lem:rigide-eindeutig"

\end_inset

(nach Satz 9 aus 
\begin_inset CommandInset citation
LatexCommand cite
key "anderson_et_al:LIPIcs:2014:4445"

\end_inset

)
\end_layout

\begin_layout Lemma
Sei 
\begin_inset Formula $\mathcal{C}$
\end_inset

 ein rigider 
\begin_inset Formula $\left(\sigma,\mathbb{B}\right)$
\end_inset

-Multischaltkreis über 
\begin_inset Formula $U$
\end_inset

.
 Sei 
\begin_inset Formula $\pi\in\mathrm{Sym}_{U}$
\end_inset

 beliebig.
\end_layout

\begin_layout Lemma
Falls 
\begin_inset Formula $\pi$
\end_inset

 einen Automorphismus in 
\begin_inset Formula $\mathcal{C}$
\end_inset

 induziert, dann ist dieser eindeutig.
\end_layout

\begin_layout Proof
Sei 
\begin_inset Formula $\mathcal{C}=\left(G,\mathcal{W},\Sigma,\Omega,U\right)$
\end_inset

 und 
\begin_inset Formula $\pi\in\mathrm{Sym}_{U}$
\end_inset

 beliebig.
 Seien 
\begin_inset Formula $\hat{\pi}_{1},\hat{\pi}_{2}:\mathcal{C}\tilde{\rightarrow}\mathcal{C}$
\end_inset

 zwei von 
\begin_inset Formula $\pi$
\end_inset

 induzierte Automorphismen.
\end_layout

\begin_layout Proof
Durch Induktion über die Tiefe wird bewiesen, dass 
\begin_inset Formula $\hat{\pi}_{1}g=\hat{\pi}_{2}g$
\end_inset

 für jedes Gate 
\begin_inset Formula $g\in G$
\end_inset

 gilt.
\end_layout

\begin_deeper
\begin_layout Description
Anfang: Wenn 
\begin_inset Formula $g$
\end_inset

 eine Konstante mit 
\begin_inset Formula $\Sigma\left(g\right)\in\left\{ \mathbf{0},\mathbf{1}\right\} $
\end_inset

 ist, dann ist 
\begin_inset Formula $g$
\end_inset

 das einzige Gate mit der Beschriftung 
\begin_inset Formula $\Sigma\left(g\right)$
\end_inset

:
\begin_inset Formula 
\[
\hat{\pi}_{1}g=g=\hat{\pi}_{2}
\]

\end_inset

Wenn 
\begin_inset Formula $g$
\end_inset

 ein relationales Input mit 
\begin_inset Formula $\Sigma\left(g\right)=R\bar{t}$
\end_inset

, 
\begin_inset Formula $R/k\in\sigma$
\end_inset

 und 
\begin_inset Formula $\bar{t}\in U^{k}$
\end_inset

 ist, dann existiert auf Grund der Rigidität nur ein Gate 
\begin_inset Formula $g'\in G$
\end_inset

 mit 
\begin_inset Formula $\Sigma\left(g'\right)=R\pi\bar{t}$
\end_inset

:
\begin_inset Formula 
\[
\hat{\pi}_{1}g=g'=\hat{\pi}_{2}g
\]

\end_inset


\end_layout

\begin_layout Description
Schritt: Wenn 
\begin_inset Formula $g$
\end_inset

 ein internes Gate mit 
\begin_inset Formula $\Sigma\left(g\right)\in\mathbb{B}$
\end_inset

 ist, dann muss gelten:
\begin_inset Formula 
\begin{eqnarray*}
\Sigma\left(\hat{\pi}_{1}g\right) & = & \Sigma\left(\hat{\pi}_{2}g\right)=\Sigma\left(g\right)\\
\mathcal{W}\left(\hat{\pi}_{1}h,\hat{\pi}_{1}g\right) & = & \mathcal{W}\left(\hat{\pi}_{2}h,\hat{\pi}_{2}g\right)=\mathcal{W}\left(h,g\right)\\
 &  & \mathrm{f.a.}\,h\in G
\end{eqnarray*}

\end_inset

Auf Grund der Rigidität von 
\begin_inset Formula $\mathcal{C}$
\end_inset

 muss 
\begin_inset Formula $\hat{\pi}_{1}g=\hat{\pi}_{2}g$
\end_inset

 gelten.
\end_layout

\end_deeper
\begin_layout Lemma
\begin_inset CommandInset label
LatexCommand label
name "lem:algo-auto"

\end_inset

(nach Lemma 25 aus 
\begin_inset CommandInset citation
LatexCommand cite
key "anderson_et_al:LIPIcs:2014:4445"

\end_inset

)
\end_layout

\begin_layout Lemma
Es existiert ein deterministischer Algorithmus, der bei Eingabe eines rigiden
 
\begin_inset Formula $\left(\sigma,\mathbb{B}\right)$
\end_inset

-Multischaltkreises 
\begin_inset Formula $\mathcal{C}=\left(G,\mathcal{W},\Sigma,\Omega,U\right)$
\end_inset

 und einer Permutation 
\begin_inset Formula $\pi\in\mathrm{Sym}_{U}$
\end_inset

 in 
\begin_inset Formula $\mathrm{poly}\left(\left|\mathcal{C}\right|\right)$
\end_inset

-Zeit für jedes Gate 
\begin_inset Formula $g\in G$
\end_inset

 das Gate 
\begin_inset Formula $\hat{\pi}g$
\end_inset

 ausgibt, falls 
\begin_inset Formula $\pi$
\end_inset

 einen Automorphismus 
\begin_inset Formula $\hat{\pi}$
\end_inset

 induziert.
\end_layout

\begin_layout Proof
Analog zu dem Beweis von Lemma 
\begin_inset CommandInset ref
LatexCommand ref
reference "lem:rigide-eindeutig"

\end_inset

 wird gezeigt, dass der eindeutige Automorphismus in Polynomialzeit bestimmt
 wird:
\end_layout

\begin_deeper
\begin_layout Enumerate
Zunächst sei für jedes konstante Gate 
\begin_inset Formula $\hat{\pi}g\coloneqq g$
\end_inset

.
 Für jedes relationale Input 
\begin_inset Formula $g\in G$
\end_inset

 mit 
\begin_inset Formula $\Sigma\left(g\right)=R\bar{t}$
\end_inset

 finde das einzige Gate 
\begin_inset Formula $g'\in G$
\end_inset

 mit 
\begin_inset Formula $\Sigma\left(g\right)=R\pi\bar{t}$
\end_inset

 und gib 
\begin_inset Formula $\hat{\pi}g\coloneqq g'$
\end_inset

 aus.
\end_layout

\begin_layout Enumerate
Finde ein beliebiges Gate 
\begin_inset Formula $g\in G$
\end_inset

, für dessen Vorgänger 
\begin_inset Formula $h\in G$
\end_inset

 mit 
\begin_inset Formula $\mathcal{W}\left(h,g\right)>0$
\end_inset

 bereits 
\begin_inset Formula $\hat{\pi}h=h'$
\end_inset

 ausgegeben wurde.
\end_layout

\begin_layout Enumerate
Finde ein Gate 
\begin_inset Formula $g'\in G$
\end_inset

 mit 
\begin_inset Formula $\Sigma\left(g\right)=\Sigma\left(g'\right)$
\end_inset

 und 
\begin_inset Formula $\mathcal{W}\left(\hat{\pi}h,g'\right)=\mathcal{W}\left(h,g\right)$
\end_inset

 für die Vorgänger 
\begin_inset Formula $h\in G$
\end_inset

, so dass 
\begin_inset Formula $g'$
\end_inset

 sonst keine Vorgänger hat.
 (Wegen der Rigidität gibt es höchstens eines.) Gib 
\begin_inset Formula $\hat{\pi}g=g'$
\end_inset

 aus.
\end_layout

\begin_layout Enumerate
Wiederhole die Schritte 2 bis 3 solange bis 
\begin_inset Formula $\hat{\pi}$
\end_inset

 für jedes Gate 
\begin_inset Formula $g\in G$
\end_inset

 berechnet wurde.
 (Wenn zu irgendeinem 
\begin_inset Formula $g$
\end_inset

 kein Gate gefunden wird, ist der Schaltkreis nicht symmetrisch und der
 Algorithmus bricht ab.)
\end_layout

\end_deeper
\begin_layout Proof
Die Schritte 2 bis 3 werden höchstens 
\begin_inset Formula $\left|G\right|$
\end_inset

-mal wiederholt, und jeder Schritt erfordert 
\begin_inset Formula $\left|G\right|^{2}$
\end_inset

-Zeit, so dass der Algorithmus in 
\begin_inset Formula $\left|G\right|^{3}$
\end_inset

-Zeit arbeitet.
\end_layout

\begin_layout Proposition
Die obige Konstruktion ist mit 
\begin_inset Formula $\mathcal{O}\left(T\left(\mathcal{C}\right)\log n\right)$
\end_inset

 Speicherplatz berechenbar, und ist für Schaltkreisfamilien in 
\begin_inset Formula $\mathrm{AC}^{0}$
\end_inset

 daher in 
\begin_inset Formula $\mathrm{LOGSPACE}$
\end_inset

.
\end_layout

\begin_layout Proof
Der Algorithmus 
\begin_inset CommandInset ref
LatexCommand ref
reference "alg:aut"

\end_inset

 berechnet den Automorphismus 
\begin_inset Formula $\hat{\pi}$
\end_inset

, in dem für jedes Paar von Gates 
\begin_inset Formula $g,g'$
\end_inset

 rekursiv geprüft wird, ob 
\begin_inset Formula $\hat{\pi}g=\hat{\pi}g'$
\end_inset

.
\end_layout

\begin_layout Proof
Da jede Funktion nur konstant viele lokale Variablen der Größe 
\begin_inset Formula $\mathcal{O}\left(\log n\right)$
\end_inset

 verwendet, ist der Speicherplatz durch die Funktion 
\begin_inset Formula $T\cdot\mathcal{O}\left(\log n\right)$
\end_inset

 beschränkt.
\end_layout

\begin_layout Proof
\begin_inset Float algorithm
wide false
sideways false
status open

\begin_layout LyX-Code
Input: 
\begin_inset Formula $\left(G,W,\Sigma,\Omega,U\right)$
\end_inset

, 
\begin_inset Formula $k$
\end_inset

, 
\begin_inset Formula $\pi$
\end_inset

.
\end_layout

\begin_layout LyX-Code
Main:
\end_layout

\begin_deeper
\begin_layout LyX-Code
Für 
\begin_inset Formula $g,g'\in G$
\end_inset

:
\end_layout

\begin_deeper
\begin_layout LyX-Code
Falls Aut(
\begin_inset Formula $g,g'$
\end_inset

):
\end_layout

\begin_deeper
\begin_layout LyX-Code
Gib 
\begin_inset Formula $\hat{\pi}\left(g\right)=g'$
\end_inset

 aus.
\end_layout

\end_deeper
\end_deeper
\end_deeper
\begin_layout LyX-Code
Aut(
\begin_inset Formula $g,g'$
\end_inset

):
\end_layout

\begin_deeper
\begin_layout LyX-Code
Falls 
\begin_inset Formula $\Sigma\left(g\right)\neq\Sigma\left(g'\right)\in\mathbb{B}\uplus\left\{ \mathbf{0},\mathbf{1},\mathtt{NOT}\right\} $
\end_inset

: 
\begin_inset Formula $\textsc{False}$
\end_inset


\end_layout

\begin_layout LyX-Code
Falls 
\begin_inset Formula $\Sigma\left(g\right)=R\bar{t}$
\end_inset

, 
\begin_inset Formula $\Sigma\left(g'\right)\neq R\pi\bar{t}$
\end_inset

: False
\end_layout

\begin_layout LyX-Code
Für 
\begin_inset Formula $\bar{t}\in U^{k}$
\end_inset

:
\end_layout

\begin_deeper
\begin_layout LyX-Code
Falls 
\begin_inset Formula $\Omega\left(\bar{t}\right)=g$
\end_inset

 und 
\begin_inset Formula $\Omega\left(\pi\bar{t}\right)\neq g'$
\end_inset

: 
\begin_inset Formula $\textsc{False}$
\end_inset


\end_layout

\end_deeper
\begin_layout LyX-Code
Für jeden Vorgänger 
\begin_inset Formula $h$
\end_inset

 von 
\begin_inset Formula $g$
\end_inset

:
\end_layout

\begin_deeper
\begin_layout LyX-Code
Falls kein Vorgänger 
\begin_inset Formula $h'$
\end_inset

 von 
\begin_inset Formula $g'$
\end_inset

 mit Aut(
\begin_inset Formula $h,h'$
\end_inset

) existiert:
\end_layout

\begin_deeper
\begin_layout LyX-Code
\begin_inset Formula $\textsc{False}$
\end_inset


\end_layout

\end_deeper
\end_deeper
\begin_layout LyX-Code
\begin_inset Formula $\textsc{True}$
\end_inset


\end_layout

\end_deeper
\begin_layout Plain Layout
\begin_inset Caption Standard

\begin_layout Plain Layout
\begin_inset CommandInset label
LatexCommand label
name "alg:aut"

\end_inset

Automorphismus in 
\begin_inset Formula $\mathrm{LOGSPACE}$
\end_inset


\end_layout

\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Lemma
(nach Lemma 26 aus 
\begin_inset CommandInset citation
LatexCommand cite
key "anderson_et_al:LIPIcs:2014:4445"

\end_inset

)
\end_layout

\begin_layout Lemma
Es existiert ein deterministischer Algorithmus, der bei Eingabe eines rigiden
 
\begin_inset Formula $\left(\sigma,\mathbb{B}\right)$
\end_inset

-Multischaltkreises 
\begin_inset Formula $\mathcal{C}=\left(G,\mathcal{W},\Sigma,\Omega,U\right)$
\end_inset

 in 
\begin_inset Formula $\mathrm{poly}\left(\left|\mathcal{C}\right|\right)$
\end_inset

 entscheidet, ob dieser symmetrisch ist, und gegebenenfalls die Orbits 
\begin_inset Formula $\mathrm{Orb}_{\mathcal{C}}\left(g\right)$
\end_inset

 und Träger 
\begin_inset Formula $\mathrm{SP}\left(g\right)$
\end_inset

 jedes Gates 
\begin_inset Formula $g\in G$
\end_inset

 ausgibt.
\end_layout

\begin_layout Proof
Um die Symmetrie nachzuweisen, genügt es, den Algorithmus aus Lemma 
\begin_inset CommandInset ref
LatexCommand ref
reference "lem:algo-auto"

\end_inset

 für jede Transposition 
\begin_inset Formula $\left(uv\right)\in\mathrm{Sym}_{U}$
\end_inset

 durchzuführen.
 Diese Transpositionen erzeugen die gesamte Symmetriegruppe 
\begin_inset Formula $\mathrm{Sym}_{U}$
\end_inset

, und daher ist für jede Permutation 
\begin_inset Formula $\pi=\left(u_{1}v_{1}\right)\cdots\left(u_{k}v_{k}\right)\in\mathrm{Sym}_{U}$
\end_inset

 die Abbildung 
\begin_inset Formula $\hat{\pi}=\hat{\pi}_{\left(u_{1}v_{1}\right)}\cdots\hat{\pi}_{\left(u_{k}v_{k}\right)}$
\end_inset

 ein von 
\begin_inset Formula $\pi$
\end_inset

 induzierter Automorphismus.
\end_layout

\begin_deeper
\begin_layout Enumerate
Berechne den von 
\begin_inset Formula $\left(uv\right)\in\mathrm{Sym}_{U}$
\end_inset

 induzierten Automorphismus 
\begin_inset Formula $\hat{\pi}_{\left(uv\right)}$
\end_inset

 für jedes Paar 
\begin_inset Formula $u,v\in U$
\end_inset

 mit 
\begin_inset Formula $u\neq v$
\end_inset

.
 Wenn nicht alle Automorphismen existieren, ist der Schaltkreis nicht symmetrisc
h; es wird abgebrochen.
\end_layout

\begin_layout Enumerate
Für jedes Gate 
\begin_inset Formula $g\in G$
\end_inset

 wird der Träger 
\begin_inset Formula $\mathrm{SP}\left(g\right)$
\end_inset

 aufgebaut, in dem für jede Transposition 
\begin_inset Formula $\left(uv\right)\in\mathrm{Sym}_{U}$
\end_inset

 geprüft wird, ob 
\begin_inset Formula $\hat{\pi}_{\left(uv\right)}$
\end_inset

 das Gate 
\begin_inset Formula $g$
\end_inset

 fixiert.
 In diesem Fall werden die Elemente 
\begin_inset Formula $u,v$
\end_inset

 in der Partition kombiniert: 
\begin_inset Formula 
\begin{eqnarray*}
\mathcal{P}_{\left(uv\right)} & \coloneqq & \left\{ \left\{ u,v\right\} \right\} \cup\left\{ \left\{ w\right\} \mid w\in U\backslash\left\{ u,v\right\} \right\} \\
\mathcal{P}_{g} & \coloneqq & \bigsqcup_{\begin{subarray}{c}
\left(uv\right)\in\mathrm{Sym}_{U}\\
\hat{\pi}_{\left(uv\right)}g=g
\end{subarray}}\mathcal{P}_{\left(uv\right)}
\end{eqnarray*}

\end_inset


\end_layout

\begin_layout Enumerate
Für jedes Gate 
\begin_inset Formula $g\in G$
\end_inset

 sei 
\begin_inset Formula $S_{0}\coloneqq\left\{ g\right\} $
\end_inset

.
 Iterativ wird der Orbit von 
\begin_inset Formula $g$
\end_inset

 wie folgt aufgebaut, bis mit 
\begin_inset Formula $S_{i+1}=S_{i}$
\end_inset

 ein Fixpunkt erreicht wird (spätestens bei 
\begin_inset Formula $S_{\left|U\right|}$
\end_inset

):
\begin_inset Formula 
\[
S_{i+1}\coloneqq S_{i}\cup\bigcup_{\left(uv\right)\in\mathrm{Sym}_{U}}\hat{\pi}_{\left(uv\right)}S_{i}
\]

\end_inset


\end_layout

\end_deeper
\begin_layout Proof
Nach den Definitionen aus Kapitel 7 ist jede Partition 
\begin_inset Formula $\mathcal{P}_{\left(uv\right)}$
\end_inset

 Träger von 
\begin_inset Formula $g$
\end_inset

, wenn 
\begin_inset Formula $\hat{\pi}_{\left(uv\right)}g=g$
\end_inset

, und daher ist 
\begin_inset Formula $\mathcal{P}_{g}$
\end_inset

 ebenfalls ein Träger von 
\begin_inset Formula $g$
\end_inset

.
 Wenn es einen gröberen Träger 
\begin_inset Formula $\mathcal{P}'$
\end_inset

 gäbe, dann müsste dieser zwei Elemente 
\begin_inset Formula $u,v\in U$
\end_inset

 kombinieren, die in 
\begin_inset Formula $\mathcal{P}_{g}$
\end_inset

 getrennt sind, und für die 
\begin_inset Formula $\hat{\pi}_{\left(uv\right)}g=g$
\end_inset

 gilt.
 In diesem Fall ist aber die Partition 
\begin_inset Formula $\mathcal{P}_{\left(uv\right)}$
\end_inset

 mit in 
\begin_inset Formula $\mathcal{P}_{g}$
\end_inset

 aufgenommen worden, und es gilt 
\begin_inset Formula $\mathcal{P}_{\left(uv\right)}\preceq\mathcal{P}_{g}=\mathrm{SP}\left(g\right)$
\end_inset

.
\end_layout

\begin_layout Proof
Für die Mengen 
\begin_inset Formula $\left(S_{i}\right)_{i\in\mathbb{N}}$
\end_inset

 gilt 
\begin_inset Formula $S_{i}\subseteq\mathrm{Orb}_{\mathcal{C}}\left(g\right)$
\end_inset

, denn per Induktion existiert für jedes Gate 
\begin_inset Formula $g'\in S_{i}$
\end_inset

 eine Folge von 
\begin_inset Formula $i$
\end_inset

 Transpositionen 
\begin_inset Formula $\pi_{1}\cdots\pi_{i}$
\end_inset

, so dass 
\begin_inset Formula $\hat{\pi}_{1}\cdots\hat{\pi}_{i}$
\end_inset

 das Gate 
\begin_inset Formula $g$
\end_inset

 auf 
\begin_inset Formula $g'$
\end_inset

 abbildet.
 Ferner besteht jede Permutation 
\begin_inset Formula $\pi$
\end_inset

 aus einer Folge von höchstens 
\begin_inset Formula $\left|U\right|$
\end_inset

 Transpositionen, so dass 
\begin_inset Formula $S_{\left|U\right|}\supseteq\mathrm{Orb}_{\mathcal{C}}\left(g\right)$
\end_inset

 den gesamten Orbit von 
\begin_inset Formula $g$
\end_inset

 enthält.
\end_layout

\begin_layout Proof
Es existieren weniger als 
\begin_inset Formula $\left|U\right|^{2}$
\end_inset

 Transpositionen, so dass der Schritt 1 in 
\begin_inset Formula $\left|G\right|^{3}\left|U\right|^{2}$
\end_inset

-Zeit abgeschlossen wird.
 Ebenso wird Schritt 2 in 
\begin_inset Formula $\left|U\right|^{3}$
\end_inset

-Zeit abgeschlossen (die Operation 
\begin_inset Formula $\mathcal{P}\sqcup\mathcal{P}'$
\end_inset

 für Partitionen ist durch eine Union-Find-Datenstruktur effektiv in 
\begin_inset Formula $\left|U\right|$
\end_inset

-Zeit berechenbar).
 Schritt 3 erfordert eine Iteration bis 
\begin_inset Formula $S_{\left|U\right|}$
\end_inset

, wobei jeder Durchlauf 
\begin_inset Formula $\left|U\right|^{2}$
\end_inset

-Zeit benötigt.
 Insgesamt läuft der Algorithmus in 
\begin_inset Formula $\left|G\right|^{3}\left|U\right|^{3}$
\end_inset

-Zeit.
\end_layout

\begin_layout Standard
\begin_inset Newpage pagebreak
\end_inset


\end_layout

\begin_layout Section
Rekursive Auswertung der Schaltkreise
\end_layout

\begin_layout Standard
Für eine rigide, symmetrische 
\begin_inset Formula $k$
\end_inset

-stellige 
\begin_inset Formula $\left(\sigma,\mathbb{B}\right)$
\end_inset

-Multischaltkreisfamilie 
\begin_inset Formula $\left(\mathcal{C}_{n}\right)_{n\in\mathbb{N}}$
\end_inset

 gilt nach Korollar 
\begin_inset CommandInset ref
LatexCommand ref
reference "cor:korollar-23"

\end_inset

 
\begin_inset Formula $\mathrm{SP}\left(\mathcal{C}_{n}\right)\in\mathcal{O}\left(1\right)$
\end_inset

.
 Seien also 
\begin_inset Formula $n_{0},c\in\mathbb{N}$
\end_inset

 so gewählt, dass 
\begin_inset Formula $\mathrm{SP}\left(\mathcal{C}_{n}\right)\leqslant c$
\end_inset

 für 
\begin_inset Formula $n\geqslant n_{0}$
\end_inset

.
\end_layout

\begin_layout Standard
Zur Erinnerung: 
\begin_inset Formula $\mathrm{SP}\left(\mathcal{C}\right)$
\end_inset

 misst die maximale Größe der Vereinigung aller nicht-größten Teile 
\begin_inset Formula $U\backslash P_{m}$
\end_inset

 des gröbsten Trägers 
\begin_inset Formula $\mathrm{SP}\left(g\right)=\left\{ P_{1},\cdots,P_{m}\right\} $
\end_inset

, 
\begin_inset Formula $\left|P_{1}\right|\leqslant\cdots\leqslant\left|P_{m}\right|$
\end_inset

 jedes Gates 
\begin_inset Formula $g$
\end_inset

 von 
\begin_inset Formula $\mathcal{C}$
\end_inset

.
\end_layout

\begin_layout Standard
Per Definition ist 
\begin_inset Formula $\mathcal{P}_{U\backslash P_{m}}=\left\{ \left\{ u\right\} \mid u\in U\backslash P_{m}\right\} \cup\left\{ P_{m}\right\} \preceq\mathrm{SP}\left(g\right)$
\end_inset

 ein Träger von 
\begin_inset Formula $g$
\end_inset

, und 
\begin_inset Formula $\left|\mathcal{P}_{U\backslash P_{m}}\right|\coloneqq1+\left|U\backslash P_{m}\right|\leqslant1+c$
\end_inset

.
\end_layout

\begin_layout Standard
Es sei 
\begin_inset Formula $\mathrm{sp}\left(g\right)\coloneqq U\backslash P_{m}$
\end_inset

 die Menge der in 
\begin_inset Formula $\mathcal{P}_{U\backslash P_{m}}$
\end_inset

 getrennten Elemente; diese Menge nennen wir den 
\series bold
kanonischen Träger
\series default
 des Gates 
\begin_inset Formula $g$
\end_inset

.
\end_layout

\begin_layout Standard
Wir möchten 
\begin_inset Formula $\mathcal{C}_{n}$
\end_inset

 auf beliebigen Strukturen 
\begin_inset Formula $\mathfrak{A}\in\mathbf{FIN}^{\left(n\right)}\left(\sigma\right)$
\end_inset

 (nicht nur 
\begin_inset Formula $\mathfrak{A}\in\mathbf{FIN}^{\left[1,n\right]}\left(\sigma\right)$
\end_inset

) auswerten, wofür eine beliebige Einbettung 
\begin_inset Formula $\pi:A\rightarrow\left[1,n\right]$
\end_inset

 definiert werden muss.
 Es wird nun gezeigt, dass die Auswertung des Gates 
\begin_inset Formula $g$
\end_inset

 nur von dem Teil der Abbildung 
\begin_inset Formula $\pi$
\end_inset

 abhängt, der Elemente auf 
\begin_inset Formula $\mathrm{sp}\left(g\right)$
\end_inset

 abbildet.
 Die Abbildung auf die übrigen Elemente 
\begin_inset Formula $U\backslash\mathrm{sp}\left(g\right)$
\end_inset

 ist für 
\begin_inset Formula $g$
\end_inset

 unbedeutend.
\end_layout

\begin_layout Standard
Die Folgerung in diesem Abschnitt passt den Abschnitt 4.3 aus 
\begin_inset CommandInset citation
LatexCommand cite
key "anderson_et_al:LIPIcs:2014:4445"

\end_inset

 für Multischaltkreise an.
\end_layout

\begin_layout --Separator--

\end_layout

\begin_layout Definition

\series bold
Konsistenz
\end_layout

\begin_layout Definition
Zwei bijektive Abbildungen 
\begin_inset Formula $f,f':A\rightarrow B$
\end_inset

 seien konsistent in 
\begin_inset Formula $A'\subseteq A$
\end_inset

 (kurz 
\begin_inset Formula $f\sim_{A'}f'$
\end_inset

), wenn sie im Teilbereich 
\begin_inset Formula $A'$
\end_inset

 identisch sind.
 
\begin_inset Formula 
\[
f\sim_{A'}f'\Leftrightarrow f_{\mid A'}=f'_{\mid A'}
\]

\end_inset


\end_layout

\begin_layout Definition
Für 
\begin_inset Formula $B'\subseteq B$
\end_inset

 heißen sie bildkonsistent in 
\begin_inset Formula $B'$
\end_inset

, wenn 
\begin_inset Formula $f^{-1}\sim_{B'}f^{-1}$
\end_inset

 beziehungsweise wenn 
\begin_inset Formula $f=\tau f'$
\end_inset

 mit einer Permutation 
\begin_inset Formula $\tau\in\mathrm{Stab}_{B}\left(B'\right)$
\end_inset

, die die Elemente von 
\begin_inset Formula $B'$
\end_inset

 fixiert.
\end_layout

\begin_layout Proposition
\begin_inset CommandInset label
LatexCommand label
name "prop:konsistenz"

\end_inset

Sei 
\begin_inset Formula $\mathcal{C}=\left(G,\mathcal{W},\Sigma,\Omega,U\right)$
\end_inset

 ein rigider, symmetrischer Multischaltkreis mit 
\begin_inset Formula $n=\left|U\right|$
\end_inset

, und sei 
\begin_inset Formula $g\in G$
\end_inset

 ein beliebiges Gate mit den Vorgängern 
\begin_inset Formula $H\coloneqq\left\{ h\in G\mid\mathcal{W}\left(h,g\right)>0\right\} $
\end_inset

.
 Sei 
\begin_inset Formula $\mathfrak{A}\in\mathbf{FIN}^{\left(n\right)}\left(\sigma\right)$
\end_inset

 eine beliebige Struktur.
 Seien 
\begin_inset Formula $\pi_{1},\pi_{2}:A\rightarrow U$
\end_inset

 zwei beliebige Einbettungen von 
\begin_inset Formula $\mathfrak{A}$
\end_inset

 in 
\begin_inset Formula $U$
\end_inset

, die bildkonsistent in 
\begin_inset Formula $\mathrm{sp}\left(g\right)$
\end_inset

 sind.
 So gilt:
\begin_inset Formula 
\begin{eqnarray}
\mathcal{C}\left[\pi_{1}\mathfrak{A}\right]\left(g\right) & = & \mathcal{C}\left[\pi_{2}\mathfrak{A}\right]\left(g\right)\label{eq:cons-1}\\
\sum_{h\in H}\mathcal{W}\left(h,g\right)\cdot\mathcal{C}\left[\pi_{1}\mathfrak{A}\right]\left(h\right) & = & \sum_{h\in H}\mathcal{W}\left(h,g\right)\cdot\mathcal{C}\left[\pi_{2}\mathfrak{A}\right]\left(h\right)\label{eq:cons-2}
\end{eqnarray}

\end_inset


\end_layout

\begin_layout Proof
Sei 
\begin_inset Formula $\tau\in\mathrm{Sym}_{U}$
\end_inset

 die Permutation 
\begin_inset Formula $\tau\coloneqq\pi_{1}\pi_{2}^{-1}$
\end_inset

, so dass 
\begin_inset Formula $\pi_{1}=\tau\pi_{2}$
\end_inset

.
\end_layout

\begin_layout Proof
Weil 
\begin_inset Formula $\pi_{1}$
\end_inset

 und 
\begin_inset Formula $\pi_{2}$
\end_inset

 bildkonsistent in 
\begin_inset Formula $\mathrm{sp}\left(g\right)$
\end_inset

 sind, gilt 
\begin_inset Formula $\pi_{1}^{-1}u=\pi_{2}^{-1}u$
\end_inset

 für 
\begin_inset Formula $u\in\mathrm{sp}\left(g\right)$
\end_inset

.
\begin_inset Formula 
\begin{eqnarray*}
\tau u & = & \pi_{1}\pi_{2}^{-1}u\\
 & = & \pi_{1}\pi_{1}^{-1}u=u
\end{eqnarray*}

\end_inset


\end_layout

\begin_layout Proof
Wegen der Symmetrie und Rigidität induziert 
\begin_inset Formula $\tau$
\end_inset

 einen eindeutigen Automorphismus 
\begin_inset Formula $\hat{\tau}$
\end_inset

 im Schaltkreis 
\begin_inset Formula $\mathcal{C}$
\end_inset

.
 Weil 
\begin_inset Formula $\tau$
\end_inset

 die Elemente von 
\begin_inset Formula $\mathrm{sp}\left(g\right)$
\end_inset

 fixiert, fixiert 
\begin_inset Formula $\hat{\tau}$
\end_inset

 auch das Gate 
\begin_inset Formula $g$
\end_inset

:
\begin_inset Formula 
\begin{eqnarray*}
\tau & \in & \mathrm{Stab}_{U}\left(\mathrm{sp}\left(g\right)\right)\\
 & \subseteq & \mathrm{Stab}_{\mathcal{C}}\left(g\right)
\end{eqnarray*}

\end_inset

Damit ist Gleichung 
\begin_inset CommandInset ref
LatexCommand ref
reference "eq:cons-1"

\end_inset

 bewiesen:
\begin_inset Formula 
\begin{eqnarray*}
\mathcal{C}\left[\pi_{2}\mathfrak{A}\right]\left(g\right) & = & \mathcal{C}\left[\tau\pi_{2}\mathfrak{A}\right]\left(\hat{\tau}g\right)\\
 & = & \mathcal{C}\left[\tau\pi_{2}\mathfrak{A}\right]\left(g\right)\\
 & = & \mathcal{C}\left[\pi_{1}\mathfrak{A}\right]\left(g\right)
\end{eqnarray*}

\end_inset


\end_layout

\begin_layout Proof
Da 
\begin_inset Formula $\hat{\tau}g=g$
\end_inset

, muss auch 
\begin_inset Formula $\hat{\tau}H=H$
\end_inset

 auch für die Vorgänger gelten.
 Außerdem hat 
\begin_inset Formula $\hat{\tau}h$
\end_inset

 die gleiche Anzahl von Kanten zu 
\begin_inset Formula $g$
\end_inset

 wie 
\begin_inset Formula $\tau$
\end_inset

:
\begin_inset Formula 
\begin{eqnarray*}
\mathcal{C}\left[\pi_{2}\right]\left(h\right) & = & \mathcal{C}\left[\tau\pi_{2}\right]\left(\hat{\tau}g\right)\\
\mathcal{W}\left(h,g\right) & = & \mathcal{W}\left(\hat{\tau},g\right)
\end{eqnarray*}

\end_inset

Es folgt die Gleichung 
\begin_inset CommandInset ref
LatexCommand ref
reference "eq:cons-2"

\end_inset

 für das Gewicht der mit 
\begin_inset Formula $1$
\end_inset

 belegten Vorgänger von 
\begin_inset Formula $g$
\end_inset

:
\begin_inset Formula 
\[
\sum_{h\in H}\mathcal{W}\left(h,g\right)\cdot\mathcal{C}\left[\pi_{1}\mathfrak{A}\right]\left(h\right)=\sum_{h\in H}\mathcal{W}\left(h,g\right)\cdot\mathcal{C}\left[\pi_{2}\mathfrak{A}\right]\left(h\right)
\]

\end_inset


\end_layout

\begin_layout Definition
Für jedes Gate 
\begin_inset Formula $g$
\end_inset

 des Schaltkreises 
\begin_inset Formula $\mathcal{C}$
\end_inset

 über dem Universum 
\begin_inset Formula $U$
\end_inset

 beschreiben wir die Menge der verschiedenen Bijektionen 
\begin_inset Formula $\pi:U\rightarrow A$
\end_inset

, für die 
\begin_inset Formula $\mathcal{C}\left[\pi^{-1}\mathfrak{A}\right]\left(g\right)=1$
\end_inset

.
 Per Satz 
\begin_inset CommandInset ref
LatexCommand ref
reference "prop:konsistenz"

\end_inset

 müssen nur deren Reduktionen auf 
\begin_inset Formula $\mathrm{sp}\left(g\right)$
\end_inset

 betrachtet werden.
 Sei 
\begin_inset Formula $\mathrm{EV}\left(g\right)$
\end_inset

 die Menge dieser Belegungen von 
\begin_inset Formula $\mathrm{sp}\left(g\right)$
\end_inset

:
\end_layout

\begin_layout Definition
\begin_inset Formula 
\[
\mathrm{EV}\left(g\right)\coloneqq\left\{ \pi{}_{\mid\mathrm{sp}\left(g\right)}\mid\pi\in\mathrm{Abb}\left(U,A\right),\,\mathcal{C}\left[\pi^{-1}\mathfrak{A}\right]\left(g\right)=1\right\} 
\]

\end_inset


\end_layout

\begin_layout Definition
Für jede injektive Funktion 
\begin_inset Formula $\rho:\mathrm{sp}\left(g\right)\rightarrow A$
\end_inset

 sei 
\begin_inset Formula $M_{\rho}$
\end_inset

 die Menge der zu 
\begin_inset Formula $\rho$
\end_inset

 konsistenten Bijektionen 
\begin_inset Formula $\pi:U\rightarrow A$
\end_inset

 :
\begin_inset Formula 
\[
M_{\rho}\coloneqq\left\{ \pi\in\mathrm{Abb}\left(U,A\right)\mid\pi_{\mid\mathrm{sp}\left(g\right)}=\rho\right\} 
\]

\end_inset


\end_layout

\begin_layout Definition
Zusätzlich beschreiben wir für jeden Vorgänger 
\begin_inset Formula $h\in H$
\end_inset

 von 
\begin_inset Formula $g$
\end_inset

 und jede injektive Funktion 
\begin_inset Formula $\rho:\mathrm{sp}\left(g\right)\rightarrow A$
\end_inset

 die Menge 
\begin_inset Formula $\Pi_{\rho}\left(h\right)$
\end_inset

 der unterschiedlichen 
\begin_inset Formula $\mathrm{sp}\left(h\right)$
\end_inset

-Reduktionen von Bijektionen 
\begin_inset Formula $\pi:U\rightarrow A$
\end_inset

, die auf 
\begin_inset Formula $\mathrm{sp}\left(g\right)$
\end_inset

 konsistent zu 
\begin_inset Formula $\pi$
\end_inset

 sind: 
\begin_inset Formula 
\[
\Pi_{\rho}\left(h\right)\coloneqq\left\{ \pi_{\mid\mathrm{sp}\left(h\right)}\mid\pi\in M_{\rho}\right\} 
\]

\end_inset


\end_layout

\begin_layout Claim
\begin_inset CommandInset label
LatexCommand label
name "claim:claim-28"

\end_inset

(nach Behauptung 28 aus 
\begin_inset CommandInset citation
LatexCommand cite
key "anderson_et_al:LIPIcs:2014:4445"

\end_inset

)
\end_layout

\begin_layout Claim
Sei 
\begin_inset Formula $\pi:U\rightarrow A$
\end_inset

 eine beliebige Bijektion, und 
\begin_inset Formula $\rho\coloneqq\pi_{\mid\mathrm{sp}\left(g\right)}$
\end_inset

.
 Das Gesamtgewicht der unter 
\begin_inset Formula $\pi^{-1}\mathfrak{A}$
\end_inset

 erfüllten Vorgänger 
\begin_inset Formula $h\in H$
\end_inset

 gleicht der gewichteten Summe von 
\begin_inset Formula $\frac{\left|\Pi_{\rho}\left(h\right)\cap\mathrm{EV}\left(h\right)\right|}{\left|\Pi_{\rho}\left(h\right)\right|}$
\end_inset

, dem Anteil der erfüllenden Bijektionen in 
\begin_inset Formula $\Pi_{\rho}\left(h\right)$
\end_inset

:
\end_layout

\begin_layout Claim
\begin_inset Formula 
\begin{equation}
r\coloneqq\sum_{h\in H}\mathcal{W}\left(h,g\right)\mathcal{C}\left[\pi^{-1}\mathfrak{A}\right]\left(h\right)=\sum_{h\in H}\mathcal{W}\left(h,g\right)\frac{\left|\Pi_{\rho}\left(h\right)\cap\mathrm{EV}\left(h\right)\right|}{\left|\Pi_{\rho}\left(h\right)\right|}\label{eq:behauptung-28}
\end{equation}

\end_inset


\end_layout

\begin_layout Proof
Nach Gleichung 
\begin_inset CommandInset ref
LatexCommand ref
reference "eq:cons-2"

\end_inset

 ist das Gesamtgewicht der unter 
\begin_inset Formula $\pi'^{-1}\mathfrak{A}$
\end_inset

 erfüllten Gates 
\begin_inset Formula $h\in G$
\end_inset

 für alle 
\begin_inset Formula $\pi'\in M_{\rho}$
\end_inset

 gleich, so dass 
\begin_inset Formula $\left|M_{\rho}\right|r$
\end_inset

 die Summe der Gesamtgewichte für jede Belegung 
\begin_inset Formula $\pi'\in M_{\rho}$
\end_inset

 ist.
\end_layout

\begin_layout Proof
Weiterhin können wir für jeden Vorgänger 
\begin_inset Formula $h\in H$
\end_inset

 die Belegungen 
\begin_inset Formula $M_{\rho}$
\end_inset

 in Äquivalenzklassen bezüglich der Konsistenz zu einer Belegung 
\begin_inset Formula $\rho'\in\Pi_{\rho}\left(h\right)$
\end_inset

 von 
\begin_inset Formula $\mathrm{sp}\left(h\right)$
\end_inset

 partitionieren: 
\begin_inset Formula 
\begin{eqnarray*}
\left|M_{\rho}\right|r & = & \sum_{h\in H}\mathcal{W}\left(h,g\right)\sum_{\pi'\in M_{\rho}}\mathcal{C}\left[\pi'\mathfrak{^{-1}A}\right]\left(h\right)\\
 & = & \sum_{h\in H}\mathcal{W}\left(h,g\right)\sum_{\rho'\in\Pi_{\rho}\left(h\right)}\sum_{\begin{subarray}{c}
\pi'\in M_{\rho}\\
\pi'_{\mid\mathrm{sp}\left(h\right)}=\rho'
\end{subarray}}\mathcal{C}\left[\pi'^{-1}\mathfrak{A}\right]\left(h\right)
\end{eqnarray*}

\end_inset


\end_layout

\begin_layout Proof
Nach der Definition der Menge 
\begin_inset Formula $\mathrm{EV}\left(h\right)$
\end_inset

 gilt für alle Belegungen 
\begin_inset Formula $\pi':U\rightarrow A$
\end_inset

, dass 
\begin_inset Formula $\mathcal{C}\left[\pi'^{-1}\mathfrak{A}\right]\left(h\right)=1$
\end_inset

 genau dann wenn 
\begin_inset Formula $\pi'_{\mid\mathrm{sp}\left(h\right)}\in\mathrm{EV}\left(h\right)$
\end_inset

.
 Daher können wir 
\begin_inset Formula $\left[\mathrm{EV}\left(h\right)\right]\left(\rho'\right)\in\left\{ 0,1\right\} $
\end_inset

 einfach mit der Größe von 
\begin_inset Formula $\left\{ \pi'\in M_{\rho}\mid\pi'_{\mid\mathrm{sp}\left(h\right)}=\rho'\right\} $
\end_inset

 multiplizieren: 
\begin_inset Formula 
\begin{eqnarray*}
\left|M_{\rho}\right|r & = & \sum_{h\in H}\mathcal{W}\left(h,g\right)\sum_{\rho'\in\Pi_{\rho}\left(h\right)}\sum_{\begin{subarray}{c}
\pi'\in M_{\rho}\\
\pi'_{\mid\mathrm{sp}\left(h\right)}=\rho'
\end{subarray}}\left[\mathrm{EV}\left(h\right)\right]\left(\rho'\right)\\
 & = & \sum_{h\in H}\mathcal{W}\left(h,g\right)\sum_{\rho'\in\Pi_{\rho}\left(h\right)}\left[\mathrm{EV}\left(h\right)\right]\left(\rho'\right)\left|\left\{ \pi'\in M_{\rho},\,\pi'_{\mid\mathrm{sp}\left(h\right)}=\rho'\right\} \right|
\end{eqnarray*}

\end_inset


\end_layout

\begin_layout Proof
Weil die Partitionierung 
\begin_inset Formula $M_{\rho}=\biguplus_{\rho'\in\Pi_{\pi}\left(h\right)}\left\{ \pi'\in M_{\rho},\,\pi'_{\mid\mathrm{sp}\left(h\right)}=\rho'\right\} $
\end_inset

 die Menge 
\begin_inset Formula $M_{\rho}$
\end_inset

 in isomorphe Klassen teilt, gilt 
\begin_inset Formula $\left|\left\{ \pi'\in M_{\rho},\,\pi'_{\mid\mathrm{sp}\left(h\right)}=\rho'\right\} \right|=\frac{\left|M_{\rho}\right|}{\left|\Pi_{\rho}\left(h\right)\right|}$
\end_inset

 für 
\begin_inset Formula $\rho'\in\Pi_{\rho}\left(h\right)$
\end_inset

.
\end_layout

\begin_layout Proof
\begin_inset Formula 
\begin{eqnarray*}
\left|M_{\rho}\right|r & = & \sum_{h\in H}\mathcal{W}\left(h,g\right)\sum_{\rho'\in\Pi_{\rho}\left(h\right)}\left[\mathrm{EV}\left(h\right)\right]\left(\rho'\right)\frac{\left|M_{\rho}\right|}{\left|\Pi_{\rho}\left(h\right)\right|}\\
 & = & \sum_{h\in H}\mathcal{W}\left(h,g\right)\sum_{\rho'\in\Pi_{\rho}\left(h\right)\cap\mathrm{EV}\left(h\right)}\frac{\left|M_{\rho}\right|}{\left|\Pi_{\rho}\left(h\right)\right|}\\
 & = & \sum_{h\in H}\mathcal{W}\left(h,g\right)\frac{\left|\Pi_{\rho}\left(h\right)\cap\mathrm{EV}\left(h\right)\right|\left|M_{\rho}\right|}{\left|\Pi_{\rho}\left(h\right)\right|}
\end{eqnarray*}

\end_inset


\end_layout

\begin_layout Proof
Durch das Kürzen von 
\begin_inset Formula $\left|M_{\rho}\right|$
\end_inset

 entsteht die Gleichung 
\begin_inset CommandInset ref
LatexCommand ref
reference "eq:behauptung-28"

\end_inset

 aus der Behauptung.
\end_layout

\begin_layout Standard
Sei nach Definition 
\begin_inset CommandInset ref
LatexCommand ref
reference "def:Tupel"

\end_inset

 
\begin_inset Formula $\bar{U}$
\end_inset

 das geordnete Tupel aller Elemente des Universums, und 
\begin_inset Formula $\bar{\mathrm{sp}}\left(g\right)$
\end_inset

 das Tupel der Elemente von 
\begin_inset Formula $\mathrm{sp}\left(g\right)$
\end_inset

.
\end_layout

\begin_layout Standard
Sei 
\begin_inset Formula $\bar{M}_{\rho}\subseteq A^{n}$
\end_inset

 die Relation der 
\begin_inset Formula $n$
\end_inset

-Tupel 
\begin_inset Formula $\pi\bar{U}$
\end_inset

 für 
\begin_inset Formula $\pi\in M_{\rho}$
\end_inset

, sei 
\begin_inset Formula $\bar{\Pi}_{\rho}\left(h\right)\subseteq A^{\left|\mathrm{sp}\left(h\right)\right|}$
\end_inset

 die Relation der Tupel 
\begin_inset Formula $\rho\bar{\mathrm{sp}}\left(h\right)$
\end_inset

 für 
\begin_inset Formula $\rho\in\Pi_{\rho}\left(h\right)$
\end_inset

, und sei 
\begin_inset Formula $\bar{\mathrm{EV}}\left(g\right)\subseteq A^{\left|\mathrm{sp}\left(g\right)\right|}$
\end_inset

 die Relation der Tupel 
\begin_inset Formula $\rho\bar{\mathrm{sp}}\left(g\right)$
\end_inset

 für 
\begin_inset Formula $\rho\in\mathrm{EV}\left(g\right)$
\end_inset

.
 
\begin_inset Formula 
\begin{eqnarray*}
\bar{M}_{\rho} & \coloneqq & \left\{ \pi\bar{U}\mid\pi\in M_{\rho}\right\} \\
\bar{\mathrm{EV}}\left(g\right) & \coloneqq & \left\{ \rho\bar{\mathrm{sp}}\left(g\right)\mid\rho\in\mathrm{EV}\left(g\right)\right\} 
\end{eqnarray*}

\end_inset


\end_layout

\begin_layout Standard
Wir werden nun für jedes Gate 
\begin_inset Formula $g\in G$
\end_inset

 mit den Vorgängern 
\begin_inset Formula $H\subseteq G$
\end_inset

 die Menge 
\begin_inset Formula $\bar{\mathrm{EV}}\left(g\right)$
\end_inset

 rekursiv durch 
\begin_inset Formula $\left(\bar{\mathrm{EV}}\left(h\right)\right)_{h\in H}$
\end_inset

 und 
\begin_inset Formula $\mathfrak{A}$
\end_inset

 definieren, wobei 
\begin_inset Formula $\rho_{\bar{a}}:\mathrm{sp}\left(g\right)\rightarrow A$
\end_inset

 für 
\begin_inset Formula $\bar{a}\in A^{\left|\mathrm{sp}\left(g\right)\right|}$
\end_inset

 die Abbildung 
\begin_inset Formula $\rho_{\bar{a}}=\left(\bar{\mathrm{sp}}\left(g\right)\mapsto\bar{a}\right)$
\end_inset

 bezeichne.
\end_layout

\begin_layout Case
Falls 
\begin_inset Formula $g$
\end_inset

 eine Konstante mit 
\begin_inset Formula $\Sigma\left(g\right)\in\left\{ \mathbf{0},\mathbf{1}\right\} $
\end_inset

 ist, dann ist 
\begin_inset Formula $\mathrm{sp}\left(g\right)=\emptyset$
\end_inset

, da 
\begin_inset Formula $g$
\end_inset

 ein Fixpunkt aller Automorphismen ist.
 In diesem Fall gilt:
\begin_inset Formula 
\[
\bar{\mathrm{EV}}\left(g\right)=\begin{cases}
\emptyset & \mathrm{falls}\,\Sigma\left(g\right)=\mathbf{0}\\
\left\{ \left\langle \right\rangle \right\}  & \mathrm{falls}\,\Sigma\left(g\right)=\mathbf{1}
\end{cases}
\]

\end_inset


\end_layout

\begin_layout Case
Falls 
\begin_inset Formula $g$
\end_inset

 ein relationales Input mit 
\begin_inset Formula $\Sigma\left(g\right)=R\bar{t}$
\end_inset

, 
\begin_inset Formula $R/k\in\sigma$
\end_inset

 und 
\begin_inset Formula $\bar{t}\in\mathrm{sp}\left(g\right)^{k}$
\end_inset

 ist, dann gilt:
\begin_inset Formula 
\[
\bar{\mathrm{EV}}\left(g\right)=R^{\mathfrak{A}}\cap\left\{ \rho_{\bar{a}}\bar{t}\mid\bar{a}\in A^{\left|\mathrm{sp}\left(g\right)\right|}\right\} 
\]

\end_inset


\end_layout

\begin_layout Case
Falls 
\begin_inset Formula $\Sigma\left(g\right)=\mathtt{AND}$
\end_inset

 ist, dann gilt für jedes Tupel 
\begin_inset Formula $\bar{a}\in A^{\left|\mathrm{sp}\left(g\right)\right|}$
\end_inset

 , dass 
\begin_inset Formula $\rho_{\bar{a}}\in\mathrm{EV}\left(g\right)$
\end_inset

 genau dann wenn jede zu 
\begin_inset Formula $\rho_{\bar{a}}$
\end_inset

 konsistente Bijektion 
\begin_inset Formula $\pi\in M_{\rho_{\bar{a}}}$
\end_inset

 alle Vorgänger 
\begin_inset Formula $h\in H$
\end_inset

 erfüllt: 
\begin_inset Formula 
\begin{eqnarray*}
\sum_{h\in H}\mathcal{W}\left(h,g\right)\mathcal{C}\left[\pi^{-1}\mathfrak{A}\right]\left(h\right) & = & \sum_{h\in H}\mathcal{W}\left(h,g\right)
\end{eqnarray*}

\end_inset

Beziehungsweise nach Behauptung 
\begin_inset CommandInset ref
LatexCommand ref
reference "claim:claim-28"

\end_inset

:
\begin_inset Formula 
\[
\sum_{h\in H}\mathcal{W}\left(h,g\right)\frac{\left|\Pi_{\rho_{\bar{a}}}\left(h\right)\cap\mathrm{EV}\left(h\right)\right|}{\left|\Pi_{\rho_{\bar{a}}}\left(h\right)\right|}=\sum_{h\in H}\mathcal{W}\left(h,g\right)
\]

\end_inset

Dies ist gleichbedeutend mit 
\begin_inset Formula $\Pi_{\rho_{\bar{a}}}\left(h\right)\subseteq\mathrm{EV}\left(h\right)$
\end_inset

.
 Demnach gilt:
\begin_inset Formula 
\[
\bar{\mathrm{EV}}\left(g\right)=\left\{ \bar{a}\in A^{\left|\mathrm{sp}\left(g\right)\right|}\mid\bigwedge_{h\in H}\bar{\Pi}_{\rho_{\bar{a}}}\left(h\right)\subseteq\bar{\mathrm{EV}}\left(h\right)\right\} 
\]

\end_inset


\end_layout

\begin_layout Case
Falls 
\begin_inset Formula $\Sigma\left(g\right)=\mathtt{OR}$
\end_inset

 ist, dann ist 
\begin_inset Formula $\rho_{\bar{a}}\in\mathrm{EV}\left(g\right)$
\end_inset

 genau dann wenn mindestens eine Bijektion 
\begin_inset Formula $\pi\in M_{\rho}$
\end_inset

 mindestens einen Vorgänger 
\begin_inset Formula $h\in H$
\end_inset

 erfüllt:
\begin_inset Formula 
\[
\sum_{h\in H}\mathcal{W}\left(h,g\right)\frac{\left|\Pi_{\rho_{\bar{a}}}\left(h\right)\cap\mathrm{EV}\left(h\right)\right|}{\left|\Pi_{\rho_{\bar{a}}}\left(h\right)\right|}>0
\]

\end_inset


\begin_inset Formula 
\[
\bar{\mathrm{EV}}\left(g\right)=\left\{ \bar{a}\in A^{\left|\mathrm{sp}\left(g\right)\right|}\mid\bigvee_{h\in H}\left(\bar{\Pi}_{\rho_{\bar{a}}}\left(h\right)\cap\bar{\mathrm{EV}}\left(h\right)\neq\emptyset\right)\right\} 
\]

\end_inset


\end_layout

\begin_layout Case
Falls 
\begin_inset Formula $\Sigma\left(g\right)=\mathtt{MAJ}$
\end_inset

 ist, dann ist 
\begin_inset Formula $\rho_{\bar{a}}\in\mathrm{EV}\left(g\right)$
\end_inset

 genau dann wenn mindestens die Hälfte der Vorgänger erfüllt sind:
\begin_inset Formula 
\[
\sum_{h\in H}\mathcal{W}\left(h,g\right)\frac{\left|\Pi_{\rho\bar{a}}\left(h\right)\cap\mathrm{EV}\left(h\right)\right|}{\left|\Pi_{\rho_{\bar{a}}}\left(h\right)\right|}\geqslant\frac{1}{2}\sum_{h\in H}\mathcal{W}\left(h,g\right)
\]

\end_inset


\end_layout

\begin_layout Case
Falls 
\begin_inset Formula $\Sigma\left(g\right)=\mathtt{NOT}$
\end_inset

, dann hat 
\begin_inset Formula $g$
\end_inset

 per Definition des Schaltkreises genau einen Vorgänger 
\begin_inset Formula $h$
\end_inset

, es gilt 
\begin_inset Formula $\mathrm{sp}\left(g\right)=\mathrm{sp}\left(h\right)$
\end_inset

 und 
\begin_inset Formula $\mathcal{C}\left[\pi^{-1}\mathfrak{A}\right]\left(g\right)=1-\mathcal{C}\left[\pi^{-1}\mathfrak{A}\right]\left(h\right)$
\end_inset

.
 Also:
\begin_inset Formula 
\[
\bar{\mathrm{EV}}\left(g\right)=A^{\left|\mathrm{sp}\left(g\right)\right|}\backslash\bar{\mathrm{EV}}\left(h\right)
\]

\end_inset


\end_layout

\begin_layout Standard
Die vom Schaltkreis 
\begin_inset Formula $\mathcal{C}$
\end_inset

 berechnete Anfrage 
\begin_inset Formula $q_{\mathcal{C}}$
\end_inset

 ist äquivalent zu der folgenden Relation:
\begin_inset Formula 
\[
q_{\mathcal{C}}\left(\mathfrak{A}\right)\coloneqq\left\{ \bar{a}\in A^{k}\mid\mathrm{ex.}\,\bar{t}\in U^{k}\,\mathrm{mit}\,\bar{a}\in\mathrm{EV}\left(\Omega\left(\bar{t}\right)\right)\right\} 
\]

\end_inset


\end_layout

\begin_layout Standard
\begin_inset Newpage pagebreak
\end_inset


\end_layout

\begin_layout Section
Kodierung durch Fixpunktlogik
\end_layout

\begin_layout Standard
Die beschriebenen Klassen Relationen 
\begin_inset Formula $\mathrm{EV}$
\end_inset

 werden nun verwendet, um die Klasse 
\begin_inset Formula $\mathrm{SBC}$
\end_inset

 auf die Fixpunktlogik 
\begin_inset Formula $\mathrm{LFP}$
\end_inset

 zu reduzieren.
\end_layout

\begin_layout Lemma
Sei 
\begin_inset Formula $\left(\mathcal{C}_{n}\right)_{n\in\mathbb{N}}$
\end_inset

 eine 
\begin_inset Formula $k$
\end_inset

-stellige, rigide, symmetrische, 
\begin_inset Formula $P$
\end_inset

-uniforme 
\begin_inset Formula $\left(\sigma,\mathbb{B}_{\mathrm{std}}\right)$
\end_inset

-Multischaltkreisfamilie.
 Es existiert eine 
\begin_inset Formula $\left(\mathrm{LFP}+\mathbf{ORD}\right)\left[\sigma\right]$
\end_inset

-Formel 
\begin_inset Formula $\varphi$
\end_inset

 aufbauen, so dass für 
\begin_inset Formula $n\in\mathbb{N}$
\end_inset

 und 
\begin_inset Formula $\mathfrak{A}\in\mathbf{FIN}^{\left(n\right)}\left(\sigma\right)$
\end_inset

 die Formel 
\begin_inset Formula $\varphi\left(\bar{x}\right)$
\end_inset

 die gleiche Anfrage definiert wie 
\begin_inset Formula $\mathcal{C}_{n}$
\end_inset

:
\end_layout

\begin_layout Lemma
\begin_inset Formula 
\[
q_{\mathcal{C}_{n}}\left(\mathfrak{A}\right)=q_{\varphi}\left(\mathfrak{A}\right)
\]

\end_inset


\end_layout

\begin_layout Proof
Da die Schaltkreisfamilie von einer 
\begin_inset Formula $P$
\end_inset

-Turingmaschine berechnet wird, existiert nach dem Immerman-Vardi-Theorem
\begin_inset CommandInset citation
LatexCommand cite
key "Vardi:1982:CRQ:800070.802186,IMMERMAN198686"

\end_inset

 und Lemma 
\begin_inset CommandInset ref
LatexCommand ref
reference "lem:algo-rigide"

\end_inset

 eine Sammlung von 
\begin_inset Formula $\mathrm{LFP}\left[\left\{ \leqslant\right\} \right]$
\end_inset

-Formeln 
\begin_inset Formula $\Phi$
\end_inset

, die auf der Struktur 
\begin_inset Formula $\mathbf{ORD}\left(n\right)$
\end_inset

 ausgewertet den Schaltkreis 
\begin_inset Formula $\mathcal{C}_{n}$
\end_inset

 beschreiben:
\begin_inset Formula 
\[
\Phi\coloneqq\left(\varphi_{G},\varphi_{\mathcal{W}},\varphi_{\Omega},\left(\varphi_{\phi}\right)_{\phi\in\mathbb{B}\uplus\left\{ \mathbf{0},\mathbf{1},\mathtt{NOT}\right\} },\left(\varphi_{R}\right)_{R\in\sigma}\right)
\]

\end_inset


\end_layout

\begin_layout Proof
Hierbei sei 
\begin_inset Formula $f_{G}:G\rightarrow\left[1,n\right]^{c}$
\end_inset

 eine geeignete Kodierung der höchstens 
\begin_inset Formula $n^{c}$
\end_inset

 Gates von 
\begin_inset Formula $\mathcal{C}_{n}$
\end_inset

, und 
\begin_inset Formula $f_{W}:\left[1,n^{c}\right]\rightarrow\left[1,n\right]^{c}$
\end_inset

 eine Kodierung von Zahlen, so dass für 
\begin_inset Formula $\bar{g},\bar{h},\bar{w}\in\left[0,n\right]^{c}$
\end_inset

:
\begin_inset Formula 
\begin{eqnarray*}
\mathbf{ORD}\left(n\right)\models\varphi_{G}\left[\bar{g}\right] & \Leftrightarrow & f_{G}^{-1}\left(\bar{g}\right)\in G\\
\mathbf{ORD}\left(n\right)\models\varphi_{W}\left[\bar{h}\bar{g}\bar{w}\right] & \Leftrightarrow & \mathcal{W}\left(f_{G}^{-1}\left(\bar{h}\right),f_{G}^{-1}\left(\bar{g}\right)\right)=f_{W}^{-1}\left(\bar{w}\right)\\
\mathbf{ORD}\left(n\right)\models\varphi_{\Omega}\left[\bar{t}\bar{g}\right] & \Leftrightarrow & \Omega\left(\bar{t}\right)=f_{G}^{-1}\left(\bar{g}\right)\\
 &  & \mathrm{für}\,\bar{t}\in\left[1,n\right]^{k}\\
\mathbf{ORD}\left(n\right)\models\varphi_{\phi}\left[\bar{g}\right] & \Leftrightarrow & \Sigma\left(f_{G}^{-1}\left(\bar{g}\right)\right)=\phi\\
 &  & \mathrm{für}\,\phi\in\mathbb{B}\uplus\left\{ \mathbf{0},\mathbf{1},\mathtt{NOT}\right\} \\
\mathbf{ORD}\left(n\right)\models\varphi_{R}\left[\bar{g}\bar{x}\right] & \Leftrightarrow & \Sigma\left(f_{G}^{-1}\left(\bar{g}\right)\right)=R\bar{x}\\
 &  & \mathrm{für}\,R/m\in\sigma,\,\bar{x}\in\left[1,n\right]^{m}
\end{eqnarray*}

\end_inset


\end_layout

\begin_layout Proof
Für 
\begin_inset Formula $n<n_{0}$
\end_inset

 gibt es nur eine endliche Anzahl von festen Schaltkreisen 
\begin_inset Formula $\mathcal{C}_{n}$
\end_inset

.
 Jeder dieser Schaltkreise ist durch eine 
\begin_inset Formula $\mathrm{FO}\left[\sigma\right]$
\end_inset

-Formel kodierbar: Sei 
\begin_inset Formula $\psi_{n}\left(\bar{x}\right)$
\end_inset

 eine Formel, die prüft, ob 
\begin_inset Formula $\left|A\right|=n$
\end_inset

, und dann prüft, ob für alle 
\begin_inset Formula $n!$
\end_inset

 Bijektionen 
\begin_inset Formula $\pi:A\rightarrow U$
\end_inset

 gilt, dass 
\begin_inset Formula $\mathcal{C}\left[\pi\mathfrak{A}\right]\left(\Omega\left(\pi\beta\bar{x}\right)\right)$
\end_inset

 mit 
\begin_inset Formula $\beta:\mathrm{frei}\left(\psi_{n}\right)\rightarrow A$
\end_inset

.
\end_layout

\begin_layout Proof
[...]
\end_layout

\begin_layout Standard
\begin_inset Newpage pagebreak
\end_inset


\end_layout

\begin_layout Section
Schaltkreise konstanter Tiefe
\end_layout

\begin_layout Standard
Das Resultat von Anderson und Dawar werden wir nun auf Schaltkreise konstanter
 Tiefe ausweiten, die auf 
\begin_inset Formula $\mathrm{FO}+\mathbf{BIT}$
\end_inset

 reduzierbar sind.
\end_layout

\begin_layout Lemma
Sei 
\begin_inset Formula $\left(\mathcal{C}_{n}\right)_{n\in\mathbb{N}}$
\end_inset

 eine 
\begin_inset Formula $k$
\end_inset

-stellige, rigide, symmetrische, 
\begin_inset Formula $\mathrm{LOGSPACE}$
\end_inset

-uniforme 
\begin_inset Formula $\left(\sigma,\mathbb{B}\right)$
\end_inset

-Multischaltkreisfamilie mit konstanter 
\begin_inset Formula $c$
\end_inset

-Tiefe und 
\begin_inset Formula $n^{d}$
\end_inset

-Größe.
 Es existiert eine 
\begin_inset Formula $\left(\mathrm{FO}+\mathbf{BIT}\right)\left[\sigma\right]$
\end_inset

-Formel 
\begin_inset Formula $\varphi$
\end_inset

, so dass für 
\begin_inset Formula $n\in\mathbb{N}$
\end_inset

 und 
\begin_inset Formula $\mathfrak{A}\in\mathbf{FIN}^{\left(n\right)}\left(\sigma\right)$
\end_inset

 die Formel 
\begin_inset Formula $\varphi\left(\bar{x}\right)$
\end_inset

 die gleiche Anfrage definiert wie 
\begin_inset Formula $\mathcal{C}_{n}$
\end_inset

.
\end_layout

\begin_layout Proof
Weil die Schaltkreisfamilie von einer 
\begin_inset Formula $\mathrm{LOGSPACE}$
\end_inset

-Turingmaschine berechnet wird, existiert nach Immerman
\begin_inset CommandInset citation
LatexCommand cite
key "immerman2012descriptive"

\end_inset

 eine Sammlung von 
\begin_inset Formula $\mathrm{FO}\left[\left\{ \mathtt{BIT}\right\} \right]$
\end_inset

-Formeln 
\begin_inset Formula $\Phi$
\end_inset

, die auf der Struktur 
\begin_inset Formula $\mathbf{BIT}\left(n\right)$
\end_inset

 ausgewertet den Schaltkreis 
\begin_inset Formula $\mathcal{C}_{n}$
\end_inset

 beschreiben:
\end_layout

\begin_layout Proof
\begin_inset Formula 
\[
\Phi\coloneqq\left(\varphi_{G},\varphi_{\mathcal{W}},\varphi_{\Omega},\left(\varphi_{\phi}\right)_{\phi\in\mathbb{B}\uplus\left\{ \mathbf{0},\mathbf{1},\mathtt{NOT}\right\} },\left(\varphi_{R}\right)_{R\in\sigma}\right)
\]

\end_inset


\end_layout

\begin_layout Proof
Hierbei sei 
\begin_inset Formula $f_{G}:G\rightarrow\left[1,n\right]^{d}$
\end_inset

 eine geeignete Kodierung der höchstens 
\begin_inset Formula $n^{d}$
\end_inset

 Gates von 
\begin_inset Formula $\mathcal{C}_{n}$
\end_inset

, und 
\begin_inset Formula $f_{W}:\left[1,n^{d}\right]\rightarrow\left[1,n\right]^{d}$
\end_inset

 eine Kodierung von Zahlen, so dass für 
\begin_inset Formula $\bar{g},\bar{h},\bar{w}\in\left[0,n\right]^{d}$
\end_inset

:
\begin_inset Formula 
\begin{eqnarray*}
\mathbf{BIT}\left(n\right)\models\varphi_{G}\left[\bar{g}\right] & \Leftrightarrow & f_{G}^{-1}\left(\bar{g}\right)\in G\\
\mathbf{BIT}\left(n\right)\models\varphi_{W}\left[\bar{h}\bar{g}\bar{w}\right] & \Leftrightarrow & \mathcal{W}\left(f_{G}^{-1}\left(\bar{h}\right),f_{G}^{-1}\left(\bar{g}\right)\right)=f_{W}^{-1}\left(\bar{w}\right)\\
\mathbf{BIT}\left(n\right)\models\varphi_{\Omega}\left[\bar{t}\bar{g}\right] & \Leftrightarrow & \Omega\left(\bar{t}\right)=f_{G}^{-1}\left(\bar{g}\right)\\
 &  & \mathrm{für}\,\bar{t}\in\left[1,n\right]^{k}\\
\mathbf{BIT}\left(n\right)\models\varphi_{\phi}\left[\bar{g}\right] & \Leftrightarrow & \Sigma\left(f_{G}^{-1}\left(\bar{g}\right)\right)=\phi\\
 &  & \mathrm{für}\,\phi\in\mathbb{B}\uplus\left\{ \mathbf{0},\mathbf{1},\mathtt{NOT}\right\} \\
\mathbf{BIT}\left(n\right)\models\varphi_{R}\left[\bar{g}\bar{x}\right] & \Leftrightarrow & \Sigma\left(f_{G}^{-1}\left(\bar{g}\right)\right)=R\bar{x}\\
 &  & \mathrm{für}\,R/m\in\sigma,\,\bar{x}\in\left[1,n\right]^{m}
\end{eqnarray*}

\end_inset


\end_layout

\begin_layout Proof
[...]
\end_layout

\begin_layout Chapter
Grenzen der Symmetrischen Schaltkreisfamilien
\end_layout

\begin_layout Standard
Wir weisen nach, dass die symmetrischen 
\begin_inset Formula $\mathrm{AC}^{0}$
\end_inset

-Schaltkreisfamilien eine echte Teilmenge der Anfragen beschreiben, die
 durch 
\begin_inset Formula $\mathrm{AC}^{0}$
\end_inset

 definierbar sind.
\end_layout

\begin_layout Standard
Hierfür verwenden wir die Charakterisierung aus Theorem 
\begin_inset CommandInset ref
LatexCommand ref
reference "thm:fo"

\end_inset

 von symmetrischem 
\begin_inset Formula $\mathrm{AC}^{0}$
\end_inset

 durch die Logik 
\begin_inset Formula $\mathrm{FO}+\mathbf{ARB}$
\end_inset

, die Charakterisierung von 
\begin_inset Formula $\mathrm{AC}^{0}$
\end_inset

 durch die arb-invariante 
\begin_inset Formula $\mathrm{FO}\left(\mathrm{arb}\right)$
\end_inset

-Logik, und ein Problem, dass die Ausdrucksstärke dieser beiden Logiken
 voneinander trennt.
\end_layout

\begin_layout Lemma

\series bold
\begin_inset CommandInset label
LatexCommand label
name "lem:Anderson,-Melkebeek,-Schweikardt"

\end_inset

Anderson, Melkebeek, Schweikardt und Segoufin (2012)
\series default

\begin_inset CommandInset citation
LatexCommand cite
key "AMSS-locality"

\end_inset


\end_layout

\begin_layout Lemma
Die Klasse 
\begin_inset Formula $\mathrm{AC}^{0}$
\end_inset

 ist äquivalent zu der Klasse der durch arb-invariante 
\begin_inset Formula $\mathrm{FO}\left(\mathrm{arb}\right)$
\end_inset

-Logik definierbaren Anfragen.
\end_layout

\begin_layout Standard
Der verwendete Teil des Beweises (hier nicht ausgeführt) ist die Konstruktion
 der Formel für eine beliebige 
\begin_inset Formula $\mathrm{AC}^{0}$
\end_inset

-Schaltkreisfamilie.
 Dazu wird jeder Schaltkreis in eine alternierende Normalform gebracht,
 wonach jeder der 
\begin_inset Formula $\left|\mathcal{C}\right|^{T\left(\mathcal{C}\right)}$
\end_inset

 Wege von einem Input zu einem Output durch ein numerisches Tupel kodiert
 wird (die Relation dieser Wege ist ein numerisches Prädikat und daher in
 
\begin_inset Formula $\mathrm{FO}\left(\mathrm{arb}\right)$
\end_inset

-Logik verwendbar).
 Die Formel muss dann nur noch über jede der alternierenden Ebenen des Schaltkre
ises quantifizieren (mit 
\begin_inset Formula $\exists$
\end_inset

 für 
\begin_inset Formula $\mathtt{OR}$
\end_inset

, und 
\begin_inset Formula $\forall$
\end_inset

 für 
\begin_inset Formula $\mathtt{AND}$
\end_inset

), und berechnet so die Auswertung von 
\begin_inset Formula $\mathcal{C}$
\end_inset

.
\end_layout

\begin_layout Standard
Aus dem Lemma lesen wir direkt ab, dass 
\begin_inset Formula $\mathrm{FO}+\mathbf{ARB}$
\end_inset

 in der arb-invarianten 
\begin_inset Formula $\mathrm{FO}\left(\mathrm{arb}\right)$
\end_inset

-Logik enthalten ist (und beweisen somit Teil 1 des Theorems 
\begin_inset CommandInset ref
LatexCommand ref
reference "thm:fo-arb"

\end_inset

): Eine 
\begin_inset Formula $\mathrm{FO}+\mathbf{ARB}$
\end_inset

-Formel ist per Theorem 
\begin_inset CommandInset ref
LatexCommand ref
reference "thm:fo"

\end_inset

) durch eine symmetrische 
\begin_inset Formula $\mathrm{AC}^{0}$
\end_inset

-Schaltkreisfamilie beschreibbar, und die symmetrische 
\begin_inset Formula $\mathrm{AC}^{0}$
\end_inset

-Schaltkreise sind per Definition in 
\begin_inset Formula $\mathrm{AC}^{0}$
\end_inset

 enthalten.
\end_layout

\begin_layout Standard
Für den echten Einschluss (Teil 2 des Theorems 
\begin_inset CommandInset ref
LatexCommand ref
reference "thm:fo-arb"

\end_inset

) benötigen wir eine Anfrage, die durch eine arb-invariante 
\begin_inset Formula $\mathrm{FO}\left(\mathrm{arb}\right)$
\end_inset

-Formel beschrieben wird, jedoch nicht in 
\begin_inset Formula $\mathrm{FO}+\mathbf{ARB}$
\end_inset

 definierbar ist.
 Per Lemma 
\begin_inset CommandInset ref
LatexCommand ref
reference "lem:Anderson,-Melkebeek,-Schweikardt"

\end_inset

 ist diese Anfrage in 
\begin_inset Formula $\mathrm{AC}^{0}$
\end_inset

, aber per Theorem 
\begin_inset CommandInset ref
LatexCommand ref
reference "thm:fo"

\end_inset

 nicht im symmetrischen Teil von 
\begin_inset Formula $\mathrm{AC}^{0}$
\end_inset

 beschreibbar.
\end_layout

\begin_layout Lemma
Es existiert eine Graph-Anfrage 
\begin_inset Formula $q$
\end_inset

, die durch eine definierbar ist.
\end_layout

\begin_layout Proof
Es sei [...]
\end_layout

\begin_layout Standard
\begin_inset Newpage pagebreak
\end_inset


\end_layout

\begin_layout Standard
\begin_inset CommandInset bibtex
LatexCommand bibtex
btprint "btPrintAll"
bibfiles "master"
options "plain"

\end_inset


\end_layout

\begin_layout Standard
\begin_inset Newpage pagebreak
\end_inset


\end_layout

\begin_layout Chapter*
Erklärung
\end_layout

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
addcontentsline{toc}{chapter}{Erklärung}
\end_layout

\end_inset


\end_layout

\begin_layout Standard
Gemäß der Ordnung für den Masterstudiengang Informatik, § 24 Abs.
 12 bestätige ich hiermit, dass ich die vorliegende Arbeit selbständig ohne
 fremde Hilfe angefertigt und nur die angegebenen Hilfsmittel verwendet
 habe.
\end_layout

\begin_layout Standard
\begin_inset VSpace 2em
\end_inset


\end_layout

\begin_layout Standard
Frankfurt, den 
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
today
\end_layout

\end_inset


\end_layout

\begin_layout Standard
\begin_inset VSpace 5em
\end_inset


\end_layout

\begin_layout Standard
Christoph Burschka
\end_layout

\end_body
\end_document
